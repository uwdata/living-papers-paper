{
  "metadata": {
    "author": [
      {
        "name": "Anonymous Author"
      }
    ],
    "keywords": [
      "live programming",
      "visual programming",
      "end-user programming",
      "composition",
      "computational notebooks",
      "GUIs"
    ],
    "output": {
      "api": true,
      "ast": {
        "space": "2"
      },
      "html": {
        "minify": false,
        "styles": "styles.css",
        "theme": "acm"
      },
      "latex": {
        "template": "acm-article"
      }
    },
    "title": "Composable Live Programming with Engraft"
  },
  "article": {
    "type": "component",
    "name": "article",
    "children": [
      {
        "type": "component",
        "name": "abstract",
        "children": [
          {
            "type": "component",
            "name": "p",
            "children": [
              {
                "type": "textnode",
                "value": "Live, interactive tools can support a diversity of domain-specific programming tasks, from visualization authoring to data wrangling. Real-world programming, however, requires performing multiple tasks in concert, calling for the use of multiple tools alongside conventional code. Programmers lack environments capable of composing live tools to support these situations. To enable live composability, we contribute Engraft, an API for the Web platform that allows live tools to be embedded within larger live-programming environments like computational notebooks. Engraft enables several new forms of composition: not only embedding live tools inside live environments, but also embedding live environments within each other and embedding live environments in the outside world, including conventional codebases. We demonstrate Engraft with examples from diverse domains, including web-application development and physics education. By providing composability, Engraft can help cultivate a cycle of use and innovation in live programming."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "h1",
        "properties": {
          "id": {
            "type": "value",
            "value": "introduction"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Introduction"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "People use a vast range of rich, specialized computer interfaces in daily life. We use spreadsheets to track accounts, graphics editors to create images, and timeline views for video editing. These interfaces are crafted around their domains, offering representations that afford direct manipulation and meaningful feedback."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Turning our gaze to programming, this richness disappears. Conventionally, programming takes place in a uniform world of textual code.\nParsing text, processing images, building a visualization, and chaining steps of a process are all distinct tasks, but a programmer’s screen looks the same no matter which they are working on. "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "Domain-specific"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " languages can offer separate dialects for these separate situations, but even with DSLs, programming still takes on a textual form, deprived of the direct manipulation and live feedback that characterize everyday computer use."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Alternatives to textual code have been explored since the advent of interactive computing. Some of the earliest user interfaces developed were visual programming languages, using formalisms like flow charts to define programs "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "Ellis1969THEGP"
                  },
                  "index": {
                    "type": "value",
                    "value": 9
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.7249/RM6001"
                  },
                  "index": {
                    "type": "value",
                    "value": 10
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". In this paper, we build on work in "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "live programming"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1016/S1045-926X(05)80012-6"
                  },
                  "index": {
                    "type": "value",
                    "value": 43
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ": "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "programming tools which provide immediate feedback on the dynamic behavior of a program even while programming"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.22152/programming-journal.org/2019/3/1"
                  },
                  "index": {
                    "type": "value",
                    "value": 35
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ".\nLive programming aims to provide the immediate feedback that we expect from rich computer applications. Live programming might be most helpful via a rich variety of domain-specific tools, with particular tools crafted to help programmers accomplish particular tasks. For example:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Gneiss "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1184/R1/6714389.V1"
                      },
                      "index": {
                        "type": "value",
                        "value": 4
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " is a tool for making interactive, data-driven web applications through direct manipulation."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Lyra "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1111/cgf.12391"
                      },
                      "index": {
                        "type": "value",
                        "value": 37
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", Data Illustrator "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1145/3173574.3173697"
                      },
                      "index": {
                        "type": "value",
                        "value": 22
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", and Charticulator "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1109/TVCG.2018.2865158"
                      },
                      "index": {
                        "type": "value",
                        "value": 36
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " are visualization authoring systems that let authors create expressive data visualizations without using traditional code."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Wrangler "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1145/1978942.1979444"
                      },
                      "index": {
                        "type": "value",
                        "value": 17
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " is a programming-by-demonstration interface for data wrangling. With it, users can define complex scripts to clean up and reshape tabular data by directly manipulating a table, rather than writing lines of code."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "These tools use novel techniques to make programming tasks concrete, visible, and approachable. However, while particular tools may find their niches, the role of interactive tools in programming "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "at large"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " remains marginal. Programmers may go their entire careers without leaving the world of static text. Furthermore, the potential of live tools to extend programming power from trained software engineers to end-users in diverse disciplines remains unrealized. What fundamental limitations do live-programming systems have today which, if addressed, might bring them into broad use?"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "We contend that a main factor limiting real use of live programming tools is their present lack of "
              },
              {
                "type": "component",
                "name": "em",
                "children": [
                  {
                    "type": "textnode",
                    "value": "composability"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " Conventional programming derives its power in large part from composability. This composability is so fundamental to programming that we take it for granted. We assume that "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "of course"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " we can combine multiple Python libraries when we write our scripts, and nest our "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "if"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " statements and "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "for"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " loops however we like. The ability to freely combine building blocks is what makes programming a medium with infinite expressive potential."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This composability does not exist in the world of rich user interfaces, including live-programming tools. As an example, suppose a digital artist wants to make a website that displays summaries of random Wikipedia articles."
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "This use-case is inspired by "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "everest"
                  },
                  "mode": {
                    "type": "value",
                    "value": "inline-author"
                  },
                  "index": {
                    "type": "value",
                    "value": 32
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", a live-tweeted coding adventure."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " This project involves multiple steps:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ol",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Call the Wikipedia API to get raw data about articles."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Process a JSON response to extract out relevant information."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Format this information into an attractive web page."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "Host the above process on a publicly available site."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This workflow is heterogeneous. We can imagine separate live-programming tools for each of these steps, like a tool which displays a JSON structure and lets a user pick the information they want (for step 2), and a tool which lets a user build a data-backed web page through direct manipulation (for step 3). Could the artist use such tools together to accomplish their larger goal?\nRight now, they can not. Ad-hoc approaches are possible, including tools that generate code or hard-wired tool assemblies for specific workflows, but none of these can replicate the free-form composability of conventional code without losing liveness and immediacy."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "We envision general-purpose programming systems combining three essential elements. Many systems combine two of these elements, but few research systems—and none in common use—include all three:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "strong",
                "children": [
                  {
                    "type": "textnode",
                    "value": "Liveness:"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " Feedback about the program’s dynamic behavior deeply permeates the programming experience."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "strong",
                "children": [
                  {
                    "type": "textnode",
                    "value": "Domain-specific richness:"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " Programmers use interactive representations designed for the domains they work with."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "strong",
                "children": [
                  {
                    "type": "textnode",
                    "value": "Composability:"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " Tools can be freely combined to support diverse workflows and accomplish larger goals."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "We present "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ","
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "Grafting is "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "a horticultural technique whereby tissues of plants are joined so as to continue their growth together"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "wikipedia-grafting"
                      },
                      "index": {
                        "type": "value",
                        "value": 47
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ". This provides an apt analogy for the way Engraft allows trees of heterogeneous live tools to work together."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " a system for live composition of live, domain-specific tools and environments. Engraft takes the form of an API on the Web platform. An Engraft-compatible tool follows a standard interface for embedding, allowing it to be embedded together with other tools within live environments like notebooks. In this way, disparate task-specific tools can be joined together to solve real problems, while maintaining liveness among them."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "A number of key design decisions shape the Engraft API.\nEngraft tools are given "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "freedom of implementation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". A tool must implement a common interface, but its internal implementation is otherwise unconstrained.\nEngraft tools "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "can be embedded anywhere in the Web platform"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", including embeddings inside "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "other tools"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", as well as in diverse applications and development contexts.\nEngraft tools communicate with their hosts using "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "streams of pure values"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". A tool is given values by its host and it provides values in return.\nEngraft tools expose "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "computational and UI behaviors, with computational behavior primary"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". An Engraft tool can run without rendering any UI, but not visa versa.\nFinally, Engraft tools "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "are not required to generate or edit underlying textual code"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". Engraft explores a vision of live programming untethered from a textual-code source of truth."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "By following these decisions, Engraft enables "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "three forms of composition"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", all of which are underexplored and two of which are novel:"
          }
        ]
      },
      {
        "type": "component",
        "name": "div",
        "properties": {
          "class": {
            "type": "value",
            "value": "table-three-forms"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "div",
            "properties": {
              "class": {
                "type": "value",
                "value": "table-three-forms-wrapper"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "table",
                "children": [
                  {
                    "type": "component",
                    "name": "thead"
                  },
                  {
                    "type": "component",
                    "name": "tbody",
                    "children": [
                      {
                        "type": "component",
                        "name": "tr",
                        "children": [
                          {
                            "type": "component",
                            "name": "td",
                            "properties": {
                              "class": {
                                "type": "value",
                                "value": "center"
                              }
                            },
                            "children": [
                              {
                                "type": "component",
                                "name": "image",
                                "properties": {
                                  "width": {
                                    "type": "value",
                                    "value": "500"
                                  },
                                  "src": {
                                    "type": "value",
                                    "value": "assets/tool legos - tools on env.svg.png"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "component",
                            "name": "td",
                            "children": [
                              {
                                "type": "component",
                                "name": "strong",
                                "children": [
                                  {
                                    "type": "textnode",
                                    "value": "Live tools inside live environments:"
                                  }
                                ]
                              },
                              {
                                "type": "textnode",
                                "value": " The goal already described: joining task-specific tools together in a shared live environment."
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "component",
                        "name": "tr",
                        "children": [
                          {
                            "type": "component",
                            "name": "td",
                            "properties": {
                              "class": {
                                "type": "value",
                                "value": "center"
                              }
                            },
                            "children": [
                              {
                                "type": "component",
                                "name": "image",
                                "properties": {
                                  "width": {
                                    "type": "value",
                                    "value": "500"
                                  },
                                  "src": {
                                    "type": "value",
                                    "value": "assets/tool legos - env on env.svg.png"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "component",
                            "name": "td",
                            "children": [
                              {
                                "type": "component",
                                "name": "strong",
                                "children": [
                                  {
                                    "type": "textnode",
                                    "value": "Live environments inside live environments:"
                                  }
                                ]
                              },
                              {
                                "type": "textnode",
                                "value": " Environments can embed in other live environments, with nested scopes at multiple levels in the programming process."
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "component",
                        "name": "tr",
                        "children": [
                          {
                            "type": "component",
                            "name": "td",
                            "properties": {
                              "class": {
                                "type": "value",
                                "value": "center"
                              }
                            },
                            "children": [
                              {
                                "type": "component",
                                "name": "image",
                                "properties": {
                                  "width": {
                                    "type": "value",
                                    "value": "500"
                                  },
                                  "src": {
                                    "type": "value",
                                    "value": "assets/tool legos - tool on world.svg.png"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "component",
                            "name": "td",
                            "children": [
                              {
                                "type": "component",
                                "name": "strong",
                                "children": [
                                  {
                                    "type": "textnode",
                                    "value": "Live tools inside the outside world:"
                                  }
                                ]
                              },
                              {
                                "type": "textnode",
                                "value": " Engraft tools (including environments) can be embedded into applications or codebases."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "summary-of-contributions"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Summary of Contributions"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "We identify "
              },
              {
                "type": "component",
                "name": "em",
                "children": [
                  {
                    "type": "textnode",
                    "value": "composability"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " as an essential element missing from the current live-programming ecosystem."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "We articulate three forms of composition that are necessary for live programming to match conventional programming in expressiveness and practical utility."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "We present a model for an API with which heterogeneous live tools can be composed together via the three forms of composition we articulated."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "We present our prototype of this API, called Engraft, together with an assortment of example tools that showcase interaction styles that might be used in tools in the future."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "We show, through examples, how our prototype makes a variety of programming activities visible and interactive."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "h1",
        "properties": {
          "id": {
            "type": "value",
            "value": "related-work"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Related Work"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft combines three essential elements: "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "liveness"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "domain-specific richness"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "composability"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". Each of these elements have long histories in the literature, though it is rare for all three to be combined at once ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "venn"
              }
            }
          },
          {
            "type": "textnode",
            "value": ").\nWe first look at pairwise combinations of these elements, then discuss the special triple intersection consisting of projects most similar to Engraft."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "venn"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "500"
              },
              "latex:width": {
                "type": "value",
                "value": "0.7\\columnwidth"
              },
              "src": {
                "type": "value",
                "value": "assets/venn-2.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "Pairwise and three-way intersections between liveness, domain-specific richness, and composability."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{The three categories are presented as circles in a Venn diagram. The intersection between \"Liveness\" and \"Domain-specific richness\" contains Gneiss, Lyra, and Wrangler. The intersection between \"Liveness\" and \"Composability\" contains Subtext, Observable, and Projection Boxes. The Intersection between \"Domain-specific richness\" and \"Composability\" contains MPS, Graphite, and Racket macros. Finally, the central three-way intersection contains Engraft, mage, and livelits.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "liveness-domain-specific-richness"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Liveness + Domain-specific richness"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft is inspired by domain-specific programming tools like Gneiss "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1184/R1/6714389.V1"
                  },
                  "index": {
                    "type": "value",
                    "value": 4
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", Lyra "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1111/cgf.12391"
                  },
                  "index": {
                    "type": "value",
                    "value": 37
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and Wrangler "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/1978942.1979444"
                  },
                  "index": {
                    "type": "value",
                    "value": 17
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". These tools replace complex, opaque programming processes with direct interactions. To achieve this, they leverage novel programming paradigms (such as Gneiss’s extensions of the spreadsheet model) and interaction techniques (such as Wrangler’s use of "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "programming by demonstration"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "). We see enormous potential in tools like these."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "However, these tools are fundamentally isolated. The challenge of combining them, or integrating them into conventional programming systems, undermines the benefits of their liveness, and arguably limits their use. Lacking such composability, developers of novel interactive programming tools have taken a variety of ad-hoc approaches to integrate them into larger workflows."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "One approach is simply "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "copy-paste"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". For example, "
          },
          {
            "type": "component",
            "name": "link",
            "properties": {
              "href": {
                "type": "value",
                "value": "https://regex101.com/"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "regex101"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "link",
            "properties": {
              "href": {
                "type": "value",
                "value": "https://www.debuggex.com/"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Debuggex"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and "
          },
          {
            "type": "component",
            "name": "link",
            "properties": {
              "href": {
                "type": "value",
                "value": "https://regexr.com/"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "RegExr"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " offer live debuggers, visualizers, and documentation to help programmers write regular expressions. These tools are not integrated with developer tools like IDEs. One simply copies regular expressions in and out as needed.\nThough quite a bit more complex than a regular-expression helper, Wrangler "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/1978942.1979444"
                  },
                  "index": {
                    "type": "value",
                    "value": 17
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " similarly "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "integrates"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " with larger programming tasks via "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "copy-paste"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " of generated code.\nAlthough this works, consider what is lost."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "There is a loss of "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "liveness"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". In a copy-paste system, the user must provide sample input by hand. This tedious extra step is a place where mistakes can be propagated if the user’s assumptions about what the input data looks like do not match reality.\nThere is also a loss of "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "persistence"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". With one of these online tools, a programmer may curate a set of test inputs, but this ensemble is not persisted when the regular expression is copy-pasted back to code.\nFinally, there is a loss of "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "collocation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". Using an online tool requires leaving the application code and entering a new space. With this comes a potential for disorientation and distraction."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Academic researchers developing novel interactive programming tools have generally not focused attention on how they might be integrated into larger programming workflows, preferring to focus on the tools themselves.\nFurthermore, even if tool-makers go beyond the call of duty and build tight integrations into larger environments, these integrations will be "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "ad-hoc"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". They must be built from scratch, as was done to integrate Voyager "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3025453.3025768"
                  },
                  "index": {
                    "type": "value",
                    "value": 48
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " into JupyterLab. Generally, integrations must be built separately for each development environment.\nIn contrast, Engraft provides a single API that tools and hosts can use for live, fully persistent, collocated embedding."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "composability-liveness"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Composability + Liveness"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Next, we consider systems combining composability and liveness,"
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "Some systems are live only in that they display the output of a program, and try to update this display in response to changes in the program. Examples include "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "live reloading"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " and "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "hot reloading"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " systems popular for application development. These are at the coarser end of a scale measuring the "
              },
              {
                "type": "component",
                "name": "em",
                "children": [
                  {
                    "type": "textnode",
                    "value": "granularity"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " of liveness. At the other end of the scale are systems that exhibit fine-grained liveness: making visible the dynamic behavior of smaller programming constructs like intermediate values and control flow."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " albeit without domain-specific richness. Most live programming editors fall into this space. We place these into three categories:"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Liveness within textual code."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " One common recipe is to augment textual-code editors with in-context displays showing run-time behavior. Rauch et al.’s "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "Babylonian-style Programming"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.22152/programming-journal.org/2019/3/9"
                  },
                  "index": {
                    "type": "value",
                    "value": 34
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " surveys the state of the art in this category as of 2012. They evaluate eight existing editors "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/1052883.1052894"
                  },
                  "index": {
                    "type": "value",
                    "value": 6
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "light-table"
                  },
                  "index": {
                    "type": "value",
                    "value": 13
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/2814189.2817268"
                  },
                  "index": {
                    "type": "value",
                    "value": 15
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "seymour"
                  },
                  "index": {
                    "type": "value",
                    "value": 18
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "live-literals"
                  },
                  "index": {
                    "type": "value",
                    "value": 42
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "inventing-on-principle"
                  },
                  "index": {
                    "type": "value",
                    "value": 45
                  }
                }
              },
              {
                "type": "textnode",
                "value": ", "
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "learnable-programming"
                  },
                  "index": {
                    "type": "value",
                    "value": 46
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", before adding their own to the list. Notable entrants to this category since 2012 include Swift Playgrounds in Xcode "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "swift-playgrounds"
                  },
                  "index": {
                    "type": "value",
                    "value": 2
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and Projection Boxes "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3313831.3376494"
                  },
                  "index": {
                    "type": "value",
                    "value": 21
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". These editors imbue conventional textual code with powerful new forms of visibility. As they restrict their attention to this conventional textual code, they do not provide opportunities for rich task-specific representations and interactions."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Liveness between textual code cells."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " Rather than threading live feedback into traditional codebases, other editors provide special interfaces where code is broken up into "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "cells"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". These editors can then provide visibility into values flowing between cells. We call such editors "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "live environments"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", as they provide liveness to environments where pieces of code are composed. The paradigmatic live environment is the spreadsheet. More recent live environments include Observable "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "observable"
                  },
                  "index": {
                    "type": "value",
                    "value": 27
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and Natto "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "natto"
                  },
                  "index": {
                    "type": "value",
                    "value": 40
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", which both augment JavaScript programming in-the-small with a live structure in-the-large: Observable via a computational notebook and Natto via nodes and wires on a canvas. While environments like these play an important role in building programs with Engraft, they do not, by themselves, enable natural domain-specific interactivity. Specifically: (1) Cells can render UI, but this UI cannot persistently modify program state."
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "Observable and Natto have both implemented particular, ad-hoc tools that can persist state: Observable’s Data Table Cell "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "observable-data-table-cell"
                      },
                      "index": {
                        "type": "value",
                        "value": 28
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " and Natto’s Template Panes. These extensions are built into their respective platforms and can access capabilities that are not available to user-authored tools."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " (2) They do not support hierarchical nesting of tools. (3) They are both monolithic web applications which cannot themselves be embedded into other live environments or outside applications."
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "Observable notebooks and Natto canvases can be invoked via JavaScript module export, but someone using this export cannot see their own inputs flowing through the notebook/canvas, nor do they have the ability to modify the notebook/canvas’s behavior in context."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Liveness with structured editors."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " Finally, we have "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "structured"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", or "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "projectional"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", editors which are not based on textual code or cells thereof, but which instead allow interactions directly with structured representations of code. Many structured-editor projects involve live feedback, including Enso "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "enso"
                  },
                  "index": {
                    "type": "value",
                    "value": 11
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", Lamdu "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "lamdu"
                  },
                  "index": {
                    "type": "value",
                    "value": 23
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", PANE "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "pane"
                  },
                  "index": {
                    "type": "value",
                    "value": 14
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and Subtext "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/1094811.1094851"
                  },
                  "index": {
                    "type": "value",
                    "value": 7
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". To our knowledge, no live structured editor projects have added custom domain-specific components to their structures, though it would seem to be a natural direction."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "composability-domain-specific-richness"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Composability + Domain-specific richness"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The final pairing integrates domain-specific representations and interactions into general-purpose programming environments, albeit static ones. A number of projects have explored this possibility.\n"
          },
          {
            "type": "component",
            "name": "citeref",
            "properties": {
              "key": {
                "type": "value",
                "value": "doi:10.1145/3428290"
              },
              "mode": {
                "type": "value",
                "value": "inline-author"
              },
              "index": {
                "type": "value",
                "value": 1
              }
            }
          },
          {
            "type": "textnode",
            "value": " describes a visual macro system for Racket which lets users define interactively editable visual syntaxes embedded inside of arbitrary Racket code.\nGraphite "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1109/VLHCC.2011.6070422"
                  },
                  "index": {
                    "type": "value",
                    "value": 29
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " extends a Java IDE with pop-up "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "palettes"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to bidirectionally edit literals in code.\nMPS (Meta Programming System) "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "mps"
                  },
                  "index": {
                    "type": "value",
                    "value": 16
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is a workbench for developing projectional domain-specific languages. MPS languages typically look mostly like conventional code, but they can embed custom interfaces like tables and state-machine diagrams."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "These approaches differ from Engraft along many axes, but by far the most salient is their lack of liveness. In all the above cases, visual representations embedded in code represent static syntax, and do not show information about dynamic program behavior. All of the tools in Engraft benefit from liveness, and some, like "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", derive their entire power from allowing the user to act directly on data in the system. These sort of tools are not possible in a system without liveness."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "all-three"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Combining All Three"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft joins two recent projects that combine liveness, domain-specific richness, and composability: mage "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3379337.3415842"
                  },
                  "index": {
                    "type": "value",
                    "value": 19
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " ("
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "an API for allowing smooth transitions between GUI and code work in notebooks"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ") and Hazel’s livelits "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3453483.3454059"
                  },
                  "index": {
                    "type": "value",
                    "value": 31
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " ("
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "user-defined GUIs embedded persistently into code"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ").\nThese projects share both motivations and common design elements with Engraft. However, Engraft goes beyond them by enabling new forms of composition."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "While mage and livelits support joining tools together in a shared live environment, Engraft further supports embedding environments within environments, and embedding live tools within the outside world.\nBecause its API is tied to its Jupyter host, mage tools cannot be embedded within each other, but must follow the flat structure of a Jupyter Notebook."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Unlike mage tools, livelits are nestable within each other and other Hazel "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3290327"
                  },
                  "index": {
                    "type": "value",
                    "value": 30
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " constructs, but a smaller variety of tools are possible than with mage or Engraft.\nLive environments like notebooks can not serve as livelits, as livelits’ typing discipline is not expressive enough to represent these dynamic environments."
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "The Hazel environment itself can be embedded in livelits, but this still means that developers do not have the benefit of experimenting with alternative live environments."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "\nLivelits, as the name "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "live literals"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " suggests, have so far been restricted to widgets like sliders and color pickers.\nEngraft supports a broader range of tools, from nestable environments like "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to programming-by-demonstration tools like "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft also differs from livelits in our implementation strategy. While livelits are built in Hazel, a self-contained research platform, Engraft is built in the Web platform, where it can grow through contact with actual use."
          }
        ]
      },
      {
        "type": "component",
        "name": "h1",
        "properties": {
          "id": {
            "type": "value",
            "value": "live-composability-with-engraft"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Live Composability with Engraft"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "As we previewed in the introduction, Engraft enables three forms of live composition: "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "live tools inside live environments"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "live environments inside live environments"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "live tools inside the outside world"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". Our initial work on Engraft was driven by the first of these. The architecture that we designed in response to this goal proved to be more versatile than we expected, enabling the last two as an emergent byproduct. In retrospect, we believe all three of these forms will be important to make programming with live tools a viable alternative to static code."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This section describes the end-user experience of building programs with Engraft, making use of these three forms of composition. Later, in "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "design-decisions"
              }
            }
          },
          {
            "type": "textnode",
            "value": " and "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "implementation"
              }
            }
          },
          {
            "type": "textnode",
            "value": ", we discuss the design and implementation of the underlying Engraft API."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "live-tools-inside-live-environments"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Live tools inside live environments"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Earlier, we presented an example of a digital artist who wants to make a website that displays summaries of random Wikipedia articles. Let’s examine how this artist might accomplish their goal by composing live tools together in a live environment with Engraft."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "They start by loading the Graft Garden website. This is a web application which provides a convenient starting point for using Engraft tools. Graft Garden will also host the output of these tools as a separate web page, as we will see later."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Once the artist tells Graft Garden to make a new project, they are presented with a blank page ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "new_patch"
              }
            }
          },
          {
            "type": "textnode",
            "value": "), containing a single small code-editor box, called a "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "slot"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". This slot is the starting point for everything they will do."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "new_patch"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-07-48.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A new "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "patch"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " (project) on Graft Garden."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A minimalist webpage in a browser. The webpage's header contains the heading \"graft garden\" and a text box with \"randompedia\" typed into it. The main body of the webpage contains a slot: a small box with a dashed border. Next to the slot is a note of guidance: \"start here!\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The artist knows that their project will involve combining together multiple steps. So they would like to work in a "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "live environment"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " that allows multiple computational steps to be combined together in fluid and flexible ways. Example environments include computational notebooks (like Observable), free-form canvases of nodes and wires (like Natto), and spreadsheets (like Excel).\nEngraft is not built around any one of these environments in particular. As versions of all of these have been implemented as Engraft tools, the artist can take their pick of whichever suits their needs."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "In this case, the artist picks a computational notebook. They do this by beginning to type "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "/notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " in the slot, and selecting "
          },
          {
            "type": "component",
            "name": "quote",
            "properties": {
              "class": {
                "type": "value",
                "value": "single"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " from the autocomplete menu that pops up. Once they do this, the slot is replaced with the notebook interface ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "type_notebook"
              }
            }
          },
          {
            "type": "textnode",
            "value": ")."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "type_notebook"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "45%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-08-22.png"
              }
            }
          },
          {
            "type": "textnode",
            "value": "\n"
          },
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "45%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-08-35.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "The artist begins to type "
              },
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "/notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " into the slot, and selects the autocomplete suggestion. A notebook is inserted into the slot."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{Two subfigures. The first subfigure shows the \"Graft Garden\" webpage. The slot now contains typed text \"/not\". An autocomplete pop-up next to it shows a highlighted option \"/notebook\" and a second option \"/notebook-canvas\". In the second subfigure, the slot is replaced with a larger box, the \"Notebook\" tool. This tool has a lavender border, and a small heading at the top reading \"notebook\". Inside the tool is a single row, consisting of 1. a small token reading \"A\", 2. a small slot identical to the original one, and 3. the text \"no output yet\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This is a reactive notebook in which a user can type code snippets into cells. The notebook will evaluate these snippets and show their resulting values alongside the cells ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "example_notebook"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). Cells receive default names (like in a spreadsheet), but can be renamed. Cells can refer to one another, and the notebook ensures that a cell is re-evaluated when one of its references changes."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "example_notebook"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "300"
              },
              "latex:width": {
                "type": "value",
                "value": "6cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-10-21.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "Example usage of a notebook. The second cell (B) refers to the first (A)."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{The slot next to the \"A\" label reads \"100\", with blue output text 100 next to it. The slot next to the \"B\" label reads \"A * 5\" (where \"A\" is represented as a special token), with blue output text 500 next to it.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Let’s return to the artist. The first thing they need to do is get hold of data from the Wikipedia API. Rather than write networking code directly, they type "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "/request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " into the first cell, and select "
          },
          {
            "type": "component",
            "name": "quote",
            "properties": {
              "class": {
                "type": "value",
                "value": "single"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " from the autocomplete menu that pops up. This inserts a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool into the cell. The notebook’s cells are slots, just like the root slot the artist used to invoke the notebook."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool has two slots: one to provide a URL and one to provide an object of query parameters ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "request_tool"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). As the artist skims the Wikipedia API documentation, they experiment with different query parameters. The tool resends the query with every change, so the artist can see the effects of their changes live."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "request_tool"
          },
          "class": {
            "type": "value",
            "value": "figure"
          },
          "position": {
            "type": "value",
            "value": "h"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "500"
              },
              "latex:width": {
                "type": "value",
                "value": "10cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-17-23.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Request"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool inserted into the notebook. The artist has provided contents for its "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "url"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " and "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "params"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " slots. The request’s JSON response is shown to the right. Long string values are automatically placed in scrolling sub-windows."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A notebook is shown with one row visible. This row contains 1. a small token labelled \"response\", 2. an embedded \"Request\" tool, and 3. a large JSON output, with nested objects and arrays. The embedded \"Request\" tool has the same kind of frame as the original notebook, although it is labelled \"request\" at the top. Inside, there are two slots, one labelled \"url\" and the second labelled \"params\". A checked checkbox at the bottom is labelled \"auto-send on\", alongside a button labelled \"send now\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Just like a snippet of code typed into a computational notebook, the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool produces "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "output"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", which is returned to the notebook that hosts it. The notebook can then display this output live, and make it available to other cells by reference."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Examining the output, and playing with query parameters, the artist eventually finds a configuration they like. It delivers five random articles, complete with titles and HTML-summary "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "extracts"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "While the artist can see the data they want in the API response, the task of extracting it out of the complicated JSON structure is a bit intimidating. Fortunately, they know a second tool, called the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool"
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Extractor"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " is similar to an interaction found in Gneiss "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1184/R1/6714389.V1"
                      },
                      "index": {
                        "type": "value",
                        "value": 4
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "extractor_tool"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). This tool accepts JSON data as input and presents an interface that allows the user to select data values by clicking on those values directly. The tool generalizes from these clicks, providing an output structure with the values the user wants. The result is equivalent to writing code that loops over arrays and objects with chains of property accesses."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "extractor_tool"
          },
          "class": {
            "type": "value",
            "value": "figure"
          },
          "position": {
            "type": "value",
            "value": "h"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "500"
              },
              "latex:width": {
                "type": "value",
                "value": "10cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-18-42.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "An "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Extractor"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool inserted into the notebook below the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Request"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool. It refers to the previous cell as input. The artist has selected various data fields by clicking on them. The tool’s output is shown to the right."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A single row of a notebook is visible. This row contains 1. a small token labelled \"pages\", 2. an embedded \"Extractor\" tool, and 3. a smaller JSON output, consisting solely of an array of objects each of which have \"title\" and \"extract\" fields. The embedded \"Extractor\" tool has a slot at the top labelled \"input\", with a small \"prev\" token inside it. Below this, it has a table labelled \"patterns\", containing one \"pattern\" for \"title\" and a second for \"extract\". Finally, the tool shows a copy of the data output from the previous \"Request\" tool, but this time with certain fields deep in the data's hierarchy highlighted.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This tool is more interesting, in its liveness, than the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool. The "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool offered a convenient form interface for specifying a request, but that interface was structurally similar to working with code. In contrast, the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool’s interface relies on live input data to support programming-by-demonstration."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Now that the artist has extracted the data they care about, they want to reshape it into an attractive interface. For this they use a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool"
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Formatter"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " is similar to a (second) interaction found in Gneiss "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "doi:10.1184/R1/6714389.V1"
                      },
                      "index": {
                        "type": "value",
                        "value": 4
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", and is also inspired by Yoshiki Schmitz’s work "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "yoshiki"
                      },
                      "index": {
                        "type": "value",
                        "value": 38
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "formatter_tool"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). Given a JavaScript data structure, "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " automatically suggests a way to format the data into HTML output. It also provides direct-manipulation handles the user can use to choose different options for this formatting. Like "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " uses live data to power a programming-by-demonstration interface. The artist hands "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " the output of "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and does a bit of clean-up."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "formatter_tool"
          },
          "class": {
            "type": "value",
            "value": "figure"
          },
          "position": {
            "type": "value",
            "value": "h"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "500"
              },
              "latex:width": {
                "type": "value",
                "value": "10cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-19-26.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Formatter"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool inserted into the notebook below the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Extractor"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool. It refers to the previous cell as input. The artist has used its interface (including an inspector on the left) to specify how the extracted data should be formatted. The tool output is shown to the right."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A single row of a notebook is visible. This row contains 1. a small token labelled \"formatted\", 2. an embedded \"Formatter\" tool, and 3. an output containing a formatted Wikipedia summary, with a heading \"Astley Abbotts\" and rich text beneath. The embedded \"Formatter\" tool has a slot at the top labelled \"input\", with a small \"prev\" token inside it. Below this, it has a custom interface. The interface shows roughly the same formatted display mentioned before, but with nested brackets around parts of it, showing a hierarchy. Most of these brackets are gray, but one is highlighted blue. On the left-hand side, a simple inspector allows properties of this bracket to be edited, such as selecting the tag type \"h2\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The artist has now built a live computational notebook, consisting of three live tools:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ol",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "a "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Request"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool, to get data from the Wikipedia API,"
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "an "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Extractor"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool, to pluck out the data they need in a clean format, and"
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "a "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Formatter"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool, to shape the data into an HTML document with the appearance they desire."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The last step is to "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "deploy"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " this living program to a website, where a visitor will receive their own random set of articles. Conveniently, Graft Garden, the web application that has hosted their work so far, has already done this. The output of the last cell in the notebook (the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", in this case) is returned back to Graft Garden. Graft Garden provides a shareable link that displays this final return value without visible tool UI ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "randompedia"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). Note that the Wikipedia articles shown here are different than above, as the artist’s program runs anew every time this page is loaded."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "randompedia"
          },
          "class": {
            "type": "value",
            "value": "figure"
          },
          "position": {
            "type": "value",
            "value": "h"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "latex:width": {
                "type": "value",
                "value": "8cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-09-20-21-21.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "The artist’s final creation: a dynamic website invisibly powered by their Engraft program. It is available at a separate URL."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A webpage with a funky heading \"Randompedia\". Below this, two Wikipedia summaries are visible, one for \"Tritium radioluminescence\" and a second for \"Seema Pujare\". They appear like the output of the \"Formatter\" tool, but no tools are shown on this page.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Our artist has not had to type any code to create this dynamic web page, aside from experimenting with API query parameters. A "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "results not typical"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " disclaimer applies here: In most cases, more JavaScript coding will be required to accomplish real-world programming goals with Engraft. This fits with our vision, as Engraft is built to gradually extend conventional programming workflows. There should be nothing stopping a user from using traditional textual code whenever it is useful or necessary to do so. But when using Engraft, a new possibility opens up: replacing certain steps with interactive, direct-manipulation tools."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "In the story above, the artist chose to compose their tools inside of a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". As we mentioned earlier, this is not the only live environment an Engraft user may choose to use. For different tasks, different environments may be preferred."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Suppose a user wants to construct an arrow graphic to represent a vector of x- and y-values, perhaps as part of an interactive explanatory diagram. "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "notebook_vs_canvas"
              }
            }
          },
          {
            "type": "textnode",
            "value": " shows how they might do this in a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". It then shows the same logical structure expressed in a new environment (loosely modeled on Natto "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "natto-hn"
                  },
                  "index": {
                    "type": "value",
                    "value": 39
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "A more ambitious adaptation of Natto, which could also be implemented with Engraft, would connect cells with wires rather than references."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "), called a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "NotebookCanvas"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". Cells on a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "NotebookCanvas"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " work the same way as on a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", but they can be freely dragged around a canvas and resized however the user likes."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "notebook_vs_canvas"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "30%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-10-16-54-40.png"
              }
            }
          },
          {
            "type": "textnode",
            "value": "\n"
          },
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "65%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-10-16-58-15.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "(a) A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " in which a user builds an arrow graphic for a vector. (b) A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "NotebookCanvas"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " consisting of the same cells, but arranged spatially."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{Subfigure (a): A notebook with six cells. The notebook builds up a simple arrow shape in pieces, starting from xy data. The intermediate shapes are shown as cell output. The cells mostly contain JavaScript code, though one uses two sliders to specify x and y, and another uses a color picker. These interfaces are embedded in code with the same frames we have seen before, marking them as Engraft tools. Subfigure (b): The six cells from the notebook are now placed on a gray canvas background. Each is now a pane, consisting of a name token, a definition cell, and an output display in a column. They are different sizes, and spaced somewhat irregularly on the canvas.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The user might choose to use "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "NotebookCanvas"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " over "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " for a number of reasons: higher visual density, space to organize nonlinear data-flows, and a looseness that avoids some "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "negative effects of prematurely or unnecessarily imposing a structure"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1023/A:1008716330212"
                  },
                  "index": {
                    "type": "value",
                    "value": 41
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". The user has this choice because Engraft decouples tools from environments, making it possible to choose the right environment for the job without losing access to the right tools."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "live-environments-inside-live-environments"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Live environments inside live environments"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Live environments are powerful building blocks for live programming. The above example uses a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to link together three live tools. However we have found that one environment, by itself, is often not enough, because a single environment is "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "flat"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To explain what we mean by "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "flat"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", suppose an Observable user has an array of complex data elements. They would like to process each element of this array to obtain a new version of the array, a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " operation. They are free, in Observable, to write a cell that performs this map operation:"
          }
        ]
      },
      {
        "type": "component",
        "name": "codeblock",
        "children": [
          {
            "type": "textnode",
            "value": "newArray = oldArray.map((element) => {\n    return step3(step2(step1(element)));\n});"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Here, the per-item processing function is complex, consisting of multiple steps (function calls). A selling point of a computational notebook is that it can split separate steps into separate cells, providing visibility into intermediate values. Here, Observable’s interface is not available "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "inside"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " this map operation, because the entire map operation needs to be inside a single cell. The benefits of liveness and visibility that Observable offers are lost in this deep structure. Observable is "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "flat"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and programming, in general, is not."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "In contrast, the Engraft architecture suggests that environments could themselves implement the API of an Engraft tool, becoming tools themselves. This means that live environments can be embedded inside of other live environments, allowing these environments to reflect a nested structure in the computation being performed."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "For instance, we have built a tool called "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", designed to support a user mapping through an array. "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " takes an input array and provides a slot for a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "per-item tool"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " shows the per-item tool being run on a single element of the array, so that the user has concrete data to inform their experience of live-programming the per-item tool. The user can use "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "’s interface to select which element of the array they would like to use as their example, so they can test that their per-item tool performs well across variations. To compute its final output, "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " also runs a copy of the per-item tool on each element of the input array, though most of these executions are invisible. (This is a good example of why it is important that tools can run without their interfaces being rendered.)\n"
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "map_tool"
              }
            }
          },
          {
            "type": "textnode",
            "value": " shows a notebook embedded inside of "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", so that multiple stages in the per-item tool can be examined live as they are programmed."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "map_tool"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "400"
              },
              "latex:width": {
                "type": "value",
                "value": "8cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-10-15-25-48.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A toy example, showing "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " inside of "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Map"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " inside of "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ". "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Map"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " has been given the array "
              },
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "[0,1,2,3,4]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " as input. Its inner notebook squares an item of an array and then adds 10, in two separate cells. The user has selected index 2 in the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Map"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool as the example they would like to display in the inner notebook."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{The new visual element here is the \"Map\" tool. It shows a slot labelled \"input\", containing the raw code \"[0,1,2,3,4]\". Next to this is a bar of five small boxes, labelled 0, 1, 2, 3, and 4. The box labelled 2 is highlighted in teal. A teal trapezoid below it connects this box to a much larger box with a white background and a teal border. At the top of this box is a line associating a token labelled \"item\" with a blue output \"2\" with an equation symbol. Below this is the notebook described in the caption. (The first row of the notebook uses a token labelled \"item\".)}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To see "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " used in a real-world context, let’s look at an "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "image quilt"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " generator made with Engraft ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "image_quilt"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). Starting with a user-supplied query, like "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "abstract"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " or "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "cat"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", this web application displays a dense array of annotated artworks."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "image_quilt"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "400"
              },
              "latex:width": {
                "type": "value",
                "value": "8cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-10-15-30-17.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "The image quilt application, displayed in Graft Garden’s "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "view"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " mode. The images shown are a result of the user typing "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "abstract"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " into the search box."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A minimalist webpage without any tool UI or headings. At the top, a large text box contains the text \"abstract\". Below this is a tightly-packed grid of modern-art images. Each one contains an artist's name in the top-left and an artwork name in the bottom-right.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The Engraft program behind this application starts by querying the Art Institute of Chicago API for matching works of art. This returns an array of objects representing works of art. To make the quilt, we need to turn each element of this array into a composite of image and text. We can do this with "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "image_quilt_program"
              }
            }
          },
          {
            "type": "textnode",
            "value": ")."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "image_quilt_program"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "600"
              },
              "latex:width": {
                "type": "value",
                "value": "0.9\\columnwidth"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-08-26-21-05-32.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "An excerpt of the program used to generate the image quilt. A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Map"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool takes in an array of data returned by the Art Institute of Chicago API. A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " embedded inside the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Map"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " processes each element of this array. In three cells, it 1. constructs an image URL, 2. loads this URL into an image element, to check that it is constructed correctly, and 3. builds a composite, layering text on top of the image element with appropriate styling."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A screen-sized \"map\" tool, with the same overall structure as the one shown before. The top of the teal box shows that \"item\" is a particular JavaScript object, with fields like \"artist_title\" and \"title\". The notebook below shows results for a particular abstract artwork.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "By splitting the per-item process into multiple steps in the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", we receive immediate feedback about each step. Is the URL of the image being generated correctly? How does the composite look with its current styling? (One can certainly imagine this composition step being replaced someday with a direct-manipulation tool!) Once the array of HTML elements is returned by "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", it can finally be composed into the quilt."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Programming is full of nested abstractions, so mapping an array is only one example of where it can be valuable to nest environments. As a very different example, consider programming a physics simulation. We are inspired here by the Bootstrap curriculum, which uses programming to teach algebra, physics, and computation to students in grades 5-12 "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "bootstrap"
                  },
                  "index": {
                    "type": "value",
                    "value": 3
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". We adopt a functional structure for our simulations similar to Bootstrap’s "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "reactor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.22152/programming-journal.org/2019/3/11"
                  },
                  "index": {
                    "type": "value",
                    "value": 33
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", where a simulation is defined by:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "a "
              },
              {
                "type": "component",
                "name": "em",
                "children": [
                  {
                    "type": "textnode",
                    "value": "state"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " value, initialized to a certain value,"
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "a way to "
              },
              {
                "type": "component",
                "name": "em",
                "children": [
                  {
                    "type": "textnode",
                    "value": "view"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " the state, and"
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "a way to "
              },
              {
                "type": "component",
                "name": "em",
                "children": [
                  {
                    "type": "textnode",
                    "value": "update"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " the state on each time step."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "A tool called "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " lets a user define each of these pieces in slots. It can be useful to insert a live environment into one of these slots – say, to break down the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "update"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " into steps. Here, a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " in the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "update"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " slot of a "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " describes a bouncing ball behavior ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "simulation"
              }
            }
          },
          {
            "type": "textnode",
            "value": ")."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "simulation"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "450"
              },
              "latex:width": {
                "type": "value",
                "value": "9cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-08-26-23-35-28.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Simulation"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool, loaded with code that describes how a ball bounces around a rectangular region. The user of the tool has provided 1. init: a slot to initialize the ball’s state, 2. view: a slot describing how the state should be rendered, and 3. update: a slot ("
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", here) describing how the state should be updated on each tick of time. The user has scrubbed the step slider to step 8, at which point the ball is bouncing off the rectangle’s right-hand side."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{The \"init\" slot contains code defining fields \"x\", \"y\", \"vx\", and \"vy\" and setting them to random values. The \"view\" slot contains code with XML tags defining a SVG element containing a circle and a line. Attributes of these elements sometimes extract fields of embedded tokens labelled \"state\". The \"update\" slot contains a notebook. It's four cells are labelled \"new pos\", \"x bounce\", \"y bounce\", and \"cell\". The \"new pos\" cell adds the state's velocity to its position. The \"x bounce\" and \"y bounce\" cells test if the ball has moved outside of the box, and return \"true\" or \"false\". In this case, \"x bounce\" returns \"true\". The \"cell\" cell inverts x or y velocity if a bounce occurs. In this case, it has inverted the x velocity. To the right of a step slider, a box shows the SVG output, in this case, a ball mostly off the right-hand side of a box, with a small line showing its velocity.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "By dragging the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "step"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " slider, the user can see the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "view"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "update"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " in the context of that particular step. Here, for instance, we see that the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "x bounce"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " cell in the notebook has evaluated to "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "true"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", so its x velocity will be inverted in the next step, as it bounces off the right-hand side of the box. Scrubbing through the time steps with the slider, the user can check that the pieces of their computation do what they expect, even as conditions change."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " could have been implemented as a top-level application, rather than a tool. But implementing it as a tool provides even more benefits. In the example above, "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is in fact embedded in a larger "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "notebook"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " (not shown). This larger notebook provides the shared variables "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "width"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "height"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " that the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "’s different slots can refer to. The "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool also provides output of its own back to the "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "notebook"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ": a trace of all the states the simulation passes through. This trace can be used, live, in other cells to analyze the output of the simulation. Here, we feed it into a tool that embeds Voyager 2 "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3025453.3025768"
                  },
                  "index": {
                    "type": "value",
                    "value": 48
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", a system for visual data exploration. Using Voyager 2’s interface, the user plots the x position over time ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "simulation_voyager"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). The bounce after time-step 8 is visible in this plot in a new way."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "simulation_voyager"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "500"
              },
              "latex:width": {
                "type": "value",
                "value": "10cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-08-27-09-35-14.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Voyager"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool in the same "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " as the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Simulation"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ". It has been provided with the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Simulation"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "’s output as its input, and the user has dragged fields onto the encoding shelves to plot "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "x"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " against "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "i"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A tool, with the standard lavender border, labelled \"voyager\". At its top, a slot labelled \"input\" contains a token labelled \"prev\". Below this is the Voyager 2 interface: a large, complex interface which appears stylistically dissimilar to the interfaces shown so far. It contains bars labelled with different fields, like \"x\", \"vx\", etc. Under the heading \"Encoding\", a bar labelled \"i\" has been placed next to the label \"x\" and a bar labelled \"x\" has been placed next to the label \"y\". To the right, a chart is shown. It shows a zig-zag line made of dots and lines, representing the ball's x position over time. At around where the x-axis is labelled 8, the line changes from moving up to moving down.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "There is nothing special about the example situations described above. Nested structures are pervasive in programming. To provide the benefits of liveness & domain-specific richness across these nested structures, live environments must be similarly composable."
          }
        ]
      },
      {
        "type": "component",
        "name": "raw",
        "properties": {
          "format": {
            "type": "value",
            "value": "tex"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "\\FloatBarrier"
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "live-tools-inside-the-outside-world"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Live tools inside the outside world"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Given an Engraft slot, a programmer has access to the entire ecosystem of interoperable Engraft tools. But the question remains of how they get to that slot, and how the program in the slot gets things done in the larger world. Here, we discuss how the Engraft architecture makes it possible to embed live tools and environments where work is done in the real world. We focus on two categories of embeddings: codebases and applications."
          }
        ]
      },
      {
        "type": "component",
        "name": "h3",
        "properties": {
          "id": {
            "type": "value",
            "value": "codebases"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Codebases"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "So far, we have presented Engraft in the context of Graft Garden, a simple web application that hosts Engraft tools and lets users create custom web applications. While Graft Garden is easy to access and use, it naturally has a limited range of usefulness. We do not expect developers of complex web applications to abandon their preferred frameworks, throw out their codebases, and switch to Graft Garden (or any other imagined Engraft host, for that matter). However, we still believe that programmers working in codebases could benefit from the judicious use of live tools and environments, if this didn’t require switching entirely into a new, all-encompassing platform."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Fortunately, we have found that the structure of the Engraft ecosystem offers opportunities for integration with present programming practices. With these integrations, programmers can take advantage of what Engraft has to offer in an unobtrusive and gradual fashion."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "As an example of this, we prototyped embedding of Engraft tools into conventional web-application programming workflows. Specifically, we implemented a React "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "hook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " called "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "useLiveTool"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " which allows a live tool to be embedded into a React codebase. At development time, this hook presents the Engraft user interface running alongside a live version of the web application being developed ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "synonymizer"
              }
            }
          },
          {
            "type": "textnode",
            "value": "). Data is fed, live, from the web application being developed into the Engraft user interface. The results are fed, live, back to the web application. When the developer is done working with the tool, they can disable it from being displayed. In production, the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "computational behavior"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " of the tool is used without any visual presentation."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "synonymizer"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "src": {
                "type": "value",
                "value": "assets/2022-09-10-17-47-16.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A conventional web application, Synonymizer, developed with "
              },
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "useLiveTool"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ". Because "
              },
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "useLiveTool"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " is called with "
              },
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "hide:false"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", the live tool is displayed in the browser, to the right of the running application. Several live tools, including "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " and "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Extractor"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", are used in this side pane to transform an API response passed from the conventional code into the tool into a clean set of words that can be displayed on screen. The running app shows the live output from the tool."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A browser window is shown. On the left is a webpage, with heading \"SYNONYMIZER\", a text box underneath with \"fun\" typed into it, and a large number of synonyms of fun (like \"amusing\") displayed below at jaunty angles. On the right, a special pane contains a Notebook tool. Embedded in this Notebook is an Extractor tool. The Extractor shows its input, a Javascript structure containing arrays of words inside multiple levels of nested objects. Its output shows a simpler structure, with these objects stripped out. The words in the output match the words shown in the webpage on the left.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "codeblock",
        "children": [
          {
            "type": "textnode",
            "value": "const synonyms = useLiveTool(\n    { response },\n    { defaultValue: [], hide: false}\n);"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This is only one example of how Engraft could be embedded into existing development contexts. Different situations will call for different embeddings. For instance, someone writing a command-line program may want to write a particular function with Engraft. Because the command-line program runs imperatively, with side effects, it can not use "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "useLiveTool"
              }
            ]
          },
          {
            "type": "textnode",
            "value": "’s fully-reactive approach where the program re-runs as the user edits the function in Engraft. However, a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "programming with examples"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " approach "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/22627.22349"
                  },
                  "index": {
                    "type": "value",
                    "value": 26
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " could be employed, where the user gathers a number of input values for their function before iterating on their function’s implementation, testing it on examples as they go."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The design and implementation of these various embeddings will be nontrivial, as they must bridge gaps between a variety of programming paradigms and Engraft’s own reactive infrastructure. We discuss some of these challenges briefly in "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "technical-limitations"
              }
            }
          },
          {
            "type": "textnode",
            "value": ". However, Engraft’s loosely-coupled functional architecture puts it in a good position to take on these challenges."
          }
        ]
      },
      {
        "type": "component",
        "name": "h3",
        "properties": {
          "id": {
            "type": "value",
            "value": "applications"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Applications"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Codebases aside, we are also interested in ways interactive end-user applications can host Engraft tools. Graft Garden provides one example, but any application with access to the Web platform could provide an Engraft slot as an access point to the Engraft ecosystem."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "For instance, Cuttle "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "cuttle"
                  },
                  "index": {
                    "type": "value",
                    "value": 5
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", a vector editor for digital fabrication, currently has the ability to implement components and modifiers with bits of JavaScript code. If Cuttle’s code box were replaced with an Engraft slot, the world of Engraft programming tools would be available, in-place, to Cuttle users. ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "cuttle"
              }
            }
          },
          {
            "type": "textnode",
            "value": ")"
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "cuttle"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "src": {
                "type": "value",
                "value": "assets/2022-09-10-14-51-56.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A mockup of an imagined embedding of Engraft into Cuttle. The Engraft program defines a modifier in Cuttle which transforms an input heart shape into an array of rotated hearts."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{A web browser showing a vector-graphics app called Cuttle. On Cuttle's canvas, a pinwheel pattern of six hearts is visible. On a sidebar, a Engraft Notebook tool is embedded. Its styling is different from the application it is embedded in. It shows a Map tool operating on an input heart to rotate it into six different positions, producing the shape ultimately shown on Cuttle's canvas.}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "One can imagine applications farther from the world of programming, using Engraft to provide open-ended extensions of their own interfaces. An animation application’s easing-function editor and color picker could be implemented as Engraft slots prepared with default tools. Experienced users could then choose to remove these defaults and replace them with their own tools. In this way, Engraft could enable end-user customization, blurring the lines between application user and developer."
          }
        ]
      },
      {
        "type": "component",
        "name": "h1",
        "properties": {
          "id": {
            "type": "value",
            "value": "design-decisions"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Engraft Design Decisions"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The Engraft prototype was developed in accordance with five high-level design decisions."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To support open-ended experimentation in tools, "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft is defined as an open API, not a toolkit."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "\nEngraft tools can be implemented in any way, within the bounds of the Engraft API and the Web platform, adopting their own styling, interaction techniques, and implementation frameworks. A toolkit approach would prematurely lock in constraints on tools’ designs. An API approach also makes it possible to adapt existing tools to Engraft with minimal changes. As a test of this, we wrapped Voyager 2 "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3025453.3025768"
                  },
                  "index": {
                    "type": "value",
                    "value": 48
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", a system for visual data exploration, as an Engraft tool. "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "live-environments-inside-live-environments"
              }
            }
          },
          {
            "type": "textnode",
            "value": " shows how this opens up new use-cases for Voyager."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To connect with existing programming activity, and to enable new forms of composition, "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft is built on the Web platform."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "\nA large part of the computing world now exists on the Web platform. Engraft can be composed together with this existing activity, as we described in "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "live-tools-inside-the-outside-world"
              }
            }
          },
          {
            "type": "textnode",
            "value": ". In this way, Engraft tools can perform their own specialized roles in a larger ecosystem. This supports gradual adoption of Engraft, creating a feedback loop of development and use. Engraft’s use of the Web platform is also the basis for Engraft tools’ recursive composability: Engraft tools can host one another because they are both implemented on the Web platform and hosted by the web platform. Systems like mage "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3379337.3415842"
                  },
                  "index": {
                    "type": "value",
                    "value": 19
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", which do not support open-ended embedding of tools on the Web, lack this."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To support visibility and open-ended composability, "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "the Engraft API is based on streams of pure values."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "\nA tool’s host provides it with a set of variables bound to JavaScript values. The tool can, at any point, provide output (a JavaScript value or error) through a host-provided callback. We chose to base communication on a functional, value-oriented paradigm due to the success this paradigm has had in diverse contexts ranging from React to spreadsheets."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To support both live editing and serious computational use, "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft makes tool-running primary and tool-rendering secondary."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "\nThe Engraft API lets a tool run, taking in input from its host and returning output, without rendering any UI. As part of running, the tool offers its host an optional UI. In many situations, the host will use the option of "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "not"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " displaying a tool’s UI, such as when a codebase embeds a live tool in production or when a tool like "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " only renders an example instance of its body. By allowing tools to run invisibly, Engraft supports these serious computational uses. This relationship between running and displaying is not true the other way around: an Engraft tool’s UI "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "cannot"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " be displayed without running it. Requiring that tool developers create versions of their tools which can run in static environments would be a distraction from Engraft’s goal of supporting pervasively live programming."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To encourage innovative interactive tools, "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft tools are not required to generate or edit underlying textual code."
              }
            ]
          },
          {
            "type": "textnode",
            "value": "\nIn Engraft, a tool’s underlying state is not code, but a serializable JavaScript object we call its "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "program"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". This program can take any form, and can be interpreted in any way at runtime by the tool’s implementation. This stands in contrast to a common approach taken by live-programming systems, in which a live tool ultimately generates source code which defines its computational behavior, and is often expected to re-parse this code after it has been manually edited. While it is true in a technical sense that any serializable JavaScript object could be represented as textual code and visa versa, the two formats have different grains. In platforms based on tools generating textual code, tool designers are encouraged to make tools based on pre-existing code patterns. With Engraft, we want tool designers to start with a task, and freely determine their design without regard to textual-code idioms."
          }
        ]
      },
      {
        "type": "component",
        "name": "h1",
        "properties": {
          "id": {
            "type": "value",
            "value": "implementation"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Engraft Implementation Details"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "We now present implementation details of the Engraft prototype. We begin with a slightly idealized description of the Engraft API, before explaining a few deviations from this ideal, then go on to discuss the Engraft tool ecosystem."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "the-engraft-api"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "The Engraft API"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "An Engraft tool is implemented as a JavaScript class that abides by an interface that Engraft specifies. A host uses this interface to create and manage an instance of this tool it wants to embed. Since all tools abide by the same interface, a host that uses this interface can embed any tool."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "A tool class’s interface is centered around a particular bundle of "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "properties"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " that contains all the information a host provides to an embedded tool. When a host creates a tool instance, it provides it with a set of properties (1, below). The host can later call an "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "update"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " method on a tool instance to provide a new set of properties (2, below). Finally, the host can call a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "destroy"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " method when the tool is no longer needed (3, below)."
          }
        ]
      },
      {
        "type": "component",
        "name": "codeblock",
        "children": [
          {
            "type": "textnode",
            "value": "const toolInstance = new MyTool(properties);  // 1\ntoolInstance.update(newProperties);           // 2\ntoolInstance.destroy();                       // 3"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "The real content of the Engraft API lies in the fields of the properties object. They are as follows:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "program"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": The tool’s program, a serializable JavaScript object that defines its behavior."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "updateProgram"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": A callback the tool uses to request a change to its program."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "reportOutput"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": A callback the tool uses to report its output – a value or error."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "reportView"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": A callback the tool uses to report its view (UI)."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "varBindings"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": Bindings of variable ids & names to actual values, which the tool can immediately access."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "A tool with access to the above five values has everything it needs to operate. It can read in its program specification, grab bindings from the environment (if needed), perform computations, and report back output and a view. A reported view can display any information gathered during the tool’s execution, including intermediate values and final output. This view can also contain interactive controls which, when acted upon by the user, will trigger "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "updateProgram"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to modify the tool’s program."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This design was inspired by the component model of React "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "react"
                  },
                  "index": {
                    "type": "value",
                    "value": 24
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", a library for building user interfaces. React components offer a similar interface, in which a bundle of "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "props"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is provided by an owner when a component is created, and then updated whenever the owner re-renders. React offers a set of tools for efficiently managing recomputation when a component’s props change, including "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "hooks"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and higher-order components for memoization."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "React’s model fit Engraft’s needs well enough that we chose to implement our prototype system directly using React. This means that an Engraft tool is defined as a React component, rather than as the class we described above. Our use of React here is quite idiosyncratic. React components usually return trees of HTML elements, but in Engraft, it is essential that view behavior remain optional, and secondary to computational behavior. So Engraft tool components never directly return any HTML elements. When React "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "renders"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " a tool, it will construct an abstract tree that stores and maintains the state of the tool, together with the state of any subtools it may contain. These tools can then use callbacks provided as props to report output values and UI views back up the tree."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "In our use of React, the first four "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "properties"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " above are provided directly to tools as React "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "props"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". The last property, "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "varBindings"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is provided indirectly, using React’s "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "context"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " feature. By wrapping a React component in context, the entire subtree under this context gets access to this information. Since most tools pass down the bindings they receive from their parent unchanged to their children, context provides a better developer experience here than props."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "In addition to providing a React component (in lieu of the class we first described), a tool also provides a function called "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "programFactory"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " which is used to initialize a program for a new instance of the tool. To support the common pattern of a tool having a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "main input"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " which an environment may want to pre-populate, "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "programFactory"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " optionally accepts a string "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "defaultInputCode"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". This allows ergonomic interactions, such as new cells in a notebook automatically taking in the previous cell as input."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "For more details, the supplemental material includes example code for several small tools. React has served as a helpful infrastructure for Engraft; nevertheless, it may be worth reconsidering in future work, as it is a heavyweight, unorthodox dependency."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "slots-and-subtools"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Slots and Subtools"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Throughout this paper, we have shown Engraft programmers using "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "slots"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to compose nested programs. The "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Slot"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tool is the glue that holds together Engraft programs. It is a built-in tool that appears at first as a code editor. Arbitrary JavaScript can be entered into this code editor, where it is compiled, evaluated, and returned as output. References to Engraft variables can be inserted into this editor using an an auto-complete window. If a tool’s name is selected via auto-complete, the slot will be replaced with the tool, entering "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "subtool mode"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "adder_slots"
              }
            }
          },
          {
            "type": "textnode",
            "value": ")."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "adder_slots"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "20.5%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-08-16-48-21.png"
              }
            }
          },
          {
            "type": "textnode",
            "value": "\n"
          },
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "29.5%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-08-16-50-09.png"
              }
            }
          },
          {
            "type": "textnode",
            "value": "\n"
          },
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "40%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-08-16-50-46.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "A simple "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Adder"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool. Its "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "y"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " slot is provided with (a) a code snippet, (b) a reference to a variable provided by the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Adder"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "’s host, (c) a nested "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": "."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{The adder tool has two slots, labelled \"x\" and \"y\". In all three subfigures, the x slot contains the code \"10\". Subfigure (a): The y slot contains the code \"20 / 2\". Subfigure (b): The y slot contains a token labelled \"some variable\". Subfigure (c): The y slot contains an entire embedded subtool. It is a Notebook with one cell. The cell's slot contains the code \"20 / 2\", and the notebook shows that this evaluates to \"10\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "When "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Slot"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " renders a subtool, it provides it with a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "tool frame"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to identify it. On hover, the title bar of this frame also reveals a few buttons ("
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "tool_frame"
              }
            }
          },
          {
            "type": "textnode",
            "value": "):"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\textsf{cp}"
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "html"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "cp"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": Copy the tool’s program to the clipboard, so it can be pasted into a different location."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\textsf{i}"
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "html"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "i"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": Display a pop-up debugger window with information on the tool’s program and environment."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\textsf{x}"
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "html"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "x"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ": Remove the subtool, bring the slot back into code mode."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "tool_frame"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "250"
              },
              "latex:width": {
                "type": "value",
                "value": "5cm"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-08-16-53-15.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "The appearance of an "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Adder"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tool’s "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "tool frame"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " when its title bar is hovered, revealing three circular buttons."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{Next to the tool frame's label (reading \"adder\"), three small circles are visible. They are labelled \"cp\", \"i\", and \"x\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "We anticipate this frame will support additional general-purpose interactions in the future, such as "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "maximizing"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " a tool for focused work or "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "pinning"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " it to a sidebar."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Through the use of slots, a "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "tree of tools"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is formed during the use of Engraft. "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "fig"
              },
              "xref": {
                "type": "value",
                "value": "tree_of_tools"
              }
            }
          },
          {
            "type": "textnode",
            "value": " shows an example arrangement of tools together with a diagram of the resulting tree. Note, however, that there is no explicit reference to a tree of tools anywhere in the Engraft API or implementation. Rather, this tree emerges from the fact that a tool, like any other software system, is free to act as a host that embeds tools."
          }
        ]
      },
      {
        "type": "component",
        "name": "figure",
        "properties": {
          "id": {
            "type": "value",
            "value": "tree_of_tools"
          },
          "class": {
            "type": "value",
            "value": "figure"
          }
        },
        "children": [
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "40%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-08-16-46-22.png"
              }
            }
          },
          {
            "type": "textnode",
            "value": "\n"
          },
          {
            "type": "component",
            "name": "image",
            "properties": {
              "width": {
                "type": "value",
                "value": "50%"
              },
              "src": {
                "type": "value",
                "value": "assets/2022-09-08-16-47-13.png"
              }
            }
          },
          {
            "type": "component",
            "name": "caption",
            "children": [
              {
                "type": "textnode",
                "value": "(a) An arrangement of an "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Adder"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " nested in an "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Adder"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " nested in a "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Notebook"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ". (b) The tree of tools resulting from this arrangement. Note the "
              },
              {
                "type": "component",
                "name": "span",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "toolname"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Slot"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " tools, which provide the code-editors shown as leaves of the tree, as well as invisible intermediates between tools and their subtools."
              }
            ]
          },
          {
            "type": "component",
            "name": "raw",
            "properties": {
              "format": {
                "type": "value",
                "value": "tex"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "\\Description{Subfigure (a): A notebook contains a single cell, an Adder. This Adder has an x slot with \"3\", and a y slot with a nested Adder. This nested Adder has an x slot with \"10\", and a y slot with \"20\". Subfigure (b): A tree of abstract nodes, beginning with a chain of single-child nodes. A slot (in subtool mode) goes to a notebook, which goes to a slot (in subtool mode) which goes to an adder. This adder has two children: a slot with code \"3\" and a second adder. This second adder has two children: a slot with code \"10\" and a slot with code \"20\".}"
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Although it is not built into the Engraft API (which could theoretically be used without it), "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Slot"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " plays an essential role in the Engraft user experience. While the Engraft API provides the computational structures needed for open-ended composition, "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Slot"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " provides users with an interface that makes that composition accessible in practice."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "where-do-tools-come-from"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Where do tools come from?"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "We showed earlier how a tool can be implemented as a JavaScript module. This technical description raises a few questions:"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "How does a prospective tool user access one of these modules? In our current prototype, we side-step this question – all tools are bundled together with the Engraft system. For actual use, it will be important for tool creators to be able to post tools publicly and for tool users to be able to access them easily. One convenient approach would be to leverage existing package managers like NPM."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Does every tool need to be coded from scratch, by a developer intimately familiar with Engraft’s low-level API? Right now, yes. But we see a range of possibilities that would support more accessible tool creation. For instance:"
          }
        ]
      },
      {
        "type": "component",
        "name": "ul",
        "children": [
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "A user could build a composite of Engraft tools (e.g., a color picker built in a computational notebook) and then select parts of this composite to expose in a custom tool interface."
              }
            ]
          },
          {
            "type": "component",
            "name": "li",
            "children": [
              {
                "type": "textnode",
                "value": "A user could take an existing web-based tool, and then describe how it could be embedded into an "
              },
              {
                "type": "component",
                "name": "code",
                "children": [
                  {
                    "type": "textnode",
                    "value": "iframe"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " and driven to make it participate in the Engraft API."
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "At the same time, our preferred design is to build these higher level meta-tools on top of the minimal Engraft API, which we expect is general enough to support them."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "tools-built-so-far"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Tools built so far"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "To date, we have implemented a few dozen primitive tools with Engraft. The examples in "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "live-composability-with-engraft"
              }
            }
          },
          {
            "type": "textnode",
            "value": " highlight some of these: "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Notebook"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Request"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Extractor"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Formatter"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "NotebookCanvas"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Map"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Simulation"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Voyager"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". These examples also include "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Slider"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Color"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", and "
          },
          {
            "type": "component",
            "name": "span",
            "properties": {
              "class": {
                "type": "value",
                "value": "toolname"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Text"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " tools. Appendix "
          },
          {
            "type": "component",
            "name": "crossref",
            "properties": {
              "type": {
                "type": "value",
                "value": "sec"
              },
              "xref": {
                "type": "value",
                "value": "tool-menagerie"
              },
              "short": {
                "type": "value",
                "value": true
              }
            }
          },
          {
            "type": "textnode",
            "value": " includes pictures and brief descriptions of eight more tools.\nThese tools are all "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "sketches"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", intended to test the Engraft API’s design and to demonstrate its combinatorial possibilities. We expect that, with continued use, we will see both more polished and more radically divergent tools enter the Engraft ecosystem."
          }
        ]
      },
      {
        "type": "component",
        "name": "h1",
        "properties": {
          "id": {
            "type": "value",
            "value": "discussion"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Discussion"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Our starting point in this paper is a simple observation: In spite of enormous efforts from industry and academia spanning decades, live-programming tools are not a mainstream part of programming practice. To our knowledge, this fact has not found much discussion in the literature."
          },
          {
            "type": "component",
            "name": "note",
            "children": [
              {
                "type": "textnode",
                "value": "Tanimoto’s 2013 reflections on live systems "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "Tanimoto:2013:PEL"
                      },
                      "index": {
                        "type": "value",
                        "value": 44
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " includes a section on "
              },
              {
                "type": "component",
                "name": "quote",
                "children": [
                  {
                    "type": "textnode",
                    "value": "Criticisms of Liveness"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": ", though he quickly dismisses them in favor of a generally optimistic view. Lau’s short piece "
              },
              {
                "type": "component",
                "name": "citelist",
                "properties": {
                  "class": {
                    "type": "value",
                    "value": "cite-list"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "["
                  },
                  {
                    "type": "component",
                    "name": "citeref",
                    "properties": {
                      "key": {
                        "type": "value",
                        "value": "DBLP:journals/aim/Lau09"
                      },
                      "index": {
                        "type": "value",
                        "value": 20
                      }
                    }
                  },
                  {
                    "type": "textnode",
                    "value": "]"
                  }
                ]
              },
              {
                "type": "textnode",
                "value": " on why programming-by-demonstration systems (a related category) sometimes fail is insightful, but it focuses on AI-specific aspects and does not apply to live-programming systems in general."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " We believe that, given the enormous potential live programming might offer, this gap should be confronted head-on."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "This paper proposes "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "composability"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " as an essential element which must be combined with "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "liveness"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " and "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "domain-specific richness"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " to make alternatives to textual code effective in practice. We have presented Engraft: a prototype API which combines these three elements, enabling new forms of composition."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "While we expect the lack of adoption of live tools is due to many factors, and there is no silver bullet that will make live tools truly usable, we believe that the approach Engraft makes concrete is compelling and worth further exploration."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "risks"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Risks"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "There are numerous ways Engraft may fail to work in practice."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft is heterogeneous."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " We are excited by the prospect of Engraft fostering a vibrant, diverse, anarchic ecosystem of tools and environments. But our embrace of heterogeneous implementations carries liabilities. It might be challenging for users to learn new tools. It might be uncomfortable to work in a space that ties together discordant interfaces. Interoperability between tools might be a problem, since data exchange formats are not enforced."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft is untyped."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " Engraft is built off the Web platform, and embraces JavaScript’s highly dynamic, untyped style. This stands in contrast to the closely aligned livelits project "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1145/3453483.3454059"
                  },
                  "index": {
                    "type": "value",
                    "value": 31
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ", discussed earlier, which specifically builds on Hazel’s strong type discipline. Engraft may fail to scale to more complex work, if it turns out the benefits of static types are essential for managing this complexity. (We suspect that, in many cases, pervasive liveness forms an alternative to static types, but this is a speculative hypothesis.)"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft is non-textual."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " Engraft is, ultimately, a structured editor, as an Engraft program is not manipulated entirely as text. This is a fraught path. Plain-text interactions are familiar and well-polished by decades of computing. Structured editors can easily fail to match their fluidity and ergonomics, resulting in frustration from users. Textual code is also assumed by many important workflows, such as version control, and it is not immediately clear how these can be extended to non-textual programs. Recent work has sought to address some of these issues (such as "
          },
          {
            "type": "component",
            "name": "citeref",
            "properties": {
              "key": {
                "type": "value",
                "value": "restructuring-structured-editing"
              },
              "mode": {
                "type": "value",
                "value": "inline-author"
              },
              "index": {
                "type": "value",
                "value": 25
              }
            }
          },
          {
            "type": "textnode",
            "value": "’s work on token-level editing and "
          },
          {
            "type": "component",
            "name": "citeref",
            "properties": {
              "key": {
                "type": "value",
                "value": "image-based"
              },
              "mode": {
                "type": "value",
                "value": "inline-author"
              },
              "index": {
                "type": "value",
                "value": 8
              }
            }
          },
          {
            "type": "textnode",
            "value": "’s work on version control), but this is still an active area of research."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "Engraft tools are mostly isolated from one another."
              }
            ]
          },
          {
            "type": "textnode",
            "value": " An Engraft "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "tool"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is analogous to a function or other bit of syntax in a functional programming language. It can access bindings provided by its host, return a value back to the host, and that’s it. This design follows a traditional functional-programming discipline, which brings many advantages, but which also constrains the space of what a tool can be. An illustrative example comes from Gneiss "
          },
          {
            "type": "component",
            "name": "citelist",
            "properties": {
              "class": {
                "type": "value",
                "value": "cite-list"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "["
              },
              {
                "type": "component",
                "name": "citeref",
                "properties": {
                  "key": {
                    "type": "value",
                    "value": "doi:10.1184/R1/6714389.V1"
                  },
                  "index": {
                    "type": "value",
                    "value": 4
                  }
                }
              },
              {
                "type": "textnode",
                "value": "]"
              }
            ]
          },
          {
            "type": "textnode",
            "value": ". Gneiss combines three separate tools: an API query tool, a spreadsheet, and an interface builder. We wondered how Gneiss could be "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "unbundled"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " with Engraft, so that the tools that make it up could be used in new contexts and different tools could be brought into Gneiss’s context. We found that, while it is possible to construct a workflow similar to Gneiss in Engraft today, the experience does not perfectly replicate Gneiss. Gneiss uses interactions that tightly tie its different tools together, like dragging a JSON field from the API query tool directly to the spreadsheet. It also uses flows of data which are, from a functional-programming perspective, quite messy, such as cyclic data flow between the spreadsheet and the interface builder. These are not presently possible with Engraft. It remains to be seen whether a programming environment like Engraft, based on isolated functional tools, is adequate to produce a holistically rich programming experience, or what would need to be added to the Engraft model to make it so."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "technical-limitations"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Technical Limitations"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Aside from those large unknowns, we already anticipate some ways Engraft will need to be developed to support realistic use."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft’s "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "use of the Web platform"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is a source of much of its potential, but it also brings along tricky issues. Security is naturally a concern. Web-based programming platforms (like Observable and Natto) have had to put much effort into sandboxing, and we can expect Engraft’s flexibly-nested structures would make this all the more difficult. Another source of challenges is layout and styling. Engraft tools push the boundaries of UI frameworks, since tools act as heterogeneous composable application interfaces. CSS and the rest of the Web platform were not designed to support anything like this. They have worked well for prototyping so far, but careful work is required to find approaches that ensure the system stays robust, even as diverse tools are added."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft’s current "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "reactivity model"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is limited. Currently, communication between tools and hosts is a free-for-all. A host can deliver new values to a tool whenever it likes, and the tool can reply with output whenever "
          },
          {
            "type": "component",
            "name": "em",
            "children": [
              {
                "type": "textnode",
                "value": "it"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " likes. But there are situations where a greater degree of control is desirable. Certain hosts may want to run a tool synchronously, or run it asynchronously but in such a way that it can know for sure when the tool’s output is "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "up to date"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " with its inputs. Neither of these is possible right now. Changes to the reactivity model could also aid performance, as right now "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "glitches"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " can cause unnecessary computations on out-of-date inputs."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Engraft’s "
          },
          {
            "type": "component",
            "name": "strong",
            "children": [
              {
                "type": "textnode",
                "value": "embedding into conventional codebases"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " is incomplete, and there are details in the workflow that need working out. Many uses of live tools from conventional code will need forms of reactivity that are not currently supported, as described in the last paragraph. There are also questions around how the "
          },
          {
            "type": "component",
            "name": "quote",
            "children": [
              {
                "type": "textnode",
                "value": "program"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " of a live tool should be persisted. Currently, our prototype of "
          },
          {
            "type": "component",
            "name": "code",
            "children": [
              {
                "type": "textnode",
                "value": "useLiveTool"
              }
            ]
          },
          {
            "type": "textnode",
            "value": " simulates persistence by storing a tool’s program in the user’s web browser local storage. But for any real use, it will be important for this program to be stored as part of the web application’s codebase, where it can be delivered with the application for production use, checked into source control, etc. This means live tools will need to write back to the codebase during development. Careful engineering and design work is required here, as live tools are competing against refined and entrenched textual workflows."
          }
        ]
      },
      {
        "type": "component",
        "name": "h2",
        "properties": {
          "id": {
            "type": "value",
            "value": "future-work"
          }
        },
        "children": [
          {
            "type": "textnode",
            "value": "Future Work"
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "While Engraft has been prototyped well enough to allow experimental use, it has not reached a stage where research would benefit from broad promulgation and use in practice. This is especially true because Engraft takes the form of an API standard. If tools and hosts were built around one version of this API and then future discoveries suggested moving to a new version, effort would be wasted, incompatibilities would proliferate, and confidence would be undermined. Or, perhaps worse, dependencies on one version of Engraft’s design might discourage iteration and exploration of Engraft itself, prematurely locking in an underdeveloped design."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Given this, there are several appealing ways to continue developing and testing Engraft.\nOne is to dive into a particular domain where end-user programming feels like a bottleneck, partnering closely with practitioners to test and iterate on the design of Engraft as it applies to their work. Once Engraft’s design can be validated through successful application in multiple domains (say, both creative coding and data science), it may be ready to grow more openly."
          }
        ]
      },
      {
        "type": "component",
        "name": "p",
        "children": [
          {
            "type": "textnode",
            "value": "Another is to establish Engraft as an enabling platform for researchers developing experimental live tools. Suppose a researcher has an idea for a novel live tool. Without Engraft, they are in a tough spot. As effective as their tool may be for its task, evaluating the tool requires building enough complementary infrastructure that their novel tool can be demonstrated in an end-to-end workflow. This may involve a significant amount of work which is unrelated to the novel interactions they are exploring. If the researcher implements their tool on top of Engraft, however, they can test it in the context of all the tools, environments, and real-world embeddings that already exist in the Engraft ecosystem. We hope that, in this way, Engraft can lower the barrier to entry for live-tool research and accelerate innovation in this field."
          }
        ]
      },
      {
        "type": "component",
        "name": "appendix",
        "children": [
          {
            "type": "component",
            "name": "h1",
            "properties": {
              "id": {
                "type": "value",
                "value": "tool-menagerie"
              }
            },
            "children": [
              {
                "type": "textnode",
                "value": "Tool Menagerie"
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "225"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "4.5cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-12-23-51-47.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "Import"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " allows modules to be dynamically imported from NPM."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{The tool contains a text box labelled \"name\", with the text \"d3\" typed into it, and a button labelled \"import\".}"
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "501"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "10.3cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-13-00-09-07.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "File"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " lets the user upload a file into the browser by dragging and dropping it onto the tool. The file is then persistently saved in the Engraft program as a "
                  },
                  {
                    "type": "component",
                    "name": "code",
                    "children": [
                      {
                        "type": "textnode",
                        "value": "data"
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " URI string."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{This tool contains the label \"8167 characters\". The tool is embedded in a notebook, which shows that it outputs a long string starting \"data:image/jpeg;base64\" (a data URI). The next cell of the notebook applies this string as the `src` attribute of an HTML `img` tag. This cell's output is an image of a charming cat.}"
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "559"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "11.9cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-13-00-27-24.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "State"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " stores a piece of ephemeral state. It returns the current value of this state together with a setter. This can be used to implement stateful UIs."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{This tool contains blue output text, reading \"3\". It also contains a collapsed control labelled \"initial value...\". The tool is embedded in a notebook, which shows that it outputs a JavaScript object with two fields: \"get\", with the value \"3\", and \"set\", with a function value. The next cell of the notebook constructs an \"increment\" function, using \"get\" and \"set\". The final cell of the notebook constructs a \"counter\" button, which displays the value of \"get\" and calls increment when it is clicked.}"
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "485"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "9.7cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-13-00-17-44.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "Chalk"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " is a code editor that displays live values and errors inline."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{This tool contains a slot labelled \"input\", which contains a string literal \"David Attenborough\". Below this is a multi-line code editor, defining a function taking in an argument \"x\". The first line of the function reads \"const parts = x.split(' ');\". The expression \"x.split(' ')\" is underlined in purple, and a purple token after the end of the line is labelled \"['David', 'Attenborough']\". The next line similarly computes a variable, with its value shown in a purple token. The last line mistakenly calls \".joi\" on an array, causing a red token to be displayed with an error message at the end of the line.}"
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "400"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "8cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-13-00-34-17.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "Synthesizer"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " is a simple example-based program synthesizer, following the example of "
                  },
                  {
                    "type": "component",
                    "name": "citelist",
                    "properties": {
                      "class": {
                        "type": "value",
                        "value": "cite-list"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "["
                      },
                      {
                        "type": "component",
                        "name": "citeref",
                        "properties": {
                          "key": {
                            "type": "value",
                            "value": "doi:10.1145/3379337.3415869"
                          },
                          "index": {
                            "type": "value",
                            "value": 12
                          }
                        }
                      },
                      {
                        "type": "textnode",
                        "value": "]"
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": "."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{This tool contains a slot labelled \"input\", which contains a string literal \"Input Without Provided Output\". Below this is a table. The first column of the table contains input values. Arrows in each row map this first column to a second column, which contains output values. In the first two rows, the string \"George Washington Carver\" is mapped to \"GWC\", and \"David Attenborough\" is mapped to \"DA\". A third row, faded out, maps \"Input Without Provided Output\" to \"IWPO\". A button underneath the table is labelled \"Run\". Below this, the synthesized code \\verb|input.split(' ').map((x) => x[0]).join('')| is displayed.}"
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "450"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "9cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-12-23-45-52.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "Chain"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " is a minimalist live environment inspired by the data-first design of spreadsheets."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{This tool contains three square cells arranged in a tight row. The first square contains a small rendered square. The second contains a larger rendered square. The third contains the larger rendered square superimposed with a copy that has been rotated 45 degrees, forming an 8-pointed star. Beneath these cells are small bits of code in gray bars. The first reads \\verb|Diagram.rect()|. The second reads \\verb|Diagram.scale(_,1.| and is then cut off. The third is not very legible. The third bar is highlighted in light blue, and contains three buttons: \"x\", \"+\", and arrows. Underneath the row of cells, a formula editor is labelled \"fx\". The editor is a slot, and contains code roughly reading \\verb|combine(prev, Diagram.rotate(prev, 45))|.}"
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "name": "figure",
            "properties": {
              "class": {
                "type": "value",
                "value": "figure"
              },
              "position": {
                "type": "value",
                "value": "!htb"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "image",
                "properties": {
                  "width": {
                    "type": "value",
                    "value": "600"
                  },
                  "latex:width": {
                    "type": "value",
                    "value": "12cm"
                  },
                  "src": {
                    "type": "value",
                    "value": "assets/2022-09-13-00-53-46.png"
                  }
                }
              },
              {
                "type": "component",
                "name": "caption",
                "children": [
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "Function"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " can be used to define a function, using examples for live feedback. "
                  },
                  {
                    "type": "component",
                    "name": "quote",
                    "children": [
                      {
                        "type": "component",
                        "name": "span",
                        "properties": {
                          "class": {
                            "type": "value",
                            "value": "toolname"
                          }
                        },
                        "children": [
                          {
                            "type": "textnode",
                            "value": "Call"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "textnode",
                    "value": " can then be used to call the function."
                  }
                ]
              },
              {
                "type": "component",
                "name": "raw",
                "properties": {
                  "format": {
                    "type": "value",
                    "value": "tex"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "\\Description{These two tools are demonstrated in two cells of a notebook. The first cell contains a Function tool. At the top of this tool is a table of example inputs. The first column is unlabelled, and contains radio buttons. The second column is labelled with a token labelled \"name\", and contains the string literals \"David Attenborough\" and \"George Washington Carver\". The last column is labelled \"output\", and contains the string literals \"DA\" and \"GWC\". Beneath this table is a slot. This slot contains a notebook which, over multiple cells, splits up its input into initials. The outermost notebook shows that the output of the Function tool is a special gray \"function\" token. The second cell of this outermost notebook contains a Call tool. This tool contains a slot referring to the first cell, as well as a slot labelled \"name\" containing the string literal \"Miles Davis\". The outermost notebook shows that the output of the Call tool is the string \"MD\".}"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "component",
        "name": "references",
        "children": [
          {
            "type": "component",
            "name": "ol",
            "properties": {
              "class": {
                "type": "value",
                "value": "references"
              }
            },
            "children": [
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-0"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Andersen, L., Ballantyne, M., & Felleisen, M. (2020). Adding interactive visual syntax to textual code. Proceedings of the ACM on Programming Languages, 4(OOPSLA), 1–28. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3428290"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3428290"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-1"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Apple Inc. (2014). WWDC 2014. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://www.youtube.com/watch?v=w87fOAG8fjk"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://www.youtube.com/watch?v=w87fOAG8fjk"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-2"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Bootstrap. (2022). Bootstrap. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://bootstrapworld.org/index.shtml"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://bootstrapworld.org/index.shtml"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-3"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Chang, K. S.-P. (2016). A Spreadsheet Model for Using Web Services and Creating Data-Driven Applications. Carnegie Mellon University. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1184/R1/6714389.V1"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1184/R1/6714389.V1"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-4"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Cuttle Labs Inc. (2022). Cuttle - Design tool for digital cutting machines. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://cuttle.xyz/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://cuttle.xyz/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-5"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Edwards, J. (2004). Example centric programming. ACM SIGPLAN Notices, 39(12), 84–91. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/1052883.1052894"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/1052883.1052894"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-6"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Edwards, J. (2005, October 12). Subtext. Proceedings of the 20th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications. OOPSLA05: ACM SIGPLAN Object Oriented Programming Systems and Applications Conference. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/1094811.1094851"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/1094811.1094851"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-7"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Edwards, J., & Petricek, T. (2021). Typed Image-based Programming with Structure Editing. arXiv. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://arxiv.org/abs/2110.08993"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://arxiv.org/abs/2110.08993"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-8"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Ellis, T. O., Heafner, J. F., & Sibley, W. L. (1969). THE GRAIL PROJECT: AN EXPERIMENT IN MAN-MACHINE COMMUNICATIONS. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://www.rand.org/pubs/research_memoranda/RM5999.html"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://www.rand.org/pubs/research_memoranda/RM5999.html"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-9"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Ellis, T., Heafner, J., & Sibley, W. (1969). The GRAIL Language and Operations. RAND Corporation. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.7249/rm6001"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.7249/rm6001"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-10"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Enso. (2022). Enso. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://enso.org/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://enso.org/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-11"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Ferdowsifard, K., Ordookhanians, A., Peleg, H., Lerner, S., & Polikarpova, N. (2020, October 20). Small-Step Live Programming by Example. Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology. UIST ’20: The 33rd Annual ACM Symposium on User Interface Software and Technology. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3379337.3415869"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3379337.3415869"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-12"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Granger, C. (2022). Light Table. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "http://lighttable.com/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "http://lighttable.com/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-13"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Horowitz, J. (2018). PANE: Programming with Visible Data. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "http://joshuahhh.com/projects/pane/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "http://joshuahhh.com/projects/pane/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-14"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Imai, T., Masuhara, H., & Aotani, T. (2015, October 25). Shiranui: a live programming with support for unit testing. Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity. SPLASH ’15: Conference on Systems, Programming, Languages, and Applications: Software for Humanity. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/2814189.2817268"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/2814189.2817268"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-15"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "JetBrains s.r.o. (2022). MPS: The Domain-Specific Language Creator by JetBrains. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://www.jetbrains.com/mps/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://www.jetbrains.com/mps/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-16"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Kandel, S., Paepcke, A., Hellerstein, J., & Heer, J. (2011, May 7). Wrangler. Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. CHI ’11: CHI Conference on Human Factors in Computing Systems. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/1978942.1979444"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/1978942.1979444"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-17"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Kasibatla, S., & Warth, A. (2017). Seymour: Live Programming for the Classroom. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://harc.github.io/seymour-live2017/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://harc.github.io/seymour-live2017/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-18"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Kery, M. B., Ren, D., Hohman, F., Moritz, D., Wongsuphasawat, K., & Patel, K. (2020, October 20). mage: Fluid Moves Between Code and Graphical Work in Computational Notebooks. Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology. UIST ’20: The 33rd Annual ACM Symposium on User Interface Software and Technology. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3379337.3415842"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3379337.3415842"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-19"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Lau, T. (2009). Why Programming-By-Demonstration Systems Fail: Lessons Learned for Usable AI. AI Mag., 30(4), 65–67. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1609/aimag.v30i4.2262"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1609/aimag.v30i4.2262"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-20"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Lerner, S. (2020, April 21). Projection Boxes: On-the-fly Reconfigurable Visualization for Live Programming. Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems. CHI ’20: CHI Conference on Human Factors in Computing Systems. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3313831.3376494"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3313831.3376494"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-21"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Liu, Z., Thompson, J., Wilson, A., Dontcheva, M., Delorey, J., Grigg, S., Kerr, B., & Stasko, J. (2018, April 19). Data Illustrator. Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems. CHI ’18: CHI Conference on Human Factors in Computing Systems. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3173574.3173697"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3173574.3173697"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-22"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Lotem, E., & Chuchem, Y. (2022). Lamdu. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://www.lamdu.org/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://www.lamdu.org/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-23"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Meta Platforms, Inc. (2022). React – A JavaScript library for building user interfaces. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://reactjs.org/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://reactjs.org/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-24"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Moon, D., & Omar, C. (2021). Restructuring Structure Editing. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://tylr.fun/essay/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://tylr.fun/essay/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-25"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Myers, B. A. (1986). Visual programming, programming by example, and program visualization: a taxonomy. Proceedings of the SIGCHI Conference on Human Factors in Computing Systems  - CHI ’86. the SIGCHI conference. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/22627.22349"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/22627.22349"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-26"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Observable Inc. (2022). Observable - Explore, analyze, and explain data. As a team. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://observablehq.com/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://observablehq.com/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-27"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Observable Inc. (2022). Quickly Explore & Analyze Your Data With Data Table Cell / Observable / Observable. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://observablehq.com/@observablehq/introducing-data-table-cell"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://observablehq.com/@observablehq/introducing-data-table-cell"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-28"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Omar, C., YoungSeok Yoon, LaToza, T. D., & Myers, B. A. (2011, September). Active code completion. 2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). 2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2011). "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1109/vlhcc.2011.6070422"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1109/vlhcc.2011.6070422"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-29"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Omar, C., Voysey, I., Chugh, R., & Hammer, M. A. (2019). Live functional programming with typed holes. Proceedings of the ACM on Programming Languages, 3(POPL), 1–32. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3290327"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3290327"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-30"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Omar, C., Moon, D., Blinn, A., Voysey, I., Collins, N., & Chugh, R. (2021, June 18). Filling typed holes with live GUIs. Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation. PLDI ’21: 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3453483.3454059"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3453483.3454059"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-31"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Pipkin, E. (2021). been having some  motivation troubles  recently (god who hasn’t) so i’m gonna pick a tiny personal project off my ideas list and see if i can get it working by morning. tonight - a lil bash script that emails me the summaries of 5 random wikipedia articles each morning. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://twitter.com/everestpipkin/status/1349274983651012609"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://twitter.com/everestpipkin/status/1349274983651012609"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-32"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Politz, J., Lerner, B., Porncharoenwase, S., & Krishnamurthi, S. (2019). Event Loops as First-Class Values: A Case Study in Pedagogic Language Design. The Art, Science, and Engineering of Programming, 3(3). "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.22152/programming-journal.org/2019/3/11"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.22152/programming-journal.org/2019/3/11"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-33"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Rauch, D., Rein, P., Ramson, S., Lincke, J., & Hirschfeld, R. (2019). Babylonian-style Programming: Design and Implementation of an Integration of Live Examples into General-purpose Source Code. The Art, Science, and Engineering of Programming, 3(3). "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.22152/programming-journal.org/2019/3/9"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.22152/programming-journal.org/2019/3/9"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-34"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Rein, P., Ramson, S., Lincke, J., Hirschfeld, R., & Pape, T. (2018). Exploratory and Live, Programming and Coding. The Art, Science, and Engineering of Programming, 3(1). "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.22152/programming-journal.org/2019/3/1"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.22152/programming-journal.org/2019/3/1"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-35"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Ren, D., Lee, B., & Brehmer, M. (2019). Charticulator: Interactive Construction of Bespoke Chart Layouts. IEEE Transactions on Visualization and Computer Graphics, 25(1), 789–799. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1109/tvcg.2018.2865158"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1109/tvcg.2018.2865158"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-36"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Satyanarayan, A., & Heer, J. (2014). Lyra: An Interactive Visualization Design Environment. Computer Graphics Forum, 33(3), 351–360. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1111/cgf.12391"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1111/cgf.12391"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-37"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Schmitz, Y. (2019). I’ve been jamming on this concept for making data-driven designs... "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://twitter.com/yoshikischmitz/status/1176642448077967362"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://twitter.com/yoshikischmitz/status/1176642448077967362"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-38"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Shen, P. (2021). Show HN: Natto – a canvas for writing and manipulating JavaScript. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://news.ycombinator.com/item?id=26478548"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://news.ycombinator.com/item?id=26478548"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-39"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Shen, P. (2022). welcome! – natto. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://natto.dev/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://natto.dev/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-40"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Shipman, F. M., & Marshall, C. C. (1999). Formality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems. Computer Supported Cooperative Work (CSCW), 8(4), 333–352. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1023/a:1008716330212"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1023/a:1008716330212"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-41"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "van der Storm, T., & Hermans, F. (2016). Live Literals. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://homepages.cwi.nl/~storm/livelit/livelit.html"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://homepages.cwi.nl/~storm/livelit/livelit.html"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-42"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Tanimoto, S. L. (1990). VIVA: A visual language for image processing. Journal of Visual Languages & Computing, 1(2), 127–139. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1016/s1045-926x(05)80012-6"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1016/s1045-926x(05)80012-6"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-43"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Tanimoto, S. L. (2013). A Perspective on the Evolution of Live Programming. Proceedings of the 1st International Workshop on Live Programming, 31–34. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1109/LIVE.2013.6617346"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1109/LIVE.2013.6617346"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-44"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Victor, B. (2012). Inventing on Principle. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://vimeo.com/36579366"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://vimeo.com/36579366"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-45"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Victor, B. (2012). Learnable Programming. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "http://worrydream.com/LearnableProgramming/"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "http://worrydream.com/LearnableProgramming/"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-46"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Wikipedia contributors. (2022). Grafting — Wikipedia, The Free Encyclopedia. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://en.wikipedia.org/w/index.php?title=Grafting&oldid=1095365064"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://en.wikipedia.org/w/index.php?title=Grafting&oldid=1095365064"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "component",
                "name": "li",
                "properties": {
                  "id": {
                    "type": "value",
                    "value": "ref-47"
                  }
                },
                "children": [
                  {
                    "type": "textnode",
                    "value": "Wongsuphasawat, K., Qu, Z., Moritz, D., Chang, R., Ouk, F., Anand, A., Mackinlay, J., Howe, B., & Heer, J. (2017, May 2). Voyager 2. Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems. CHI ’17: CHI Conference on Human Factors in Computing Systems. "
                  },
                  {
                    "type": "component",
                    "name": "link",
                    "properties": {
                      "href": {
                        "type": "value",
                        "value": "https://doi.org/10.1145/3025453.3025768"
                      }
                    },
                    "children": [
                      {
                        "type": "textnode",
                        "value": "https://doi.org/10.1145/3025453.3025768"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "data": {
    "citations": {
      "bibtex": [
        "@article{doi:10.1145/3428290,\n\tauthor = {Andersen, Leif and Ballantyne, Michael and Felleisen, Matthias},\n\tjournal = {Proceedings of the ACM on Programming Languages},\n\tyear = {2020},\n\tmonth = {nov 13},\n\tpages = {1--28},\n\tpublisher = {Association for Computing Machinery (ACM)},\n\ttitle = {Adding interactive visual syntax to textual code},\n\tvolume = {4},\n}",
        "@misc{swift-playgrounds,\n\tauthor = {{Apple Inc.}},\n\tyear = {2014},\n\ttitle = {WWDC 2014},\n\thowpublished = {https://www.youtube.com/watch?v=w87fOAG8fjk},\n}",
        "@misc{bootstrap,\n\tauthor = {{Bootstrap}},\n\tyear = {2022},\n\ttitle = {Bootstrap},\n\thowpublished = {https://bootstrapworld.org/index.shtml},\n}",
        "@article{doi:10.1184/R1/6714389.V1,\n\tauthor = {Chang, Kerry Shih-Ping},\n\tjournal = {Carnegie Mellon University},\n\tyear = {2016},\n\tpublisher = {Carnegie Mellon University},\n\ttitle = {A {Spreadsheet} {Model} for {Using} {Web} {Services} and {Creating} {Data}-{Driven} {Applications}},\n}",
        "@misc{cuttle,\n\tauthor = {{Cuttle Labs Inc.}},\n\tyear = {2022},\n\ttitle = {Cuttle - {Design} tool for digital cutting machines},\n\thowpublished = {https://cuttle.xyz/},\n}",
        "@article{doi:10.1145/1052883.1052894,\n\tauthor = {Edwards, Jonathan},\n\tjournal = {ACM SIGPLAN Notices},\n\tnumber = {12},\n\tyear = {2004},\n\tmonth = {12},\n\tpages = {84--91},\n\tpublisher = {Association for Computing Machinery (ACM)},\n\ttitle = {Example centric programming},\n\tvolume = {39},\n}",
        "@inproceedings{doi:10.1145/1094811.1094851,\n\tauthor = {Edwards, Jonathan},\n\tbooktitle = {Proceedings of the 20th annual {ACM} {SIGPLAN} conference on {Object}-oriented programming, systems, languages, and applications},\n\tyear = {2005},\n\tmonth = {oct 12},\n\torganization = {ACM},\n\ttitle = {Subtext},\n}",
        "@misc{image-based,\n\tauthor = {Edwards, Jonathan and Petricek, Tomas},\n\tyear = {2021},\n\tpublisher = {arXiv},\n\ttitle = {Typed {Image}-based {Programming} with {Structure} {Editing}},\n}",
        "@inproceedings{Ellis1969THEGP,\n\tauthor = {Ellis, T. O. and Heafner, John F. and Sibley, William L.},\n\tyear = {1969},\n\ttitle = {THE {GRAIL} {PROJECT}: AN {EXPERIMENT} {IN} {MAN}-{MACHINE} {COMMUNICATIONS}},\n\thowpublished = {https://www.rand.org/pubs/research\\textunderscore{}memoranda/RM5999.html},\n}",
        "@book{doi:10.7249/RM6001,\n\tauthor = {Ellis, T. and Heafner, J. and Sibley, W.},\n\tyear = {1969},\n\tpublisher = {RAND Corporation},\n\ttitle = {The {GRAIL} {Language} and {Operations}},\n}",
        "@misc{enso,\n\tauthor = {{Enso}},\n\tyear = {2022},\n\ttitle = {Enso},\n\thowpublished = {https://enso.org/},\n}",
        "@inproceedings{doi:10.1145/3379337.3415869,\n\tauthor = {Ferdowsifard, Kasra and Ordookhanians, Allen and Peleg, Hila and Lerner, Sorin and Polikarpova, Nadia},\n\tbooktitle = {Proceedings of the 33rd {Annual} {ACM} {Symposium} on {User} {Interface} {Software} and {Technology}},\n\tyear = {2020},\n\tmonth = {oct 20},\n\torganization = {ACM},\n\ttitle = {Small-{Step} {Live} {Programming} by {Example}},\n}",
        "@misc{light-table,\n\tauthor = {Granger, Chris},\n\tyear = {2022},\n\ttitle = {Light {Table}},\n\thowpublished = {http://lighttable.com/},\n}",
        "@unpublished{pane,\n\tauthor = {Horowitz, Joshua},\n\tyear = {2018},\n\tnote = {Presented at the Workshop on Live Programming (LIVE) 2018},\n\ttitle = {PANE: Programming with {Visible} {Data}},\n\thowpublished = {http://joshuahhh.com/projects/pane/},\n}",
        "@inproceedings{doi:10.1145/2814189.2817268,\n\tauthor = {Imai, Tomoki and Masuhara, Hidehiko and Aotani, Tomoyuki},\n\tbooktitle = {Companion {Proceedings} of the 2015 {ACM} {SIGPLAN} {International} {Conference} on {Systems}, {Programming}, {Languages} and {Applications}: Software for {Humanity}},\n\tyear = {2015},\n\tmonth = {oct 25},\n\torganization = {ACM},\n\ttitle = {Shiranui: a live programming with support for unit testing},\n}",
        "@misc{mps,\n\tauthor = {{JetBrains s.r.o.}},\n\tyear = {2022},\n\ttitle = {MPS: The {Domain}-{Specific} {Language} {Creator} by {JetBrains}},\n\thowpublished = {https://www.jetbrains.com/mps/},\n}",
        "@inproceedings{doi:10.1145/1978942.1979444,\n\tauthor = {Kandel, Sean and Paepcke, Andreas and Hellerstein, Joseph and Heer, Jeffrey},\n\tbooktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},\n\tyear = {2011},\n\tmonth = {may 7},\n\torganization = {ACM},\n\ttitle = {Wrangler},\n}",
        "@unpublished{seymour,\n\tauthor = {Kasibatla, Saketh and Warth, Alex},\n\tyear = {2017},\n\tnote = {Presented at the Workshop on Live Programming (LIVE) 2017},\n\ttitle = {Seymour: Live {Programming} for the {Classroom}},\n\thowpublished = {https://harc.github.io/seymour-live2017/},\n}",
        "@inproceedings{doi:10.1145/3379337.3415842,\n\tauthor = {Kery, Mary Beth and Ren, Donghao and Hohman, Fred and Moritz, Dominik and Wongsuphasawat, Kanit and Patel, Kayur},\n\tbooktitle = {Proceedings of the 33rd {Annual} {ACM} {Symposium} on {User} {Interface} {Software} and {Technology}},\n\tyear = {2020},\n\tmonth = {oct 20},\n\torganization = {ACM},\n\ttitle = {mage: Fluid {Moves} {Between} {Code} and {Graphical} {Work} in {Computational} {Notebooks}},\n}",
        "@article{DBLP:journals/aim/Lau09,\n\tauthor = {Lau, Tessa},\n\tjournal = {AI Mag.},\n\tnumber = {4},\n\tyear = {2009},\n\tpages = {65--67},\n\ttitle = {Why {Programming}-{By}-{Demonstration} {Systems} {Fail}: Lessons {Learned} for {Usable} {AI}},\n\thowpublished = {https://doi.org/10.1609/aimag.v30i4.2262},\n\tvolume = {30},\n}",
        "@inproceedings{doi:10.1145/3313831.3376494,\n\tauthor = {Lerner, Sorin},\n\tbooktitle = {Proceedings of the 2020 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},\n\tyear = {2020},\n\tmonth = {apr 21},\n\torganization = {ACM},\n\ttitle = {Projection {Boxes}: On-the-fly {Reconfigurable} {Visualization} for {Live} {Programming}},\n}",
        "@inproceedings{doi:10.1145/3173574.3173697,\n\tauthor = {Liu, Zhicheng and Thompson, John and Wilson, Alan and Dontcheva, Mira and Delorey, James and Grigg, Sam and Kerr, Bernard and Stasko, John},\n\tbooktitle = {Proceedings of the 2018 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},\n\tyear = {2018},\n\tmonth = {apr 19},\n\torganization = {ACM},\n\ttitle = {Data {Illustrator}},\n}",
        "@misc{lamdu,\n\tauthor = {Lotem, Eyal and Chuchem, Yair},\n\tyear = {2022},\n\ttitle = {Lamdu},\n\thowpublished = {https://www.lamdu.org/},\n}",
        "@misc{react,\n\tauthor = {{Meta Platforms, Inc.}},\n\tyear = {2022},\n\ttitle = {React -- {A} {JavaScript} library for building user interfaces},\n\thowpublished = {https://reactjs.org/},\n}",
        "@unpublished{restructuring-structured-editing,\n\tauthor = {Moon, David and Omar, Cyrus},\n\tyear = {2021},\n\tnote = {Presented at the Workshop on Live Programming (LIVE) 2021},\n\ttitle = {Restructuring {Structure} {Editing}},\n\thowpublished = {https://tylr.fun/essay/},\n}",
        "@inproceedings{doi:10.1145/22627.22349,\n\tauthor = {Myers, B. A.},\n\tbooktitle = {Proceedings of the {SIGCHI} conference on {Human} factors in computing systems  - {CHI} '86},\n\tyear = {1986},\n\torganization = {ACM Press},\n\ttitle = {Visual programming, programming by example, and program visualization: a taxonomy},\n}",
        "@misc{observable,\n\tauthor = {{Observable Inc.}},\n\tyear = {2022},\n\ttitle = {Observable - {Explore}, analyze, and explain data. {As} a team.},\n\thowpublished = {https://observablehq.com/},\n}",
        "@misc{observable-data-table-cell,\n\tauthor = {{Observable Inc.}},\n\tyear = {2022},\n\ttitle = {Quickly {Explore} & {Analyze} {Your} {Data} {With} {Data} {Table} {Cell} / {Observable} / {Observable}},\n\thowpublished = {https://observablehq.com/@observablehq/introducing-data-table-cell},\n}",
        "@inproceedings{doi:10.1109/VLHCC.2011.6070422,\n\tauthor = {Omar, C. and {YoungSeok Yoon} and LaToza, T. D. and Myers, B. A.},\n\tbooktitle = {2011 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC})},\n\tyear = {2011},\n\tmonth = {9},\n\torganization = {IEEE},\n\ttitle = {Active code completion},\n}",
        "@article{doi:10.1145/3290327,\n\tauthor = {Omar, Cyrus and Voysey, Ian and Chugh, Ravi and Hammer, Matthew A.},\n\tjournal = {Proceedings of the ACM on Programming Languages},\n\tyear = {2019},\n\tmonth = {jan 2},\n\tpages = {1--32},\n\tpublisher = {Association for Computing Machinery (ACM)},\n\ttitle = {Live functional programming with typed holes},\n\tvolume = {3},\n}",
        "@inproceedings{doi:10.1145/3453483.3454059,\n\tauthor = {Omar, Cyrus and Moon, David and Blinn, Andrew and Voysey, Ian and Collins, Nick and Chugh, Ravi},\n\tbooktitle = {Proceedings of the 42nd {ACM} {SIGPLAN} {International} {Conference} on {Programming} {Language} {Design} and {Implementation}},\n\tyear = {2021},\n\tmonth = {jun 18},\n\torganization = {ACM},\n\ttitle = {Filling typed holes with live {GUIs}},\n}",
        "@misc{everest,\n\tauthor = {Pipkin, Everest},\n\tyear = {2021},\n\ttitle = {been having some  motivation troubles  recently (god who hasn't) so i'm gonna pick a tiny personal project off my ideas list and see if i can get it working by morning. tonight - a lil bash script that emails me the summaries of 5 random wikipedia articles each morning},\n\thowpublished = {https://twitter.com/everestpipkin/status/1349274983651012609},\n}",
        "@article{doi:10.22152/programming-journal.org/2019/3/11,\n\tauthor = {Politz, Joe and Lerner, Benjamin and Porncharoenwase, Sorawee and Krishnamurthi, Shriram},\n\tjournal = {The Art, Science, and Engineering of Programming},\n\tnumber = {3},\n\tyear = {2019},\n\tmonth = {feb 1},\n\tpublisher = {Aspect-Oriented Software Association (AOSA)},\n\ttitle = {Event {Loops} as {First}-{Class} {Values}: A {Case} {Study} in {Pedagogic} {Language} {Design}},\n\tvolume = {3},\n}",
        "@article{doi:10.22152/programming-journal.org/2019/3/9,\n\tauthor = {Rauch, David and Rein, Patrick and Ramson, Stefan and Lincke, Jens and Hirschfeld, Robert},\n\tjournal = {The Art, Science, and Engineering of Programming},\n\tnumber = {3},\n\tyear = {2019},\n\tmonth = {feb 1},\n\tpublisher = {Aspect-Oriented Software Association (AOSA)},\n\ttitle = {Babylonian-style {Programming}: Design and {Implementation} of an {Integration} of {Live} {Examples} into {General}-purpose {Source} {Code}},\n\tvolume = {3},\n}",
        "@article{doi:10.22152/programming-journal.org/2019/3/1,\n\tauthor = {Rein, Patrick and Ramson, Stefan and Lincke, Jens and Hirschfeld, Robert and Pape, Tobias},\n\tjournal = {The Art, Science, and Engineering of Programming},\n\tnumber = {1},\n\tyear = {2018},\n\tmonth = {jul 23},\n\tpublisher = {Aspect-Oriented Software Association (AOSA)},\n\ttitle = {Exploratory and {Live}, {Programming} and {Coding}},\n\tvolume = {3},\n}",
        "@article{doi:10.1109/TVCG.2018.2865158,\n\tauthor = {Ren, Donghao and Lee, Bongshin and Brehmer, Matthew},\n\tjournal = {IEEE Transactions on Visualization and Computer Graphics},\n\tnumber = {1},\n\tyear = {2019},\n\tmonth = {1},\n\tpages = {789--799},\n\tpublisher = {{Institute of Electrical and Electronics Engineers (IEEE)}},\n\ttitle = {Charticulator: Interactive {Construction} of {Bespoke} {Chart} {Layouts}},\n\tvolume = {25},\n}",
        "@article{doi:10.1111/cgf.12391,\n\tauthor = {Satyanarayan, Arvind and Heer, Jeffrey},\n\tjournal = {Computer Graphics Forum},\n\tnumber = {3},\n\tyear = {2014},\n\tmonth = {6},\n\tpages = {351--360},\n\tpublisher = {Wiley},\n\ttitle = {Lyra: An {Interactive} {Visualization} {Design} {Environment}},\n\tvolume = {33},\n}",
        "@misc{yoshiki,\n\tauthor = {Schmitz, Yoshiki},\n\tyear = {2019},\n\ttitle = {I've been jamming on this concept for making data-driven designs...},\n\thowpublished = {https://twitter.com/yoshikischmitz/status/1176642448077967362},\n}",
        "@misc{natto-hn,\n\tauthor = {Shen, Paul},\n\tyear = {2021},\n\ttitle = {Show {HN}: Natto -- a canvas for writing and manipulating {JavaScript}},\n\thowpublished = {https://news.ycombinator.com/item?id=26478548},\n}",
        "@misc{natto,\n\tauthor = {Shen, Paul},\n\tyear = {2022},\n\ttitle = {welcome! -- natto},\n\thowpublished = {https://natto.dev/},\n}",
        "@article{doi:10.1023/A:1008716330212,\n\tauthor = {Shipman, Frank M. and Marshall, Catherine C.},\n\tjournal = {Computer Supported Cooperative Work (CSCW)},\n\tnumber = {4},\n\tyear = {1999},\n\tmonth = {12},\n\tpages = {333--352},\n\tpublisher = {{Springer Science and Business Media LLC}},\n\ttitle = {Formality {Considered} {Harmful}: Experiences, {Emerging} {Themes}, and {Directions} on the {Use} of {Formal} {Representations} in {Interactive} {Systems}},\n\tvolume = {8},\n}",
        "@unpublished{live-literals,\n\tauthor = {van der Storm, Tijs and Hermans, Felienne},\n\tyear = {2016},\n\tnote = {Presented at the Workshop on Live Programming (LIVE) 2016},\n\ttitle = {Live {Literals}},\n\thowpublished = {https://homepages.cwi.nl/\\textasciitilde{}storm/livelit/livelit.html},\n}",
        "@article{doi:10.1016/S1045-926X(05)80012-6,\n\tauthor = {Tanimoto, Steven L.},\n\tjournal = {Journal of Visual Languages \\& Computing},\n\tnumber = {2},\n\tyear = {1990},\n\tmonth = {6},\n\tpages = {127--139},\n\tpublisher = {Elsevier BV},\n\ttitle = {VIVA: A visual language for image processing},\n\tvolume = {1},\n}",
        "@inproceedings{Tanimoto:2013:PEL,\n\taddress = {San Francisco, California},\n\tauthor = {Tanimoto, Steven L.},\n\tseries = {LIVE '13},\n\tbooktitle = {Proceedings of the 1st {International} {Workshop} on {Live} {Programming}},\n\tyear = {2013},\n\tpages = {31--34},\n\torganization = {IEEE Press},\n\ttitle = {A {Perspective} on the {Evolution} of {Live} {Programming}},\n}",
        "@unpublished{inventing-on-principle,\n\tauthor = {Victor, Bret},\n\tyear = {2012},\n\tnote = {Presented at the the Canadian University Software Engineering Conference (CUSEC)},\n\ttitle = {Inventing on {Principle}},\n\thowpublished = {https://vimeo.com/36579366},\n}",
        "@misc{learnable-programming,\n\tauthor = {Victor, Bret},\n\tyear = {2012},\n\ttitle = {Learnable {Programming}},\n\thowpublished = {http://worrydream.com/LearnableProgramming/},\n}",
        "@misc{wikipedia-grafting,\n\tauthor = {{Wikipedia contributors}},\n\tyear = {2022},\n\tnote = {[Online; accessed 01-September-2022]},\n\ttitle = {Grafting --- {Wikipedia}, {The} {Free} {Encyclopedia}},\n\thowpublished = {https://en.wikipedia.org/w/index.php?title=Grafting&oldid=1095365064},\n}",
        "@inproceedings{doi:10.1145/3025453.3025768,\n\tauthor = {Wongsuphasawat, Kanit and Qu, Zening and Moritz, Dominik and Chang, Riley and Ouk, Felix and Anand, Anushka and Mackinlay, Jock and Howe, Bill and Heer, Jeffrey},\n\tbooktitle = {Proceedings of the 2017 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},\n\tyear = {2017},\n\tmonth = {may 2},\n\torganization = {ACM},\n\ttitle = {Voyager 2},\n}"
      ],
      "csl": [
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                7
              ]
            ],
            "date-time": "2023-01-07T05:38:49Z",
            "timestamp": 1673069929889
          },
          "reference-count": 49,
          "publisher": "Association for Computing Machinery (ACM)",
          "issue": "OOPSLA",
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2020,
                11,
                13
              ]
            ]
          },
          "abstract": "<jats:p>Many programming problems call for turning geometrical thoughts into code: tables, hierarchical structures, nests of objects, trees, forests, graphs, and so on. Linear text does not do justice to such thoughts. But, it has been the dominant programming medium for the past and will remain so for the foreseeable future.</jats:p>\n          <jats:p>This paper proposes a novel mechanism for conveniently extending textual programming languages with problem-specific visual syntax. It argues the necessity of this language feature, demonstrates the feasibility with a robust prototype, and sketches a design plan for adapting the idea to other languages.</jats:p>",
          "DOI": "10.1145/3428290",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2020,
                11,
                24
              ]
            ],
            "date-time": "2020-11-24T23:40:14Z",
            "timestamp": 1606261214000
          },
          "page": "1-28",
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 1,
          "title": "Adding interactive visual syntax to textual code",
          "prefix": "10.1145",
          "volume": "4",
          "author": [
            {
              "ORCID": "http://orcid.org/0000-0002-6179-7784",
              "authenticated-orcid": false,
              "given": "Leif",
              "family": "Andersen",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Northeastern University, USA"
                }
              ]
            },
            {
              "given": "Michael",
              "family": "Ballantyne",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Northeastern University, USA"
                }
              ]
            },
            {
              "given": "Matthias",
              "family": "Felleisen",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Northeastern University, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2020,
                11,
                13
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_2_2_1_1",
              "volume-title": "Retrieved",
              "year": "2020"
            },
            {
              "key": "e_1_2_2_2_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3110274"
            },
            {
              "key": "e_1_2_2_3_1",
              "volume-title": "Retrieved",
              "author": "Ashkenas Jeremy",
              "year": "2020"
            },
            {
              "key": "e_1_2_2_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/BF00289509"
            },
            {
              "key": "e_1_2_2_5_1",
              "volume-title": "Square Bracket Associates",
              "author": "Bergel Alexandre",
              "year": "2013"
            },
            {
              "key": "e_1_2_2_6_1",
              "volume-title": "Maplesoft",
              "author": "Bernardin L.",
              "year": "2012"
            },
            {
              "key": "e_1_2_2_7_1",
              "volume-title": "Visual Programming Languages: a Survey. EECS Department",
              "author": "Boshernitsan Marat",
              "year": "2004"
            },
            {
              "key": "e_1_2_2_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2980983.2908103"
            },
            {
              "key": "e_1_2_2_9_1",
              "volume-title": "Tree Automata Techniques and Applications",
              "author": "Comon Hubert",
              "year": "2007"
            },
            {
              "key": "e_1_2_2_10_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/11693024_20"
            },
            {
              "key": "e_1_2_2_11_1",
              "volume-title": "Introduction to Algorithms",
              "author": "Cormen Thomas H.",
              "year": "2009"
            },
            {
              "key": "e_1_2_2_12_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/6592.6595"
            },
            {
              "key": "e_1_2_2_13_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1160074.1159805"
            },
            {
              "key": "e_1_2_2_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1218563.1218573"
            },
            {
              "key": "e_1_2_2_15_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.7249/RM6001"
            },
            {
              "key": "e_1_2_2_16_1",
              "volume-title": "The Grail Project: An Experiment in Man-Machine Communications",
              "author": "Ellis T. O.",
              "year": "1969"
            },
            {
              "key": "e_1_2_2_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2189751.2047891"
            },
            {
              "key": "e_1_2_2_18_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3127323"
            },
            {
              "key": "e_1_2_2_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S0956796801004208"
            },
            {
              "key": "e_1_2_2_20_1",
              "volume-title": "DrRacket: Programming Environment",
              "author": "Findler Robert Bruce",
              "year": "2010"
            },
            {
              "key": "e_1_2_2_21_1",
              "first-page": "72",
              "volume-title": "Proc. International Conference on Functional Programming",
              "author": "Flatt Matthew",
              "year": "2002"
            },
            {
              "key": "e_1_2_2_22_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2517208.2517211"
            },
            {
              "key": "e_1_2_2_23_1",
              "volume-title": "Robert Bruce Findler, and John Clements. GUI : Racket Graphics Toolkit",
              "author": "Flatt Matthew",
              "year": "2010"
            },
            {
              "key": "e_1_2_2_24_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/11924661_17"
            },
            {
              "key": "e_1_2_2_25_1",
              "volume-title": "Racket",
              "author": "Flatt Matthew",
              "year": "2010"
            },
            {
              "key": "e_1_2_2_26_1",
              "volume-title": "AMPL: A Modeling Language for Mathematical Programming",
              "author": "Fourer Robert",
              "year": "2002",
              "edition": "2"
            },
            {
              "key": "e_1_2_2_27_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1002/spe.2182"
            },
            {
              "key": "e_1_2_2_28_1",
              "volume-title": "The Language and Its Implementation",
              "author": "Goldberg Adele",
              "year": "1983"
            },
            {
              "key": "e_1_2_2_29_1",
              "first-page": "1",
              "volume-title": "Proc. Constructionism",
              "author": "Harvey Brian",
              "year": "2010"
            },
            {
              "key": "e_1_2_2_30_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3180155.3180165"
            },
            {
              "key": "e_1_2_2_31_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-540-89275-5_2"
            },
            {
              "key": "e_1_2_2_32_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1932682.1869497"
            },
            {
              "key": "e_1_2_2_33_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2807442.2807446"
            },
            {
              "key": "e_1_2_2_34_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1124772.1124831"
            },
            {
              "key": "e_1_2_2_35_1",
              "first-page": "39",
              "volume-title": "An Introduction to Morphic: The Squeak User Interface Framework",
              "author": "Maloney John",
              "year": "2001"
            },
            {
              "key": "e_1_2_2_36_1",
              "volume-title": "Retrieved",
              "year": "2019"
            },
            {
              "key": "e_1_2_2_37_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S0956796899003494"
            },
            {
              "key": "e_1_2_2_38_1",
              "volume-title": "Proc. Workshop on Type-driven Development",
              "author": "Omar Cyrus",
              "year": "2019"
            },
            {
              "key": "e_1_2_2_39_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/ICSE.2012.6227133"
            },
            {
              "key": "e_1_2_2_40_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/MC.2004.1297314"
            },
            {
              "key": "e_1_2_2_41_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2500828.2500846"
            },
            {
              "key": "e_1_2_2_42_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/MCSE.2007.53"
            },
            {
              "key": "e_1_2_2_43_1",
              "volume-title": "RFC 793",
              "author": "Postel Jon",
              "year": "1981"
            },
            {
              "key": "e_1_2_2_44_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1592761.1592779"
            },
            {
              "key": "e_1_2_2_45_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3126594.3126642"
            },
            {
              "key": "e_1_2_2_46_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1167515.1167511"
            },
            {
              "key": "e_1_2_2_47_1",
              "volume-title": "Voelter and Sascha Lisson. Supporting Diverse Notations in MPS' Projectional Editor. In Proc. International Workshop on The Globalization of Modeling Languages",
              "author": "Markus",
              "year": "2014"
            },
            {
              "key": "e_1_2_2_48_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2384716.2384767"
            },
            {
              "key": "e_1_2_2_49_1",
              "volume-title": "Ngspice Users Manual. NGSPICE, 30",
              "author": "Vogt Holger",
              "year": "2019"
            }
          ],
          "container-title": "Proceedings of the ACM on Programming Languages",
          "original-title": [],
          "language": "en",
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3428290",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                1
              ]
            ],
            "date-time": "2023-01-01T21:47:59Z",
            "timestamp": 1672609679000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3428290"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2020,
                11,
                13
              ]
            ]
          },
          "references-count": 49,
          "journal-issue": {
            "issue": "OOPSLA",
            "published-print": {
              "date-parts": [
                [
                  2020,
                  11,
                  13
                ]
              ]
            }
          },
          "alternative-id": [
            "10.1145/3428290"
          ],
          "URL": "http://dx.doi.org/10.1145/3428290",
          "relation": {},
          "ISSN": [
            "2475-1421"
          ],
          "subject": [
            "Safety, Risk, Reliability and Quality",
            "Software"
          ],
          "container-title-short": "Proc. ACM Program. Lang.",
          "published": {
            "date-parts": [
              [
                2020,
                11,
                13
              ]
            ]
          },
          "assertion": [
            {
              "value": "2020-11-13",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3428290"
        },
        {
          "author": [
            {
              "family": "Apple Inc."
            }
          ],
          "type": "webpage",
          "id": "swift-playgrounds",
          "citation-key": "swift-playgrounds",
          "issued": {
            "date-parts": [
              [
                2014
              ]
            ]
          },
          "title": "WWDC 2014",
          "URL": "https://www.youtube.com/watch?v=w87fOAG8fjk"
        },
        {
          "author": [
            {
              "family": "Bootstrap"
            }
          ],
          "type": "webpage",
          "id": "bootstrap",
          "citation-key": "bootstrap",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Bootstrap",
          "URL": "https://bootstrapworld.org/index.shtml"
        },
        {
          "type": "article-journal",
          "id": "doi:10.1184/R1/6714389.V1",
          "categories": [
            "Applied Computer Science"
          ],
          "author": [
            {
              "family": "Chang",
              "given": "Kerry Shih-Ping"
            }
          ],
          "issued": {
            "date-parts": [
              [
                2016
              ]
            ]
          },
          "abstract": "Web services have made many kinds of data and computing services available. However, to use web services often requires significant programming efforts and thus limits the people who can take advantage of them to only a small group of skilled programmers. In this dissertation, I will present a tool called Gneiss that extends the spreadsheet model to support four challenging aspects of using web services: programming two-way data communications with web services, creating interactive GUI applications that use web data sources, using hierarchical data, and using live streaming data. Gneiss contributes innovations in spreadsheet languages, spreadsheet user interfaces and interaction techniques to allow programming tasks that currently require writing complex, lengthy code to instead be done using familiar spreadsheet mechanisms. Spreadsheets are arguably the most successful and popular data tools among people of all programming levels. This work advances the use of spreadsheets to new domains and could benefit a wide range of users from professional programmers to end-user programmers.",
          "container-title": "Carnegie Mellon University",
          "DOI": "10.1184/R1/6714389.V1",
          "publisher": "Carnegie Mellon University",
          "title": "A Spreadsheet Model for Using Web Services and Creating Data-Driven Applications",
          "URL": "https://kilthub.cmu.edu/articles/A_Spreadsheet_Model_for_Using_Web_Services_and_Creating_Data-Driven_Applications/6714389/1",
          "copyright": "In Copyright"
        },
        {
          "author": [
            {
              "family": "Cuttle Labs Inc."
            }
          ],
          "type": "webpage",
          "id": "cuttle",
          "citation-key": "cuttle",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Cuttle - Design tool for digital cutting machines",
          "URL": "https://cuttle.xyz/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                19
              ]
            ],
            "date-time": "2023-01-19T01:32:37Z",
            "timestamp": 1674091957668
          },
          "reference-count": 26,
          "publisher": "Association for Computing Machinery (ACM)",
          "issue": "12",
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2004,
                12
              ]
            ]
          },
          "abstract": "<jats:p>\n            Programmers tend to understand programs by thinking of concrete examples.\n            <jats:italic>Example Centric Programming</jats:italic>\n            seeks to add IDE support for examples throughout the process of programming. Instead of programmers interpreting examples in their head, the examples are written down and the IDE interprets them automatically. Advanced UI techniques are used to present the results closely integrated with the code. Traditionally distinct programming tools (the editor, Read-Eval-Print-Loop, debugger, and test runner) are unified into a single tool that might be called an\n            <jats:italic>example-enlightened</jats:italic>\n            editor. This is expected to benefit a wide spectrum of programming activities, for both novice and experienced programmers. Some novel methods for testing and development are made possible. In the longer term, example centrism has implications for the design of future programming languages. A prototype has been implemented for Java in Eclipse.\n          </jats:p>",
          "DOI": "10.1145/1052883.1052894",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2005,
                11,
                14
              ]
            ],
            "date-time": "2005-11-14T18:08:27Z",
            "timestamp": 1131991707000
          },
          "page": "84-91",
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 17,
          "title": "Example centric programming",
          "prefix": "10.1145",
          "volume": "39",
          "author": [
            {
              "given": "Jonathan",
              "family": "Edwards",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "MIT CSAIL, Cambridge, MA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2004,
                12
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_2_1_1_1",
              "unstructured": "BeanShell http://www.beanshell.org/home.html  BeanShell http://www.beanshell.org/home.html"
            },
            {
              "key": "e_1_2_1_2_1",
              "volume-title": "Test-Driven Development: By Example",
              "author": "Beck K.",
              "year": "2002"
            },
            {
              "key": "e_1_2_1_3_1",
              "volume-title": "3rd International Workshop on Automated Debugging (AADEBUG 97)",
              "author": "Booth S. P.",
              "year": "1997"
            },
            {
              "key": "e_1_2_1_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/968486.968487"
            },
            {
              "key": "e_1_2_1_5_1",
              "volume-title": "Watch What I Do: Programming by Demonstration",
              "author": "Cypher A.",
              "year": "1993"
            },
            {
              "key": "e_1_2_1_6_1",
              "unstructured": "Eclipse Platform Technical Overview http://www.eclipse.org/whitepapers/eclipse-overview.pdf  Eclipse Platform Technical Overview http://www.eclipse.org/whitepapers/eclipse-overview.pdf"
            },
            {
              "key": "e_1_2_1_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/BF00116447"
            },
            {
              "key": "e_1_2_1_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S0956796801004208"
            },
            {
              "key": "e_1_2_1_9_1",
              "volume-title": "Refactoring: Improving the Design of Existing Code",
              "author": "Fowler M.",
              "year": "1999"
            },
            {
              "key": "e_1_2_1_10_1",
              "volume-title": "Contributing to Eclipse",
              "author": "Gamma E.",
              "year": "2003"
            },
            {
              "key": "e_1_2_1_11_1",
              "volume-title": "Continuous Execution: The VisiProg Environment. ICSE '85 London",
              "author": "Henderson P.",
              "year": "1985"
            },
            {
              "key": "e_1_2_1_12_1",
              "volume-title": "P. Teaching Programming with Minimal Examples. Western Canadian Conference on Computing Education. Nanaimo, BC, Canada 1997 http://www.cs.ubc.ca/wccce/program97/walsh/walsh.html",
              "author": "Hoffman D."
            },
            {
              "key": "e_1_2_1_13_1",
              "unstructured": "Hunt A. and Thomas D. Pragmatic Unit Testing. http://www.pragmaticprogrammer.com/starter_kit/ut/index.html  Hunt A. and Thomas D. Pragmatic Unit Testing. http://www.pragmaticprogrammer.com/starter_kit/ut/index.html"
            },
            {
              "key": "e_1_2_1_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/944705.944721"
            },
            {
              "issue": "4",
              "key": "e_1_2_1_15_1",
              "volume": "13",
              "author": "Kölling M.",
              "year": "2003",
              "journal-title": "Journal of Computer Science Education"
            },
            {
              "key": "e_1_2_1_16_1",
              "volume-title": "B. Debugging Backwards in Time. 5th International Workshop on Automated Debugging (AADEBUG 2003)",
              "author": "Lewis",
              "year": "2003"
            },
            {
              "key": "e_1_2_1_17_1",
              "volume-title": "Morgan Kaufmann",
              "author": "Lieberman H.",
              "year": "2001"
            },
            {
              "key": "e_1_2_1_18_1",
              "unstructured": "Mackinnon T. Freeman S. and Craig P. Endo-Testing: Unit Testing with Mock Objects. In Extreme Programming Explained. Addison-Wesley 2001.   Mackinnon T. Freeman S. and Craig P. Endo-Testing: Unit Testing with Mock Objects. In Extreme Programming Explained. Addison-Wesley 2001."
            },
            {
              "key": "e_1_2_1_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/567446.567450"
            },
            {
              "key": "e_1_2_1_20_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/800020.808246"
            },
            {
              "key": "e_1_2_1_21_1",
              "volume-title": "What You See Is What You Test: A Methodology for Testing Form-Based Visual Programs. 20th International Conference on Software Engineering (ICSE 98)",
              "author": "Rothermel G.",
              "year": "1998"
            },
            {
              "key": "e_1_2_1_22_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/951952.952340"
            },
            {
              "key": "e_1_2_1_23_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/646153.679530"
            },
            {
              "key": "e_1_2_1_24_1",
              "first-page": "1",
              "volume": "1",
              "author": "Tolmach A.",
              "year": "1993",
              "journal-title": "Journal Functional Programming"
            },
            {
              "key": "e_1_2_1_25_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/248448.248457"
            },
            {
              "key": "e_1_2_1_26_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/38765.38828"
            }
          ],
          "container-title": "ACM SIGPLAN Notices",
          "original-title": [],
          "language": "en",
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/1052883.1052894",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2022,
                12,
                28
              ]
            ],
            "date-time": "2022-12-28T14:15:12Z",
            "timestamp": 1672236912000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/1052883.1052894"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2004,
                12
              ]
            ]
          },
          "references-count": 26,
          "journal-issue": {
            "issue": "12",
            "published-print": {
              "date-parts": [
                [
                  2004,
                  12
                ]
              ]
            }
          },
          "alternative-id": [
            "10.1145/1052883.1052894"
          ],
          "URL": "http://dx.doi.org/10.1145/1052883.1052894",
          "relation": {},
          "ISSN": [
            "0362-1340",
            "1558-1160"
          ],
          "subject": [
            "Computer Graphics and Computer-Aided Design",
            "Software"
          ],
          "container-title-short": "SIGPLAN Not.",
          "published": {
            "date-parts": [
              [
                2004,
                12
              ]
            ]
          },
          "assertion": [
            {
              "value": "2004-12-01",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/1052883.1052894"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                12
              ]
            ],
            "date-time": "2023-01-12T12:25:49Z",
            "timestamp": 1673526349994
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 44,
          "publisher": "ACM",
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2005,
                10,
                12
              ]
            ]
          },
          "DOI": "10.1145/1094811.1094851",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2005,
                11,
                7
              ]
            ],
            "date-time": "2005-11-07T17:34:39Z",
            "timestamp": 1131384879000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 42,
          "title": "Subtext",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Jonathan",
              "family": "Edwards",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "MIT CSAIL, Cambridge, MA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2005,
                10,
                12
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_1_1_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/359576.359579"
            },
            {
              "key": "e_1_3_2_1_2_1",
              "volume-title": "The Lambda Calculus",
              "author": "Barendregt H. P.",
              "year": "1984",
              "unstructured": "Barendregt , H. P. The Lambda Calculus . Elsevier , 1984 . Barendregt, H. P. The Lambda Calculus. Elsevier, 1984."
            },
            {
              "key": "e_1_3_2_1_3_1",
              "volume-title": "Test-Driven Development: By Example",
              "author": "Beck K.",
              "year": "2002",
              "unstructured": "Beck , K. Test-Driven Development: By Example . Addison-Wesley 2002 . Beck, K. Test-Driven Development: By Example. Addison-Wesley 2002."
            },
            {
              "key": "e_1_3_2_1_4_1",
              "volume-title": "A. First Steps in Programming: A Rationale for Attention Investment Models. In Proc. of the IEEE 2002 Symposia on Human Centric Computing Languages and Environments (HCC'02)",
              "author": "Blackwell",
              "year": "2002",
              "unstructured": "Blackwell , A. First Steps in Programming: A Rationale for Attention Investment Models. In Proc. of the IEEE 2002 Symposia on Human Centric Computing Languages and Environments (HCC'02) (Arlington, VA, Sep. 2002 ) 2--10. Blackwell, A. First Steps in Programming: A Rationale for Attention Investment Models. In Proc. of the IEEE 2002 Symposia on Human Centric Computing Languages and Environments (HCC'02) (Arlington, VA, Sep. 2002) 2--10."
            },
            {
              "key": "e_1_3_2_1_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/968486.968487"
            },
            {
              "key": "e_1_3_2_1_6_1",
              "volume-title": "Manning",
              "author": "Burnett M.",
              "year": "1995",
              "unstructured": "Burnett , M. , Goldberg , A. , Lewis , T. Visual Object-Oriented Programming: Concepts and Environments . Manning , Greenwich, CT , 1995 . Burnett, M., Goldberg, A., Lewis, T. Visual Object-Oriented Programming: Concepts and Environments. Manning, Greenwich, CT, 1995."
            },
            {
              "key": "e_1_3_2_1_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/602259.602300"
            },
            {
              "key": "e_1_3_2_1_8_1",
              "volume-title": "Watch What I Do: Programming by Demonstration",
              "author": "Cypher A.",
              "year": "1993",
              "unstructured": "Cypher , A. Watch What I Do: Programming by Demonstration . MIT Press , Cambridge, MA . 1993 Cypher, A. Watch What I Do: Programming by Demonstration. MIT Press, Cambridge, MA. 1993"
            },
            {
              "key": "e_1_3_2_1_9_1",
              "volume-title": "Generative Programming: Methods, Tools, and Applications",
              "author": "Czarnecki K.",
              "year": "2000",
              "unstructured": "Czarnecki , K. , Eisenecker , U. W. Intentional Programming . Chapter 11 in Generative Programming: Methods, Tools, and Applications . Addison-Wesley , 2000 . Czarnecki, K., Eisenecker, U. W. Intentional Programming. Chapter 11 in Generative Programming: Methods, Tools, and Applications. Addison-Wesley, 2000."
            },
            {
              "key": "e_1_3_2_1_10_1",
              "volume-title": "M. Similarity Inheritance: A New Model of Inheritance for Spreadsheet VPLs. In 1998 IEEE Symp. Visual Languages",
              "author": "Djang R.",
              "year": "1998",
              "unstructured": "Djang , R. , Burnett , M. Similarity Inheritance: A New Model of Inheritance for Spreadsheet VPLs. In 1998 IEEE Symp. Visual Languages ( Halifax, Canada , Sep. 1998 ) 134--141. Djang, R., Burnett, M. Similarity Inheritance: A New Model of Inheritance for Spreadsheet VPLs. In 1998 IEEE Symp. Visual Languages (Halifax, Canada, Sep. 1998) 134--141."
            },
            {
              "key": "e_1_3_2_1_11_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1028664.1028713"
            },
            {
              "key": "e_1_3_2_1_12_1",
              "volume-title": "Refactoring: Improving the Design of Existing Code",
              "author": "Fowler M.",
              "year": "1999",
              "unstructured": "Fowler , M. , Beck , K. , Brant , J. , Opdyke , W. , and Roberts , D . Refactoring: Improving the Design of Existing Code . Addison-Wesley , 1999 . Fowler, M., Beck, K., Brant, J., Opdyke, W., and Roberts, D. Refactoring: Improving the Design of Existing Code. Addison-Wesley, 1999."
            },
            {
              "key": "e_1_3_2_1_13_1",
              "first-page": "2",
              "volume": "7",
              "author": "Green T. R. G.",
              "unstructured": "Green , T. R. G. , Petre , M. Usability Analysis of Visual Programming Environments: a 'cognitive dimensions' framework. Journal of Visual Languages and Computing 7 , 2 , 131--174. Green, T. R. G., Petre, M. Usability Analysis of Visual Programming Environments: a 'cognitive dimensions' framework. Journal of Visual Languages and Computing 7, 2, 131--174.",
              "journal-title": "Journal of Visual Languages and Computing"
            },
            {
              "key": "e_1_3_2_1_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/581478.581493"
            },
            {
              "key": "e_1_3_2_1_15_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/62083.62100"
            },
            {
              "key": "e_1_3_2_1_16_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/944705.944721"
            },
            {
              "key": "e_1_3_2_1_17_1",
              "volume-title": "V. A. Complete Visualization of Concurrent Programs and Their Executions. In Proceedings of the ICLP 1990 Workshop on Logic Programming Environments",
              "author": "Kahn K. M.",
              "year": "1990",
              "unstructured": "Kahn , K. M. , Saraswat , V. A. Complete Visualization of Concurrent Programs and Their Executions. In Proceedings of the ICLP 1990 Workshop on Logic Programming Environments , ( Eilat, Israel , June 1990 ). Kahn, K. M., Saraswat, V. A. Complete Visualization of Concurrent Programs and Their Executions. In Proceedings of the ICLP 1990 Workshop on Logic Programming Environments, (Eilat, Israel, June 1990)."
            },
            {
              "key": "e_1_3_2_1_18_1",
              "volume-title": "Aspect-Oriented Programming. In Proc. of European Conference on Object-Oriented Programming (ECOOP 1997)",
              "author": "Kiczales G.",
              "year": "1997",
              "unstructured": "Kiczales , G. , Lamping , J. , Mendhekar , A. , Maeda , C. , Videira Lopes , C. , Loingtier , J.-M. , and Irwin , J . Aspect-Oriented Programming. In Proc. of European Conference on Object-Oriented Programming (ECOOP 1997) (Jyväskylä, Finland , 1997 ). Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Videira Lopes, C., Loingtier, J.-M., and Irwin, J. Aspect-Oriented Programming. In Proc. of European Conference on Object-Oriented Programming (ECOOP 1997) (Jyväskylä, Finland, 1997)."
            },
            {
              "key": "e_1_3_2_1_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/1018434.1021568"
            },
            {
              "key": "e_1_3_2_1_20_1",
              "first-page": "2",
              "volume": "10",
              "author": "King",
              "year": "1967",
              "unstructured": "King , P. J. H. Decision Tables. Computer Journal 10 , 2 ( Aug. 1967 ) 135--142. King, P. J. H. Decision Tables. Computer Journal 10, 2 (Aug. 1967) 135--142.",
              "journal-title": "Decision Tables. Computer Journal"
            },
            {
              "key": "e_1_3_2_1_21_1",
              "volume-title": "Empirical Studies of Programmers: Second Workshop (Washington D.C. 1987)",
              "author": "Lewis C.",
              "unstructured": "Lewis , C. , Olson , G. M. Can Principles of Cognition Lower the Barriers to Programming? In Empirical Studies of Programmers: Second Workshop (Washington D.C. 1987) 248--263. Lewis, C., Olson, G. M. Can Principles of Cognition Lower the Barriers to Programming? In Empirical Studies of Programmers: Second Workshop (Washington D.C. 1987) 248--263."
            },
            {
              "key": "e_1_3_2_1_22_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/28697.28718"
            },
            {
              "key": "e_1_3_2_1_23_1",
              "unstructured": "Lieberman H. Tinker: A Programming by Demonstration System for Beginning Programmers. In {8}.   Lieberman H. Tinker: A Programming by Demonstration System for Beginning Programmers. In {8}."
            },
            {
              "key": "e_1_3_2_1_24_1",
              "volume-title": "Morgan Kaufmann",
              "author": "Lieberman H.",
              "year": "2001",
              "unstructured": "Lieberman , H. (editor) Your Wish is my Command: Programming by Example . Morgan Kaufmann , San Fransisco, CA , 2001 . Lieberman, H.(editor) Your Wish is my Command: Programming by Example. Morgan Kaufmann, San Fransisco, CA, 2001."
            },
            {
              "key": "e_1_3_2_1_25_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/S1045-926X(05)80036-9"
            },
            {
              "key": "e_1_3_2_1_26_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/29933.30866"
            },
            {
              "key": "e_1_3_2_1_27_1",
              "volume-title": "Prototype-Based Programming: Concepts, Languages and Applications",
              "author": "Noble J.",
              "year": "1999",
              "unstructured": "Noble , J. , Taivalsaari , A. , Moore , I. Prototype-Based Programming: Concepts, Languages and Applications . Springer-Verlag Telos , January , 1999 . Noble, J., Taivalsaari, A., Moore, I. Prototype-Based Programming: Concepts, Languages and Applications. Springer-Verlag Telos, January, 1999."
            },
            {
              "key": "e_1_3_2_1_28_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/361598.361623"
            },
            {
              "key": "e_1_3_2_1_29_1",
              "volume-title": "The Design of Everyday Things",
              "author": "Norman D. A.",
              "year": "1988",
              "unstructured": "Norman , D. A. The Design of Everyday Things . Basic Books , New York , 1988 . Norman, D. A. The Design of Everyday Things. Basic Books, New York, 1988."
            },
            {
              "key": "e_1_3_2_1_30_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/203241.203251"
            },
            {
              "key": "e_1_3_2_1_31_1",
              "volume-title": "The Synthesizer Generator: A System for Constructing Language-based Editors",
              "author": "Reps T.",
              "year": "1988",
              "unstructured": "Reps , T. , Teitelbaum , T. The Synthesizer Generator: A System for Constructing Language-based Editors . Springer-Verlag , New York , 1988 . Reps, T., Teitelbaum, T. The Synthesizer Generator: A System for Constructing Language-based Editors. Springer-Verlag, New York, 1988."
            },
            {
              "key": "e_1_3_2_1_32_1",
              "volume-title": "A. Traits: Composable Units of Behavior. In Proc. of European Conference on Object-Oriented Programming (ECOOP 2003",
              "author": "Schärli N.",
              "year": "2003",
              "unstructured": "Schärli , N. , Ducasse , S. , Nierstrasz , O. , Black , A. Traits: Composable Units of Behavior. In Proc. of European Conference on Object-Oriented Programming (ECOOP 2003 ), ( July 2003 ), 248--274. Schärli, N., Ducasse, S., Nierstrasz, O., Black, A. Traits: Composable Units of Behavior. In Proc. of European Conference on Object-Oriented Programming (ECOOP 2003), (July 2003), 248--274."
            },
            {
              "key": "e_1_3_2_1_33_1",
              "first-page": "8",
              "volume": "16",
              "author": "Shneiderman",
              "year": "1983",
              "unstructured": "Shneiderman , B. Direct Manipulation: A Step Beyond Programming Languages. IEEE Computer 16 , 8 ( August , 1983 ) 57--69. Shneiderman, B. Direct Manipulation: A Step Beyond Programming Languages. IEEE Computer 16, 8 (August, 1983) 57--69.",
              "journal-title": "Direct Manipulation: A Step Beyond Programming Languages. IEEE Computer"
            },
            {
              "key": "e_1_3_2_1_34_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/217838.217843"
            },
            {
              "key": "e_1_3_2_1_35_1",
              "volume-title": "Structure-based Editors",
              "author": "Szwillus G.",
              "year": "1996",
              "unstructured": "Szwillus , G. , Neal , L. (editors) Structure-based Editors and Environments. Academic Press , San Diego, CA, 1996 . Szwillus, G., Neal, L. (editors) Structure-based Editors and Environments. Academic Press, San Diego, CA, 1996."
            },
            {
              "key": "e_1_3_2_1_36_1",
              "volume-title": "Proc. of the 1990 IEEE Workshop on Visual Languages",
              "author": "Tanimoto S.L.",
              "unstructured": "Tanimoto , S.L. Towards a theory of progressive operators for live visual programming environments . In Proc. of the 1990 IEEE Workshop on Visual Languages ( Skokie, IL, USA), 80--85. Tanimoto, S.L. Towards a theory of progressive operators for live visual programming environments. In Proc. of the 1990 IEEE Workshop on Visual Languages (Skokie, IL, USA), 80--85."
            },
            {
              "key": "e_1_3_2_1_37_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VLHCC.2004.35"
            },
            {
              "key": "e_1_3_2_1_38_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/5280.5281"
            },
            {
              "key": "e_1_3_2_1_39_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/248448.248457"
            },
            {
              "key": "e_1_3_2_1_40_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/38765.38828"
            },
            {
              "key": "e_1_3_2_1_41_1",
              "volume-title": "ECOOP '95 Conference Proceedings, LNCS 952",
              "author": "Ungar D.",
              "year": "1995",
              "unstructured": "Ungar , D. , Smith , R. B. Programming as an Experience: The Inspiration for Self . In ECOOP '95 Conference Proceedings, LNCS 952 . Springer Verlag , 1995 Ungar, D., Smith, R. B. Programming as an Experience: The Inspiration for Self. In ECOOP '95 Conference Proceedings, LNCS 952. Springer Verlag, 1995"
            },
            {
              "key": "e_1_3_2_1_42_1",
              "volume-title": "the Dataflow Programming Language",
              "author": "Wadge W. W.",
              "year": "1985",
              "unstructured": "Wadge , W. W. , Ashcroft , E. A. Lucid , the Dataflow Programming Language . Academic Press 1985 . Wadge, W. W., Ashcroft, E. A. Lucid, the Dataflow Programming Language. Academic Press 1985."
            },
            {
              "key": "e_1_3_2_1_43_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/143165.143169"
            },
            {
              "key": "e_1_3_2_1_44_1",
              "volume-title": "(Steele, G. L.) Common Lisp the Language",
              "author": "Waters R. C.",
              "year": "1984",
              "unstructured": "Waters , R. C. Series . In (Steele, G. L.) Common Lisp the Language . Digital Press 1984 Waters, R. C. Series. In (Steele, G. L.) Common Lisp the Language. Digital Press 1984"
            }
          ],
          "event": "OOPSLA05: ACM SIGPLAN Object Oriented Programming Systems and Applications Conference",
          "container-title": "Proceedings of the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/1094811.1094851",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                5
              ]
            ],
            "date-time": "2023-01-05T21:51:35Z",
            "timestamp": 1672955495000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/1094811.1094851"
            }
          },
          "subtitle": [
            "uncovering the simplicity of programming"
          ],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2005,
                10,
                12
              ]
            ]
          },
          "references-count": 44,
          "alternative-id": [
            "10.1145/1094811.1094851",
            "10.1145/1094811"
          ],
          "URL": "http://dx.doi.org/10.1145/1094811.1094851",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2005,
                10,
                12
              ]
            ]
          },
          "assertion": [
            {
              "value": "2005-10-12",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/1094811.1094851"
        },
        {
          "author": [
            {
              "given": "Jonathan",
              "family": "Edwards"
            },
            {
              "given": "Tomas",
              "family": "Petricek"
            }
          ],
          "type": "document",
          "id": "image-based",
          "citation-key": "image-based",
          "issued": {
            "date-parts": [
              [
                2021
              ]
            ]
          },
          "keyword": "Programming Languages (cs.PL),Software Engineering (cs.SE),FOS: Computer and information sciences,FOS: Computer and information sciences",
          "publisher": "arXiv",
          "title": "Typed Image-based Programming with Structure Editing",
          "URL": "https://arxiv.org/abs/2110.08993"
        },
        {
          "author": [
            {
              "given": "T. O.",
              "family": "Ellis"
            },
            {
              "given": "John F.",
              "family": "Heafner"
            },
            {
              "given": "William L.",
              "family": "Sibley"
            }
          ],
          "type": "paper-conference",
          "id": "Ellis1969THEGP",
          "citation-key": "Ellis1969THEGP",
          "issued": {
            "date-parts": [
              [
                1969
              ]
            ]
          },
          "title": "THE GRAIL PROJECT: AN EXPERIMENT IN MAN-MACHINE COMMUNICATIONS",
          "URL": "https://www.rand.org/pubs/research_memoranda/RM5999.html"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2022,
                3,
                29
              ]
            ],
            "date-time": "2022-03-29T18:44:44Z",
            "timestamp": 1648579484280
          },
          "reference-count": 0,
          "publisher": "RAND Corporation",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                1969
              ]
            ]
          },
          "DOI": "10.7249/rm6001",
          "type": "book",
          "created": {
            "date-parts": [
              [
                2018,
                8,
                30
              ]
            ],
            "date-time": "2018-08-30T18:16:52Z",
            "timestamp": 1535653012000
          },
          "source": "Crossref",
          "is-referenced-by-count": 4,
          "title": "The GRAIL Language and Operations",
          "prefix": "10.7249",
          "author": [
            {
              "given": "T.",
              "family": "Ellis",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "J.",
              "family": "Heafner",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "W.",
              "family": "Sibley",
              "sequence": "first",
              "affiliation": []
            }
          ],
          "member": "4276",
          "container-title": [],
          "original-title": [],
          "deposited": {
            "date-parts": [
              [
                2018,
                8,
                30
              ]
            ],
            "date-time": "2018-08-30T18:16:52Z",
            "timestamp": 1535653012000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://www.rand.org/pubs/research_memoranda/RM6001.html"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                1969
              ]
            ]
          },
          "references-count": 0,
          "URL": "http://dx.doi.org/10.7249/RM6001",
          "relation": {},
          "published": {
            "date-parts": [
              [
                1969
              ]
            ]
          },
          "id": "doi:10.7249/RM6001"
        },
        {
          "author": [
            {
              "family": "Enso"
            }
          ],
          "type": "webpage",
          "id": "enso",
          "citation-key": "enso",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Enso",
          "URL": "https://enso.org/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                11
              ]
            ],
            "date-time": "2023-01-11T21:54:46Z",
            "timestamp": 1673474086261
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 50,
          "publisher": "ACM",
          "funder": [
            {
              "DOI": "10.13039/100006435",
              "name": "National Science Foundation",
              "doi-asserted-by": "publisher",
              "award": [
                "1943623,1911149"
              ]
            }
          ],
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "DOI": "10.1145/3379337.3415869",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2020,
                10,
                16
              ]
            ],
            "date-time": "2020-10-16T19:01:43Z",
            "timestamp": 1602874903000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 12,
          "title": "Small-Step Live Programming by Example",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Kasra",
              "family": "Ferdowsifard",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Allen",
              "family": "Ordookhanians",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Hila",
              "family": "Peleg",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Sorin",
              "family": "Lerner",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Nadia",
              "family": "Polikarpova",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_2_1_1",
              "unstructured": "2019. Alfie. https://alfie.prodo.ai/. (2019). Accessed: 2019-09-01.  2019. Alfie. https://alfie.prodo.ai/. (2019). Accessed: 2019-09-01."
            },
            {
              "key": "e_1_3_2_2_2_1",
              "doi-asserted-by": "crossref",
              "unstructured": "2019. LightTable. http://lighttable.com/. (2019). Accessed: 2019-09-01.  2019. LightTable. http://lighttable.com/. (2019). Accessed: 2019-09-01.",
              "DOI": "10.1055/s-0040-1701744"
            },
            {
              "key": "e_1_3_2_2_3_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-39799-8_67"
            },
            {
              "key": "e_1_3_2_2_4_1",
              "volume-title": "Sygus-comp 2017: Results and analysis. arXiv preprint arXiv:1711.11438",
              "author": "Alur Rajeev",
              "year": "2017"
            },
            {
              "key": "e_1_3_2_2_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/ICSM.2015.7332518"
            },
            {
              "key": "e_1_3_2_2_6_1",
              "volume-title": "Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI '09)",
              "author": "Brandt Joel",
              "year": "1870"
            },
            {
              "key": "e_1_3_2_2_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3242587.3242661"
            },
            {
              "key": "e_1_3_2_2_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2908080.2908103"
            },
            {
              "key": "e_1_3_2_2_9_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3313831.3376442"
            },
            {
              "key": "e_1_3_2_2_10_1",
              "volume-title": "Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI '14)",
              "author": "Fast Ethan"
            },
            {
              "key": "e_1_3_2_2_11_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2568225.2568250"
            },
            {
              "key": "e_1_3_2_2_12_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3313831.3376316"
            },
            {
              "key": "e_1_3_2_2_13_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1925844.1926423"
            },
            {
              "key": "e_1_3_2_2_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/ICSE.2015.227"
            },
            {
              "key": "e_1_3_2_2_15_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2445196.2445368"
            },
            {
              "key": "e_1_3_2_2_16_1",
              "volume-title": "Proceedings of the ACM on Programming Languages 4, POPL",
              "author": "Guo Zheng",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2491956.2462192"
            },
            {
              "key": "e_1_3_2_2_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3332165.3347925"
            },
            {
              "key": "e_1_3_2_2_20_1",
              "volume-title": "Direct Manipulation for Imperative Programs. In International Static Analysis Symposium. Springer, 347--367",
              "author": "Hu Qinheping",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_21_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3092282.3092285"
            },
            {
              "key": "e_1_3_2_2_22_1",
              "volume-title": "Proceedings of the 30th Annual ACM Symposium on User Interface Software and Technology (UIST '17)",
              "author": "Kang Hyeonsu"
            },
            {
              "key": "e_1_3_2_2_23_1",
              "volume-title": "2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)",
              "author": "Jan-Peter",
              "year": "2014"
            },
            {
              "key": "e_1_3_2_2_24_1",
              "volume-title": "CHI 2008 Workshop on Usable AI.",
              "author": "Tessa"
            },
            {
              "key": "e_1_3_2_2_25_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2666356.2594333"
            },
            {
              "key": "e_1_3_2_2_26_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3092703.3098225"
            },
            {
              "key": "e_1_3_2_2_27_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3313831.3376494"
            },
            {
              "key": "e_1_3_2_2_28_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/SANER.2015.7081849"
            },
            {
              "key": "e_1_3_2_2_29_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2786805.2786811"
            },
            {
              "key": "e_1_3_2_2_30_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2914770.2837617"
            },
            {
              "key": "e_1_3_2_2_31_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3276497"
            },
            {
              "key": "e_1_3_2_2_32_1",
              "volume-title": "Proc. ACM Program. Lang. 3, POPL, Article 14 (Jan.",
              "author": "Omar Cyrus",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_33_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/j.ijhcs.2006.04.006"
            },
            {
              "key": "e_1_3_2_2_34_1",
              "doi-asserted-by": "crossref",
              "unstructured": "Hila Peleg Roi Gabay Shachar Itzhaky and Eran Yahav. 2020. Programming with a Read-Eval-Synth Loop. (2020). Manuscript submitted for publication.  Hila Peleg Roi Gabay Shachar Itzhaky and Eran Yahav. 2020. Programming with a Read-Eval-Synth Loop. (2020). Manuscript submitted for publication.",
              "DOI": "10.1145/3428227"
            },
            {
              "key": "e_1_3_2_2_35_1",
              "volume-title": "34th European Conference on Object-Oriented Programming, ECOOP",
              "author": "Peleg Hila",
              "year": "2020"
            },
            {
              "key": "e_1_3_2_2_36_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3180155.3180189"
            },
            {
              "key": "e_1_3_2_2_37_1",
              "volume-title": "Babylonian-style Programming: Design and Implementation of an Integration of Live Examples Into General-purpose Source Code. The Art, Science, and Engineering of Programming 3, 3",
              "author": "Rauch David",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_38_1",
              "volume-title": "Live Programming By Example. In Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems. 1--4.",
              "author": "Santolucito Mark",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_39_1",
              "volume-title": "LIVE Workshop.",
              "author": "Schuster Christopher",
              "year": "2016"
            },
            {
              "key": "e_1_3_2_2_40_1",
              "first-page": "57",
              "article-title": "Direct Manipulation",
              "volume": "16",
              "author": "Shneiderman Ben",
              "year": "1983",
              "journal-title": "A Step Beyond Programming Languages. Computer"
            },
            {
              "key": "e_1_3_2_2_41_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2908080.2908102"
            },
            {
              "key": "e_1_3_2_2_42_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1168857.1168907"
            },
            {
              "key": "e_1_3_2_2_43_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/2662726.2662735"
            },
            {
              "key": "e_1_3_2_2_44_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2499370.2462174"
            },
            {
              "key": "e_1_3_2_2_45_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3332165.3347944"
            },
            {
              "key": "e_1_3_2_2_46_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3106237.3106263"
            },
            {
              "key": "e_1_3_2_2_47_1",
              "unstructured": "Bret Victor. 2012. Learnable Programming. (2012). http://worrydream.com/LearnableProgramming/  Bret Victor. 2012. Learnable Programming. (2012). http://worrydream.com/LearnableProgramming/"
            },
            {
              "key": "e_1_3_2_2_48_1",
              "volume-title": "Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems (CHI '97)",
              "author": "Wilcox E. M."
            },
            {
              "key": "e_1_3_2_2_49_1",
              "doi-asserted-by": "crossref",
              "volume-title": "The Formal Semantics of Programming Languages: An Introduction",
              "author": "Winskel Glynn",
              "DOI": "10.7551/mitpress/3054.001.0001"
            },
            {
              "key": "e_1_3_2_2_50_1",
              "volume-title": "Precise Condition Synthesis for Program Repair. In 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE)",
              "volume": "00",
              "author": "Xiong Y.",
              "year": "2017"
            },
            {
              "key": "e_1_3_2_2_51_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3187009.3177735"
            }
          ],
          "event": "UIST '20: The 33rd Annual ACM Symposium on User Interface Software and Technology",
          "container-title": "Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3379337.3415869",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                9
              ]
            ],
            "date-time": "2023-01-09T16:49:58Z",
            "timestamp": 1673282998000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3379337.3415869"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "references-count": 50,
          "alternative-id": [
            "10.1145/3379337.3415869",
            "10.1145/3379337"
          ],
          "URL": "http://dx.doi.org/10.1145/3379337.3415869",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "assertion": [
            {
              "value": "2020-10-20",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3379337.3415869"
        },
        {
          "author": [
            {
              "given": "Chris",
              "family": "Granger"
            }
          ],
          "type": "webpage",
          "id": "light-table",
          "citation-key": "light-table",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Light Table",
          "URL": "http://lighttable.com/"
        },
        {
          "author": [
            {
              "given": "Joshua",
              "family": "Horowitz"
            }
          ],
          "type": "manuscript",
          "id": "pane",
          "citation-key": "pane",
          "issued": {
            "date-parts": [
              [
                2018
              ]
            ]
          },
          "note": "Presented at the Workshop on Live Programming (LIVE) 2018",
          "title": "PANE: Programming with Visible Data",
          "URL": "http://joshuahhh.com/projects/pane/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                11
              ]
            ],
            "date-time": "2023-01-11T05:56:58Z",
            "timestamp": 1673416618425
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 3,
          "publisher": "ACM",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2015,
                    10,
                    25
                  ]
                ],
                "date-time": "2015-10-25T00:00:00Z",
                "timestamp": 1445731200000
              },
              "content-version": "vor",
              "delay-in-days": 0,
              "URL": "http://www.acm.org/publications/policies/copyright_policy#Background"
            }
          ],
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2015,
                10,
                25
              ]
            ]
          },
          "DOI": "10.1145/2814189.2817268",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2015,
                11,
                3
              ]
            ],
            "date-time": "2015-11-03T20:06:54Z",
            "timestamp": 1446581214000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 2,
          "title": "Shiranui: a live programming with support for unit testing",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Tomoki",
              "family": "Imai",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Tokyo Institute of Technology, Japan"
                }
              ]
            },
            {
              "given": "Hidehiko",
              "family": "Masuhara",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tokyo Institute of Technology, Japan"
                }
              ]
            },
            {
              "given": "Tomoyuki",
              "family": "Aotani",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tokyo Institute of Technology, Japan"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2015,
                10,
                25
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_1_2_1",
              "volume-title": "Shiranui: Test-friendly Live Programming Environment. In The 31st JSSST Annual Conference",
              "author": "Imai T.",
              "year": "2014",
              "unstructured": "T. Imai , H. Masuhara , and T. Aotani . Shiranui: Test-friendly Live Programming Environment. In The 31st JSSST Annual Conference , Sep. 2014 . T. Imai, H. Masuhara, and T. Aotani. Shiranui: Test-friendly Live Programming Environment. In The 31st JSSST Annual Conference, Sep. 2014."
            },
            {
              "key": "e_1_3_2_1_3_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2509578.2509585"
            },
            {
              "key": "e_1_3_2_1_4_1",
              "first-page": "6",
              "volume": "201",
              "author": "Apple Inc. Swift - Overview - Apple Developer. https: //developer.apple.com/swift/.",
              "unstructured": "Apple Inc. Swift - Overview - Apple Developer. https: //developer.apple.com/swift/. Accessed 201 5- 6 - 30 . Introduction Test Supporting Features in Live Programming Environment Shiranui Overview of Shiranui Testing Features in Shiranui Converting Experimental Expressions to Test Cases Converting Complicated Values into Expressions Executing Each Flyline with an Isolated Execution Environment Conclusion and Future Work Apple Inc. Swift - Overview - Apple Developer. https: //developer.apple.com/swift/. Accessed 2015-6-30. Introduction Test Supporting Features in Live Programming Environment Shiranui Overview of Shiranui Testing Features in Shiranui Converting Experimental Expressions to Test Cases Converting Complicated Values into Expressions Executing Each Flyline with an Isolated Execution Environment Conclusion and Future Work",
              "journal-title": "Accessed"
            }
          ],
          "event": "SPLASH '15: Conference on Systems, Programming, Languages, and Applications: Software for Humanity",
          "container-title": "Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/2814189.2817268",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                11
              ]
            ],
            "date-time": "2023-01-11T02:08:46Z",
            "timestamp": 1673402926000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/2814189.2817268"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2015,
                10,
                25
              ]
            ]
          },
          "references-count": 3,
          "alternative-id": [
            "10.1145/2814189.2817268",
            "10.1145/2814189"
          ],
          "URL": "http://dx.doi.org/10.1145/2814189.2817268",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2015,
                10,
                25
              ]
            ]
          },
          "assertion": [
            {
              "value": "2015-10-25",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/2814189.2817268"
        },
        {
          "author": [
            {
              "family": "JetBrains s.r.o."
            }
          ],
          "type": "webpage",
          "id": "mps",
          "citation-key": "mps",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "MPS: The Domain-Specific Language Creator by JetBrains",
          "URL": "https://www.jetbrains.com/mps/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                27
              ]
            ],
            "date-time": "2023-03-27T18:28:35Z",
            "timestamp": 1679941715099
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 26,
          "publisher": "ACM",
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2011,
                5,
                7
              ]
            ]
          },
          "DOI": "10.1145/1978942.1979444",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2011,
                5,
                9
              ]
            ],
            "date-time": "2011-05-09T12:48:29Z",
            "timestamp": 1304945309000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 315,
          "title": "Wrangler",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Sean",
              "family": "Kandel",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Stanford University, Stanford, California, USA"
                }
              ]
            },
            {
              "given": "Andreas",
              "family": "Paepcke",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Stanford University, Stanford, California, USA"
                }
              ]
            },
            {
              "given": "Joseph",
              "family": "Hellerstein",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, Berkeley, Berkeley, California, USA"
                }
              ]
            },
            {
              "given": "Jeffrey",
              "family": "Heer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Stanford University, Stanford, California, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2011,
                5,
                7
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_2_1_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/872757.872799"
            },
            {
              "key": "e_1_3_2_2_2_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/369505.369521"
            },
            {
              "key": "e_1_3_2_2_3_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1376616.1376700"
            },
            {
              "key": "e_1_3_2_2_4_1",
              "doi-asserted-by": "crossref",
              "volume-title": "Exploratory Data Mining and Data Cleaning",
              "author": "Dasu T.",
              "year": "2003",
              "unstructured": "T. Dasu and T. Johnson . Exploratory Data Mining and Data Cleaning . John Wiley & Sons, Inc. , New York, NY , 2003 . T. Dasu and T. Johnson. Exploratory Data Mining and Data Cleaning. John Wiley & Sons, Inc., New York, NY, 2003.",
              "DOI": "10.1002/0471448354"
            },
            {
              "key": "e_1_3_2_2_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/564691.564719"
            },
            {
              "key": "e_1_3_2_2_6_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TKDE.2007.9"
            },
            {
              "key": "e_1_3_2_2_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1065010.1065046"
            },
            {
              "key": "e_1_3_2_2_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/342009.336568"
            },
            {
              "key": "e_1_3_2_2_9_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1066157.1066252"
            },
            {
              "key": "e_1_3_2_2_10_1",
              "volume-title": "Quantitative data cleaning for large databases",
              "author": "Hellerstein J. M.",
              "year": "2008",
              "unstructured": "J. M. Hellerstein . Quantitative data cleaning for large databases , 2008 . White Paper, United Nations Economic Commission for Europe . J. M. Hellerstein. Quantitative data cleaning for large databases, 2008. White Paper, United Nations Economic Commission for Europe."
            },
            {
              "key": "e_1_3_2_2_11_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1023/B:AIRE.0000045502.10941.a9"
            },
            {
              "key": "e_1_3_2_2_12_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/302979.303030"
            },
            {
              "key": "e_1_3_2_2_13_1",
              "unstructured": "D. Huynh and S. Mazzocchi. Google Refine. http://code.google.com/p/google-refine/.  D. Huynh and S. Mazzocchi. Google Refine. http://code.google.com/p/google-refine/."
            },
            {
              "key": "e_1_3_2_2_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/1785162.1785232"
            },
            {
              "key": "e_1_3_2_2_15_1",
              "volume-title": "CIDR",
              "author": "Ives Z. G.",
              "year": "2009",
              "unstructured": "Z. G. Ives , C. A. Knoblock , S. Minton , M. Jacob , P. Pratim , T. R. Tuchinda , J. Luis , A. Maria , and M. C. Gazen . Interactive data integration through smart copy & paste . In CIDR , 2009 . Z. G. Ives, C. A. Knoblock, S. Minton, M. Jacob, P. Pratim, T. R. Tuchinda, J. Luis, A. Maria, and M. C. Gazen. Interactive data integration through smart copy & paste. In CIDR, 2009."
            },
            {
              "key": "e_1_3_2_2_16_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2008.55"
            },
            {
              "key": "e_1_3_2_2_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/503099.503102"
            },
            {
              "key": "e_1_3_2_2_18_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1502650.1502667"
            },
            {
              "key": "e_1_3_2_2_19_1",
              "first-page": "161",
              "volume-title": "USENIX Tech. Conf.",
              "author": "Miller R. C.",
              "year": "2001",
              "unstructured": "R. C. Miller and B. A. Myers . Interactive simultaneous editing of multiple text regions . In USENIX Tech. Conf. , pages 161 -- 174 , 2001 . R. C. Miller and B. A. Myers. Interactive simultaneous editing of multiple text regions. In USENIX Tech. Conf., pages 161--174, 2001."
            },
            {
              "key": "e_1_3_2_2_20_1",
              "volume-title": "The Design of Everyday Things",
              "author": "Norman D. A.",
              "year": "2002",
              "unstructured": "D. A. Norman . The Design of Everyday Things . Basic Books , 2002 . D. A. Norman. The Design of Everyday Things. Basic Books, 2002."
            },
            {
              "key": "e_1_3_2_2_21_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/s007780100057"
            },
            {
              "key": "e_1_3_2_2_22_1",
              "first-page": "381",
              "volume-title": "VLDB",
              "author": "Raman V.",
              "year": "2001",
              "unstructured": "V. Raman and J. M. Hellerstein . Potter's wheel: An interactive data cleaning system . In VLDB , pages 381 -- 390 , 2001 . V. Raman and J. M. Hellerstein. Potter's wheel: An interactive data cleaning system. In VLDB, pages 381--390, 2001."
            },
            {
              "key": "e_1_3_2_2_23_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1054972.1055032"
            },
            {
              "key": "e_1_3_2_2_24_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1502650.1502692"
            },
            {
              "key": "e_1_3_2_2_25_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1023/A:1007562322031"
            },
            {
              "key": "e_1_3_2_2_26_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1378773.1378792"
            }
          ],
          "event": "CHI '11: CHI Conference on Human Factors in Computing Systems",
          "container-title": "Proceedings of the SIGCHI Conference on Human Factors in Computing Systems",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/1978942.1979444",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                8
              ]
            ],
            "date-time": "2023-01-08T11:00:55Z",
            "timestamp": 1673175655000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/1978942.1979444"
            }
          },
          "subtitle": [
            "interactive visual specification of data transformation scripts"
          ],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2011,
                5,
                7
              ]
            ]
          },
          "references-count": 26,
          "alternative-id": [
            "10.1145/1978942.1979444",
            "10.1145/1978942"
          ],
          "URL": "http://dx.doi.org/10.1145/1978942.1979444",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2011,
                5,
                7
              ]
            ]
          },
          "assertion": [
            {
              "value": "2011-05-07",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/1978942.1979444"
        },
        {
          "author": [
            {
              "given": "Saketh",
              "family": "Kasibatla"
            },
            {
              "given": "Alex",
              "family": "Warth"
            }
          ],
          "type": "manuscript",
          "id": "seymour",
          "citation-key": "seymour",
          "issued": {
            "date-parts": [
              [
                2017
              ]
            ]
          },
          "note": "Presented at the Workshop on Live Programming (LIVE) 2017",
          "title": "Seymour: Live Programming for the Classroom",
          "URL": "https://harc.github.io/seymour-live2017/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                11
              ]
            ],
            "date-time": "2023-01-11T23:16:24Z",
            "timestamp": 1673478984161
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 29,
          "publisher": "ACM",
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "DOI": "10.1145/3379337.3415842",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2020,
                10,
                16
              ]
            ],
            "date-time": "2020-10-16T19:01:43Z",
            "timestamp": 1602874903000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 19,
          "title": "mage: Fluid Moves Between Code and Graphical Work in Computational Notebooks",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Mary Beth",
              "family": "Kery",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Carnegie Mellon University, Pittsburgh, PA, USA"
                }
              ]
            },
            {
              "given": "Donghao",
              "family": "Ren",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc., Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Fred",
              "family": "Hohman",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Georgia Institute of Technology, Atlanta, GA, USA"
                }
              ]
            },
            {
              "given": "Dominik",
              "family": "Moritz",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc., Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Kanit",
              "family": "Wongsuphasawat",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc., Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Kayur",
              "family": "Patel",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc, Seattle, WA, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_2_1_1",
              "volume-title": "Iterating between tools to create and edit visualizations",
              "author": "Bigelow Alex",
              "year": "2016"
            },
            {
              "key": "e_1_3_2_2_2_1",
              "volume-title": "Companion to the 21st ACM SIGPLAN symposium on Object-oriented programming systems, languages, and applications.",
              "author": "Bloch Joshua"
            },
            {
              "key": "e_1_3_2_2_3_1",
              "volume-title": "FairVis: Visual Analytics for Discovering Intersectional Bias in Machine Learning. IEEE Conference on Visual Analytics Science and Technology (VAST) (2019",
              "author": "Cabrera Ángel",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VLHCC.2019.8818751"
            },
            {
              "key": "e_1_3_2_2_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-540-74853-3_25"
            },
            {
              "key": "e_1_3_2_2_6_1",
              "unstructured": "Ian Drosos Titus Barik Philip J Guo Robert DeLine and Sumit Gulwani. Wrex: A Unified Programming-by-Example Interaction for Synthesizing Readable Code for Data Scientists. (????).  Ian Drosos Titus Barik Philip J Guo Robert DeLine and Sumit Gulwani. Wrex: A Unified Programming-by-Example Interaction for Synthesizing Readable Code for Data Scientists. (????)."
            },
            {
              "key": "e_1_3_2_2_7_1",
              "unstructured": "Dheeru Dua and Casey Graff. 2017. UCI Machine Learning Repository. (2017). http://archive.ics.uci.edu/ml  Dheeru Dua and Casey Graff. 2017. UCI Machine Learning Repository. (2017). http://archive.ics.uci.edu/ml"
            },
            {
              "key": "e_1_3_2_2_8_1",
              "volume-title": "Data Science, Machine Learning in 2018: Trends and Analysis.",
              "author": "Dnuggets Gregory Piatetsky",
              "year": "2018"
            },
            {
              "key": "e_1_3_2_2_9_1",
              "volume-title": "Automating string processing in spreadsheets using input-output examples. ACM Sigplan Notices",
              "author": "Gulwani Sumit",
              "year": "2011"
            },
            {
              "key": "e_1_3_2_2_10_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1449715.1449732"
            },
            {
              "key": "e_1_3_2_2_11_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3332165.3347925"
            },
            {
              "key": "e_1_3_2_2_12_1",
              "volume-title": "Direct manipulation interfaces. Human-computer interaction",
              "author": "Hutchins Edwin L",
              "year": "1985"
            },
            {
              "key": "e_1_3_2_2_13_1",
              "volume-title": "Kaggle Machine Learning & Data Science Survey",
              "year": "2017"
            },
            {
              "key": "e_1_3_2_2_14_1",
              "volume-title": "Available from Kaggle https://www.kaggle.com/kaggle/kaggle-survey-2018",
              "author": "Survey Kaggle",
              "year": "2018"
            },
            {
              "key": "e_1_3_2_2_15_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1978942.1979444"
            },
            {
              "key": "e_1_3_2_2_16_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3025453.3025626"
            },
            {
              "key": "e_1_3_2_2_17_1",
              "volume-title": "Positioning and Power in Academic Publishing: Players, Agents and Agendas",
              "author": "Kluyver Thomas"
            },
            {
              "key": "e_1_3_2_2_18_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1866029.1866038"
            },
            {
              "key": "e_1_3_2_2_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1357054.1357160"
            },
            {
              "key": "e_1_3_2_2_20_1",
              "volume-title": "Reproducible research in computational science. Science",
              "author": "Peng Roger D",
              "year": "2011"
            },
            {
              "key": "e_1_3_2_2_21_1",
              "volume-title": "Why Jupyter is data scientists' computational notebook of choice. Nature",
              "author": "Perkel Jeffrey M",
              "year": "2018"
            },
            {
              "key": "e_1_3_2_2_22_1",
              "volume-title": "A critical review of the literature on spreadsheet errors. Decision Support Systems",
              "author": "Powell Stephen G",
              "year": "2008"
            },
            {
              "key": "e_1_3_2_2_23_1",
              "volume-title": "Squares: Supporting interactive performance analysis for multiclass classifiers",
              "author": "Ren Donghao",
              "year": "2016"
            },
            {
              "key": "e_1_3_2_2_24_1",
              "volume-title": "Vega-lite: A grammar of interactive graphics",
              "author": "Satyanarayan Arvind",
              "year": "2016"
            },
            {
              "key": "e_1_3_2_2_25_1",
              "volume-title": "Interactive notebooks: Sharing the code. Nature News",
              "author": "Shen Helen",
              "year": "2014"
            },
            {
              "key": "e_1_3_2_2_26_1",
              "volume-title": "Polaris: A system for query, analysis, and visualization of multidimensional relational databases",
              "author": "Stolte Chris",
              "year": "2002"
            },
            {
              "key": "e_1_3_2_2_27_1",
              "volume-title": "Altair: Interactive Statistical Visualizations for Python. Journal of Open Source Software",
              "author": "VanderPlas Jacob",
              "year": "2018"
            },
            {
              "key": "e_1_3_2_2_28_1",
              "volume-title": "Voyager: Exploratory analysis via faceted browsing of visualization recommendations",
              "author": "Wongsuphasawat Kanit",
              "year": "2015"
            },
            {
              "key": "e_1_3_2_2_29_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3196709.3196729"
            }
          ],
          "event": "UIST '20: The 33rd Annual ACM Symposium on User Interface Software and Technology",
          "container-title": "Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3379337.3415842",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                9
              ]
            ],
            "date-time": "2023-01-09T16:38:14Z",
            "timestamp": 1673282294000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3379337.3415842"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "references-count": 29,
          "alternative-id": [
            "10.1145/3379337.3415842",
            "10.1145/3379337"
          ],
          "URL": "http://dx.doi.org/10.1145/3379337.3415842",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2020,
                10,
                20
              ]
            ]
          },
          "assertion": [
            {
              "value": "2020-10-20",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3379337.3415842"
        },
        {
          "container-title": "AI Mag.",
          "author": [
            {
              "given": "Tessa",
              "family": "Lau"
            }
          ],
          "DOI": "10.1609/aimag.v30i4.2262",
          "type": "article-journal",
          "id": "DBLP:journals/aim/Lau09",
          "citation-key": "DBLP:journals/aim/Lau09",
          "issue": "4",
          "issued": {
            "date-parts": [
              [
                2009
              ]
            ]
          },
          "page": "65-67",
          "title": "Why Programming-By-Demonstration Systems Fail: Lessons Learned for Usable AI",
          "URL": "https://doi.org/10.1609/aimag.v30i4.2262",
          "volume": "30"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                22
              ]
            ],
            "date-time": "2023-03-22T10:53:47Z",
            "timestamp": 1679482427231
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 20,
          "publisher": "ACM",
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2020,
                4,
                21
              ]
            ]
          },
          "DOI": "10.1145/3313831.3376494",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2020,
                5,
                27
              ]
            ],
            "date-time": "2020-05-27T16:16:47Z",
            "timestamp": 1590596207000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 12,
          "title": "Projection Boxes: On-the-fly Reconfigurable Visualization for Live Programming",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Sorin",
              "family": "Lerner",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2020,
                4,
                23
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_2_1_1",
              "unstructured": "2019. Alfie. https://alfie.prodo.ai/. (2019). Accessed: 2019-09-01.  2019. Alfie. https://alfie.prodo.ai/. (2019). Accessed: 2019-09-01."
            },
            {
              "key": "e_1_3_2_2_2_1",
              "doi-asserted-by": "crossref",
              "unstructured": "2019. LightTable. http://lighttable.com/. (2019). Accessed: 2019-09-01.  2019. LightTable. http://lighttable.com/. (2019). Accessed: 2019-09-01.",
              "DOI": "10.1055/s-0040-1701744"
            },
            {
              "key": "e_1_3_2_2_3_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/ICSM.2015.7332518"
            },
            {
              "key": "e_1_3_2_2_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2445196.2445368"
            },
            {
              "key": "e_1_3_2_2_6_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2984511.2984575"
            },
            {
              "key": "e_1_3_2_2_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3332165.3347925"
            },
            {
              "key": "e_1_3_2_2_8_1",
              "volume": "201",
              "author": "Kang Hyeonsu",
              "journal-title": "Philip J. Guo."
            },
            {
              "key": "e_1_3_2_2_9_1",
              "volume-title": "Seymour: Live Programming for the Classroom. In International Workshop on Live Programming Worskhop (LIVE",
              "author": "Kasibatla Saketh",
              "year": "2017"
            },
            {
              "key": "e_1_3_2_2_10_1",
              "volume-title": "Seymour: A Live Programming Environment for the Classroom. Master's thesis",
              "author": "Kasibatla Saketh Ram",
              "year": "2018"
            },
            {
              "key": "e_1_3_2_2_11_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VLHCC.2014.6883013"
            },
            {
              "key": "e_1_3_2_2_12_1",
              "volume-title": "Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI '14)",
              "author": "Lieber Tom"
            },
            {
              "key": "e_1_3_2_2_13_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3276497"
            },
            {
              "key": "e_1_3_2_2_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2509578.2509585"
            },
            {
              "key": "e_1_3_2_2_15_1",
              "volume-title": "Proc. ACM Program. Lang. 3, POPL, Article 14 (Jan.",
              "author": "Omar Cyrus",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_16_1",
              "volume-title": "Babylonian-style Programming: Design and Implementation of an Integration of Live Examples Into General-purpose Source Code. The Art, Science, and Engineering of Programming 3, 3",
              "author": "Rauch David",
              "year": "2019"
            },
            {
              "key": "e_1_3_2_2_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3340671.3343358"
            },
            {
              "key": "e_1_3_2_2_18_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/2662726.2662735"
            },
            {
              "key": "e_1_3_2_2_19_1",
              "unstructured": "Bret Victor. 2012a. Inventing on Principle. (2012). https://vimeo.com/36579366#t=18m05s  Bret Victor. 2012a. Inventing on Principle. (2012). https://vimeo.com/36579366#t=18m05s"
            },
            {
              "key": "e_1_3_2_2_20_1",
              "unstructured": "Bret Victor. 2012b. Learnable Programming. (2012). http://worrydream.com/LearnableProgramming/  Bret Victor. 2012b. Learnable Programming. (2012). http://worrydream.com/LearnableProgramming/"
            },
            {
              "key": "e_1_3_2_2_21_1",
              "volume-title": "Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems (CHI '97)",
              "author": "Wilcox E. M."
            }
          ],
          "event": "CHI '20: CHI Conference on Human Factors in Computing Systems",
          "container-title": "Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3313831.3376494",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                11
              ]
            ],
            "date-time": "2023-01-11T01:46:00Z",
            "timestamp": 1673401560000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3313831.3376494"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2020,
                4,
                21
              ]
            ]
          },
          "references-count": 20,
          "alternative-id": [
            "10.1145/3313831.3376494",
            "10.1145/3313831"
          ],
          "URL": "http://dx.doi.org/10.1145/3313831.3376494",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2020,
                4,
                21
              ]
            ]
          },
          "assertion": [
            {
              "value": "2020-04-23",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3313831.3376494"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                24
              ]
            ],
            "date-time": "2023-03-24T00:13:59Z",
            "timestamp": 1679616839699
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 61,
          "publisher": "ACM",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2019,
                    4,
                    19
                  ]
                ],
                "date-time": "2019-04-19T00:00:00Z",
                "timestamp": 1555632000000
              },
              "content-version": "vor",
              "delay-in-days": 365,
              "URL": "http://www.acm.org/publications/policies/copyright_policy#Background"
            }
          ],
          "funder": [
            {
              "DOI": "10.13039/100000001",
              "name": "NSF",
              "doi-asserted-by": "publisher",
              "award": [
                "IIS-1320537"
              ]
            }
          ],
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2018,
                4,
                19
              ]
            ]
          },
          "DOI": "10.1145/3173574.3173697",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2018,
                4,
                20
              ]
            ],
            "date-time": "2018-04-20T15:43:11Z",
            "timestamp": 1524238991000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 75,
          "title": "Data Illustrator",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Zhicheng",
              "family": "Liu",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Adobe Research, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "John",
              "family": "Thompson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Georgia Institute of Technology, Atlanta, GA, USA"
                }
              ]
            },
            {
              "given": "Alan",
              "family": "Wilson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., Lehi, UT, USA"
                }
              ]
            },
            {
              "given": "Mira",
              "family": "Dontcheva",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Research, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "James",
              "family": "Delorey",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., Lehi, UT, USA"
                }
              ]
            },
            {
              "given": "Sam",
              "family": "Grigg",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., Lehi, UT, USA"
                }
              ]
            },
            {
              "given": "Bernard",
              "family": "Kerr",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., San Francisco, CA, USA"
                }
              ]
            },
            {
              "given": "John",
              "family": "Stasko",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Georgia Institute of Technology, Atlanta, GA, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2018,
                4,
                19
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_2_1_1",
              "volume-title": "Retrieved",
              "year": "2014",
              "unstructured": "Accurat. 2014 . Brain Drain - part of the collection: La Leturra - Visual Data. (2014) . Retrieved September 17, 2017 from https://www.accurat.it/works/la-lettura/. Accurat. 2014. Brain Drain - part of the collection: La Leturra - Visual Data. (2014). Retrieved September 17, 2017 from https://www.accurat.it/works/la-lettura/."
            },
            {
              "key": "e_1_3_2_2_2_1",
              "volume-title": "Retrieved",
              "author": "App Anima",
              "year": "2017",
              "unstructured": "Anima App . 2017 . Auto-Layout: Introducing Stacks-Flexbox for Sketch. (21 February 2017) . Retrieved September 17, 2017 from https://medium.com/sketch-app-sources/auto-layoutintroducing-stacks-flexbox-for-sketch-c8a11422c7b5. Anima App. 2017. Auto-Layout: Introducing Stacks-Flexbox for Sketch. (21 February 2017). Retrieved September 17, 2017 from https://medium.com/sketch-app-sources/auto-layoutintroducing-stacks-flexbox-for-sketch-c8a11422c7b5."
            },
            {
              "key": "e_1_3_2_2_3_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2598153.2598175"
            },
            {
              "key": "e_1_3_2_2_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2016.2598609"
            },
            {
              "key": "e_1_3_2_2_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2009.174"
            },
            {
              "key": "e_1_3_2_2_6_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2011.185"
            },
            {
              "key": "e_1_3_2_2_7_1",
              "unstructured": "Alberto Cairo. 2012. The Functional Art: An introduction to information graphics and visualization. New Riders.   Alberto Cairo. 2012. The Functional Art: An introduction to information graphics and visualization. New Riders."
            },
            {
              "key": "e_1_3_2_2_8_1",
              "unstructured": "Stuart K Card Jock D Mackinlay and Ben Shneiderman. 1999. Readings in Information Visualization: Using Vision to Think. Morgan Kaufmann.   Stuart K Card Jock D Mackinlay and Ben Shneiderman. 1999. Readings in Information Visualization: Using Vision to Think. Morgan Kaufmann."
            },
            {
              "key": "e_1_3_2_2_9_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2011.201"
            },
            {
              "key": "e_1_3_2_2_10_1",
              "volume-title": "Retrieved",
              "author": "Coding Bohemian",
              "year": "2017",
              "unstructured": "Bohemian Coding . 2017 . Sketch - The digital design toolkit. (2017) . Retrieved September 17, 2017 from https://www.sketchapp.com/. Bohemian Coding. 2017. Sketch - The digital design toolkit. (2017). Retrieved September 17, 2017 from https://www.sketchapp.com/."
            },
            {
              "key": "e_1_3_2_2_11_1",
              "volume-title": "Retrieved",
              "author": "Design Density",
              "year": "2013",
              "unstructured": "Density Design and Calibro. 2013 . Raw Graphs. (16 January 2013) . Retrieved September 17, 2017 from http://rawgraphs.io/. Density Design and Calibro. 2013. Raw Graphs. (16 January 2013). Retrieved September 17, 2017 from http://rawgraphs.io/."
            },
            {
              "key": "e_1_3_2_2_12_1",
              "volume-title": "Retrieved",
              "author": "Design Figma",
              "year": "2017",
              "unstructured": "Figma Design . 2017 . Figma: the collaborative interface design tool. (2017) . Retrieved September 17, 2017 from https://www.figma.com/. Figma Design. 2017. Figma: the collaborative interface design tool. (2017). Retrieved September 17, 2017 from https://www.figma.com/."
            },
            {
              "key": "e_1_3_2_2_13_1",
              "volume-title": "Retrieved",
              "year": "2016",
              "unstructured": "DocumentCloud. 2016 . Backbone.js. (5 April 2016) . Retrieved September 17, 2017 from http://backbonejs.org/. DocumentCloud. 2016. Backbone.js. (5 April 2016). Retrieved September 17, 2017 from http://backbonejs.org/."
            },
            {
              "key": "e_1_3_2_2_14_1",
              "volume-title": "Retrieved",
              "author": "Datawrapper",
              "year": "2017",
              "unstructured": "Datawrapper GmbH. 2017 . Datawrapper. (2017) . Retrieved September 17, 2017 from https://www.datawrapper.de/. Datawrapper GmbH. 2017. Datawrapper. (2017). Retrieved September 17, 2017 from https://www.datawrapper.de/."
            },
            {
              "key": "e_1_3_2_2_15_1",
              "volume-title": "Retrieved",
              "author": "Goldenberg Russell",
              "year": "2017",
              "unstructured": "Russell Goldenberg . 2017 . Twenty Years of the NBA Redrafted. (2017) . Retrieved September 17, 2017 from https://pudding.cool/2017/03/redraft/. Russell Goldenberg. 2017. Twenty Years of the NBA Redrafted. (2017). Retrieved September 17, 2017 from https://pudding.cool/2017/03/redraft/."
            },
            {
              "key": "e_1_3_2_2_16_1",
              "volume-title": "A survey of visualization construction user interfaces. EuroVis - Short Papers",
              "author": "Grammel Lars",
              "year": "2013",
              "unstructured": "Lars Grammel , Chris Bennett , Melanie Tory , and Margaret-Anne Storey . 2013. A survey of visualization construction user interfaces. EuroVis - Short Papers ( 2013 ), 19--23. Lars Grammel, Chris Bennett, Melanie Tory, and Margaret-Anne Storey. 2013. A survey of visualization construction user interfaces. EuroVis - Short Papers (2013), 19--23."
            },
            {
              "key": "e_1_3_2_2_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2010.144"
            },
            {
              "key": "e_1_3_2_2_18_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1054972.1055031"
            },
            {
              "key": "e_1_3_2_2_19_1",
              "volume-title": "Retrieved",
              "author": "Heer Jeffrey",
              "year": "2017",
              "unstructured": "Jeffrey Heer , Dominik Moritz , Michael Correll , and Kanit Wongsuphasawat . 2017 . Vega Datalib. (26 October 2017) . Retrieved September 17, 2017 from https://github.com/vega/datalib. Jeffrey Heer, Dominik Moritz, Michael Correll, and Kanit Wongsuphasawat. 2017. Vega Datalib. (26 October 2017). Retrieved September 17, 2017 from https://github.com/vega/datalib."
            },
            {
              "key": "e_1_3_2_2_20_1",
              "unstructured": "Nigel Holmes. 1984. Designer's guide to creating charts & diagrams. Watson-Guptill.  Nigel Holmes. 1984. Designer's guide to creating charts & diagrams. Watson-Guptill."
            },
            {
              "key": "e_1_3_2_2_21_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 a. Adobe After Effects CC | Visual effects and motion graphics software. (2017) . Retrieved September 17, 2017 from http://www.adobe.com/products/aftereffects.html. Adobe Systems Inc. 2017a. Adobe After Effects CC | Visual effects and motion graphics software. (2017). Retrieved September 17, 2017 from http://www.adobe.com/products/aftereffects.html."
            },
            {
              "key": "e_1_3_2_2_22_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 b. Adobe Experience Design CC (Beta) | Prototyping & Wireframing Tool. (2017) . Retrieved September 17, 2017 from http://www.adobe.com/products/xd.html. Adobe Systems Inc. 2017b. Adobe Experience Design CC (Beta) | Prototyping & Wireframing Tool. (2017). Retrieved September 17, 2017 from http://www.adobe.com/products/xd.html."
            },
            {
              "key": "e_1_3_2_2_23_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 c. Adobe Illustrator CC | Vector Graphic Design Software. (2017) . Retrieved September 17, 2017 from http://www.adobe.com/products/illustrator.html. Adobe Systems Inc. 2017c. Adobe Illustrator CC | Vector Graphic Design Software. (2017). Retrieved September 17, 2017 from http://www.adobe.com/products/illustrator.html."
            },
            {
              "key": "e_1_3_2_2_24_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 d. Adobe InDesign CC | Desktop Publishing Software and Online Publisher. (2017) . Retrieved September 17, 2017 from http://www.adobe.com/products/indesign.html. Adobe Systems Inc. 2017d. Adobe InDesign CC | Desktop Publishing Software and Online Publisher. (2017). Retrieved September 17, 2017 from http://www.adobe.com/products/indesign.html."
            },
            {
              "key": "e_1_3_2_2_25_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 e. Adobe Photoshop CC | Best photo, image & design editing software. (2017) . Retrieved September 17, 2017 from http://www.adobe.com/products/photoshop.html. Adobe Systems Inc. 2017e. Adobe Photoshop CC | Best photo, image & design editing software. (2017). Retrieved September 17, 2017 from http://www.adobe.com/products/photoshop.html."
            },
            {
              "key": "e_1_3_2_2_26_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 f. Cut, divide, and trim objects in Illustrator. (10 March 2017) . Retrieved September 17, 2017 from https://helpx.adobe.com/illustrator/using/ cutting-dividing-objects.html. Adobe Systems Inc. 2017f. Cut, divide, and trim objects in Illustrator. (10 March 2017). Retrieved September 17, 2017 from https://helpx.adobe.com/illustrator/using/ cutting-dividing-objects.html."
            },
            {
              "key": "e_1_3_2_2_27_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 g. Draw circular (Polar) grids. (13 September 2017) . Retrieved September 17, 2017 from https://helpx.adobe.com/illustrator/using/drawingsimple-lines-shapes.html. Adobe Systems Inc. 2017g. Draw circular (Polar) grids. (13 September 2017). Retrieved September 17, 2017 from https://helpx.adobe.com/illustrator/using/drawingsimple-lines-shapes.html."
            },
            {
              "key": "e_1_3_2_2_28_1",
              "volume-title": "Retrieved",
              "author": "Adobe Systems Inc.",
              "year": "2017",
              "unstructured": "Adobe Systems Inc. 2017 h. How to blend objects in Illustrator. (15 February 2017) . Retrieved September 17, 2017 from https://helpx.adobe.com/illustrator/using/ blending-objects.html. Adobe Systems Inc. 2017h. How to blend objects in Illustrator. (15 February 2017). Retrieved September 17, 2017 from https://helpx.adobe.com/illustrator/using/ blending-objects.html."
            },
            {
              "key": "e_1_3_2_2_29_1",
              "volume-title": "Retrieved",
              "author": "University of Washington Interactive Data Lab.",
              "year": "2017",
              "unstructured": "University of Washington Interactive Data Lab. 2017 . Vega - A Visualization Grammar. (25 October 2017) . Retrieved September 17, 2017 from https://vega.github.io/vega/. University of Washington Interactive Data Lab. 2017. Vega - A Visualization Grammar. (25 October 2017). Retrieved September 17, 2017 from https://vega.github.io/vega/."
            },
            {
              "key": "e_1_3_2_2_30_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/PacificVis.2012.6183556"
            },
            {
              "key": "e_1_3_2_2_31_1",
              "volume-title": "Retrieved",
              "year": "2017",
              "unstructured": "Kantar. 2017 . Information is Beautiful Awards. (2017) . Retrieved September 17, 2017 from https://www.informationisbeautifulawards.com/. Kantar. 2017. Information is Beautiful Awards. (2017). Retrieved September 17, 2017 from https://www.informationisbeautifulawards.com/."
            },
            {
              "key": "e_1_3_2_2_32_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2016.2598620"
            },
            {
              "key": "e_1_3_2_2_33_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2013.191"
            },
            {
              "key": "e_1_3_2_2_34_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/PACIFICVIS.2015.7156378"
            },
            {
              "key": "e_1_3_2_2_35_1",
              "volume-title": "Retrieved",
              "author": "Lehni Juerg",
              "year": "2015",
              "unstructured": "Juerg Lehni and Jonathan Puckey . 2015 . Paper.js. (25 October 2015) . Retrieved September 17, 2017 from http://paperjs.org/. Juerg Lehni and Jonathan Puckey. 2015. Paper.js. (25 October 2015). Retrieved September 17, 2017 from http://paperjs.org/."
            },
            {
              "key": "e_1_3_2_2_36_1",
              "volume-title": "Retrieved",
              "author": "Maclean Malcom",
              "year": "2014",
              "unstructured": "Malcom Maclean . 2014 . d3.js multi-line graph with automatic (interactive) legend. (8 July 2014) . Retrieved September 17, 2017 from https: //bl.ocks.org/d3noob/08af723fe615c08f9536f656b55755b4. Malcom Maclean. 2014. d3.js multi-line graph with automatic (interactive) legend. (8 July 2014). Retrieved September 17, 2017 from https: //bl.ocks.org/d3noob/08af723fe615c08f9536f656b55755b4."
            },
            {
              "key": "e_1_3_2_2_37_1",
              "volume-title": "Meggs' History of Graphic Design",
              "author": "Meggs Philip B",
              "unstructured": "Philip B Meggs and Alston W Purvis . 2016. Meggs' History of Graphic Design . John Wiley & Sons . Philip B Meggs and Alston W Purvis. 2016. Meggs' History of Graphic Design. John Wiley & Sons."
            },
            {
              "key": "e_1_3_2_2_38_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3025453.3025942"
            },
            {
              "key": "e_1_3_2_2_39_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2858036.2858435"
            },
            {
              "key": "e_1_3_2_2_40_1",
              "unstructured": "Josef Muller-Brockmann. 1985. Grid systems in graphic design: A visual communication manual for graphic designers typographers and three dimensional designers. Arthur Niggli.  Josef Muller-Brockmann. 1985. Grid systems in graphic design: A visual communication manual for graphic designers typographers and three dimensional designers. Arthur Niggli."
            },
            {
              "key": "e_1_3_2_2_41_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/191666.191715"
            },
            {
              "key": "e_1_3_2_2_42_1",
              "volume-title": "Retrieved",
              "year": "2017",
              "unstructured": "Plotly. 2017 . Plotly. (2017) . Retrieved September 17, 2017 from https://plot.ly/. Plotly. 2017. Plotly. (2017). Retrieved September 17, 2017 from https://plot.ly/."
            },
            {
              "key": "e_1_3_2_2_43_1",
              "volume-title": "Retrieved",
              "author": "X.",
              "year": "2016",
              "unstructured": "Reactive X. 2016 . RxJS. (12 December 2016) . Retrieved September 17, 2017 from http://reactivex.io/rxjs/. ReactiveX. 2016. RxJS. (12 December 2016). Retrieved September 17, 2017 from http://reactivex.io/rxjs/."
            },
            {
              "key": "e_1_3_2_2_44_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2014.2346291"
            },
            {
              "key": "e_1_3_2_2_45_1",
              "volume-title": "Retrieved",
              "author": "Rosling Hans",
              "year": "2015",
              "unstructured": "Hans Rosling . 2015 . Gapminder. (2015) . Retrieved September 17, 2017 from https://www.gapminder.org/tools/. Hans Rosling. 2015. Gapminder. (2015). Retrieved September 17, 2017 from https://www.gapminder.org/tools/."
            },
            {
              "key": "e_1_3_2_2_46_1",
              "volume-title": "Retrieved",
              "author": "Rost Lisa Charlotte",
              "year": "2016",
              "unstructured": "Lisa Charlotte Rost . 2016 . One Chart, Twelve Tools. (17 May 2016) . Retrieved September 17, 2017 from http://lisacharlotterost.github.io/2016/05/17/onechart-tools/. Lisa Charlotte Rost. 2016. One Chart, Twelve Tools. (17 May 2016). Retrieved September 17, 2017 from http://lisacharlotterost.github.io/2016/05/17/onechart-tools/."
            },
            {
              "key": "e_1_3_2_2_47_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/191666.191719"
            },
            {
              "key": "e_1_3_2_2_48_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1111/cgf.12391"
            },
            {
              "key": "e_1_3_2_2_49_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2016.2599030"
            },
            {
              "key": "e_1_3_2_2_50_1",
              "volume-title": "Retrieved",
              "author": "Schachman Toby",
              "year": "2015",
              "unstructured": "Toby Schachman . 2015 . Apparatus: A hybrid graphics editor and programming environment for creating interactive diagrams. (10 November 2015) . Retrieved September 17, 2017 from http://aprt.us/. Toby Schachman. 2015. Apparatus: A hybrid graphics editor and programming environment for creating interactive diagrams. (10 November 2015). Retrieved September 17, 2017 from http://aprt.us/."
            },
            {
              "key": "e_1_3_2_2_51_1",
              "volume-title": "Retrieved",
              "author": "Software Tableau",
              "year": "2017",
              "unstructured": "Tableau Software . 2017 . Tableau Software: Business Intelligence and Analytics. (2017) . Retrieved September 17, 2017 from https://www.tableau.com/. Tableau Software. 2017. Tableau Software: Business Intelligence and Analytics. (2017). Retrieved September 17, 2017 from https://www.tableau.com/."
            },
            {
              "key": "e_1_3_2_2_52_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/2945.981851"
            },
            {
              "key": "e_1_3_2_2_53_1",
              "volume-title": "Understanding Data-Driven Visual Encodings through Deconstruction. Poster at IEEE VIS 2016",
              "author": "Thompson John",
              "year": "2016",
              "unstructured": "John Thompson and John Stasko . 2016. Understanding Data-Driven Visual Encodings through Deconstruction. Poster at IEEE VIS 2016 ( 2016 ). https://www.cc.gatech.edu/~stasko/papers/infovis16poster-deconstruction.pdf John Thompson and John Stasko. 2016. Understanding Data-Driven Visual Encodings through Deconstruction. Poster at IEEE VIS 2016 (2016). https://www.cc.gatech.edu/~stasko/papers/infovis16poster-deconstruction.pdf"
            },
            {
              "key": "e_1_3_2_2_54_1",
              "volume-title": "Drawing Dynamic Visualizations. (2013). Retrieved",
              "author": "Victor Bret",
              "year": "2016",
              "unstructured": "Bret Victor . 2013. Drawing Dynamic Visualizations. (2013). Retrieved August 3, 2016 from https://vimeo.com/66085662. Bret Victor. 2013. Drawing Dynamic Visualizations. (2013). Retrieved August 3, 2016 from https://vimeo.com/66085662."
            },
            {
              "key": "e_1_3_2_2_55_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2007.70577"
            },
            {
              "key": "e_1_3_2_2_56_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2017.2743998"
            },
            {
              "key": "e_1_3_2_2_57_1",
              "volume-title": "Computer Graphics Forum",
              "author": "Walny Jagoda",
              "unstructured": "Jagoda Walny , Samuel Huron , and Sheelagh Carpendale . 2015. An Exploratory Study of Data Sketching for Visual Representation . In Computer Graphics Forum , Vol. 34 . Wiley Online Library , 231--240. Jagoda Walny, Samuel Huron, and Sheelagh Carpendale. 2015. An Exploratory Study of Data Sketching for Visual Representation. In Computer Graphics Forum, Vol. 34. Wiley Online Library, 231--240."
            },
            {
              "key": "e_1_3_2_2_58_1",
              "volume-title": "ggplot2: elegant graphics for data analysis",
              "author": "Wickham Hadley",
              "unstructured": "Hadley Wickham . 2009. ggplot2: elegant graphics for data analysis . Springer Science & Business Media . Hadley Wickham. 2009. ggplot2: elegant graphics for data analysis. Springer Science & Business Media."
            },
            {
              "key": "e_1_3_2_2_59_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1198/jcgs.2009.07098"
            },
            {
              "key": "e_1_3_2_2_60_1",
              "volume-title": "The Grammar of Graphics (Statistics and Computing)",
              "author": "Wilkinson Leland",
              "unstructured": "Leland Wilkinson . 2005. The Grammar of Graphics (Statistics and Computing) . Springer-Verlag New York, Inc. Leland Wilkinson. 2005. The Grammar of Graphics (Statistics and Computing). Springer-Verlag New York, Inc."
            },
            {
              "key": "e_1_3_2_2_61_1",
              "volume-title": "Retrieved",
              "author": "Yeip Randy",
              "year": "2016",
              "unstructured": "Randy Yeip , Stuart A Thompson , and Will Welch . 2016 . A Field Guide to Red and Blue America. (25 July 2016) . Retrieved September 17, 2017 from http://graphics.wsj.com/elections/2016/field-guide-redblue-america/. Randy Yeip, Stuart A Thompson, and Will Welch. 2016. A Field Guide to Red and Blue America. (25 July 2016). Retrieved September 17, 2017 from http://graphics.wsj.com/elections/2016/field-guide-redblue-america/."
            }
          ],
          "event": "CHI '18: CHI Conference on Human Factors in Computing Systems",
          "container-title": "Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3173574.3173697",
              "content-type": "application/pdf",
              "content-version": "vor",
              "intended-application": "syndication"
            },
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3173574.3173697",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                8
              ]
            ],
            "date-time": "2023-01-08T16:15:38Z",
            "timestamp": 1673194538000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3173574.3173697"
            }
          },
          "subtitle": [
            "Augmenting Vector Design Tools with Lazy Data Binding for Expressive Visualization Authoring"
          ],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2018,
                4,
                19
              ]
            ]
          },
          "references-count": 61,
          "alternative-id": [
            "10.1145/3173574.3173697",
            "10.1145/3173574"
          ],
          "URL": "http://dx.doi.org/10.1145/3173574.3173697",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2018,
                4,
                19
              ]
            ]
          },
          "assertion": [
            {
              "value": "2018-04-19",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3173574.3173697"
        },
        {
          "author": [
            {
              "given": "Eyal",
              "family": "Lotem"
            },
            {
              "given": "Yair",
              "family": "Chuchem"
            }
          ],
          "type": "webpage",
          "id": "lamdu",
          "citation-key": "lamdu",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Lamdu",
          "URL": "https://www.lamdu.org/"
        },
        {
          "author": [
            {
              "family": "Meta Platforms, Inc."
            }
          ],
          "type": "webpage",
          "id": "react",
          "citation-key": "react",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "React – A JavaScript library for building user interfaces",
          "URL": "https://reactjs.org/"
        },
        {
          "author": [
            {
              "given": "David",
              "family": "Moon"
            },
            {
              "given": "Cyrus",
              "family": "Omar"
            }
          ],
          "type": "manuscript",
          "id": "restructuring-structured-editing",
          "citation-key": "restructuring-structured-editing",
          "issued": {
            "date-parts": [
              [
                2021
              ]
            ]
          },
          "note": "Presented at the Workshop on Live Programming (LIVE) 2021",
          "title": "Restructuring Structure Editing",
          "URL": "https://tylr.fun/essay/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                2,
                20
              ]
            ],
            "date-time": "2023-02-20T08:50:45Z",
            "timestamp": 1676883045785
          },
          "publisher-location": "New York, New York, USA",
          "reference-count": 0,
          "publisher": "ACM Press",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                1986
              ]
            ]
          },
          "DOI": "10.1145/22627.22349",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2003,
                11,
                13
              ]
            ],
            "date-time": "2003-11-13T16:10:21Z",
            "timestamp": 1068739821000
          },
          "source": "Crossref",
          "is-referenced-by-count": 107,
          "title": "Visual programming, programming by example, and program visualization: a taxonomy",
          "prefix": "10.1145",
          "author": [
            {
              "given": "B. A.",
              "family": "Myers",
              "sequence": "first",
              "affiliation": []
            }
          ],
          "member": "320",
          "event": "the SIGCHI conference",
          "container-title": "Proceedings of the SIGCHI conference on Human factors in computing systems  - CHI '86",
          "original-title": [],
          "link": [
            {
              "URL": "http://dl.acm.org/ft_gateway.cfm?id=22349&amp;ftid=36283&amp;dwn=1",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2016,
                12,
                12
              ]
            ],
            "date-time": "2016-12-12T15:51:26Z",
            "timestamp": 1481557886000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "http://portal.acm.org/citation.cfm?doid=22627.22349"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                1986
              ]
            ]
          },
          "references-count": 0,
          "URL": "http://dx.doi.org/10.1145/22627.22349",
          "relation": {},
          "published": {
            "date-parts": [
              [
                1986
              ]
            ]
          },
          "id": "doi:10.1145/22627.22349"
        },
        {
          "author": [
            {
              "family": "Observable Inc."
            }
          ],
          "type": "webpage",
          "id": "observable",
          "citation-key": "observable",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Observable - Explore, analyze, and explain data. As a team.",
          "URL": "https://observablehq.com/"
        },
        {
          "author": [
            {
              "family": "Observable Inc."
            }
          ],
          "type": "webpage",
          "id": "observable-data-table-cell",
          "citation-key": "observable-data-table-cell",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "Quickly Explore & Analyze Your Data With Data Table Cell / Observable / Observable",
          "URL": "https://observablehq.com/@observablehq/introducing-data-table-cell"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                7
              ]
            ],
            "date-time": "2023-01-07T02:51:30Z",
            "timestamp": 1673059890769
          },
          "reference-count": 4,
          "publisher": "IEEE",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                2011,
                9
              ]
            ]
          },
          "DOI": "10.1109/vlhcc.2011.6070422",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2011,
                11,
                7
              ]
            ],
            "date-time": "2011-11-07T20:24:20Z",
            "timestamp": 1320697460000
          },
          "source": "Crossref",
          "is-referenced-by-count": 3,
          "title": "Active code completion",
          "prefix": "10.1109",
          "author": [
            {
              "given": "C.",
              "family": "Omar",
              "sequence": "first",
              "affiliation": []
            },
            {
              "family": "YoungSeok Yoon",
              "sequence": "additional",
              "affiliation": []
            },
            {
              "given": "T. D.",
              "family": "LaToza",
              "sequence": "additional",
              "affiliation": []
            },
            {
              "given": "B. A.",
              "family": "Myers",
              "sequence": "additional",
              "affiliation": []
            }
          ],
          "member": "263",
          "reference": [
            {
              "key": "ref4",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VLHCC.2010.12"
            },
            {
              "key": "ref3",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1595696.1595728"
            },
            {
              "key": "ref2",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/ASE.2008.42"
            },
            {
              "key": "ref1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/MS.2006.105"
            }
          ],
          "event": "2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2011)",
          "container-title": "2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)",
          "original-title": [],
          "link": [
            {
              "URL": "http://xplorestaging.ieee.org/ielx5/6059237/6070364/06070422.pdf?arnumber=6070422",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2017,
                3,
                21
              ]
            ],
            "date-time": "2017-03-21T17:17:47Z",
            "timestamp": 1490116667000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "http://ieeexplore.ieee.org/document/6070422/"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2011,
                9
              ]
            ]
          },
          "references-count": 4,
          "URL": "http://dx.doi.org/10.1109/VLHCC.2011.6070422",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2011,
                9
              ]
            ]
          },
          "id": "doi:10.1109/VLHCC.2011.6070422"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                14
              ]
            ],
            "date-time": "2023-01-14T01:29:50Z",
            "timestamp": 1673659790301
          },
          "reference-count": 117,
          "publisher": "Association for Computing Machinery (ACM)",
          "issue": "POPL",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2019,
                    1,
                    2
                  ]
                ],
                "date-time": "2019-01-02T00:00:00Z",
                "timestamp": 1546387200000
              },
              "content-version": "vor",
              "delay-in-days": 0,
              "URL": "http://www.acm.org/publications/policies/copyright_policy#Background"
            }
          ],
          "funder": [
            {
              "DOI": "10.13039/100000001",
              "name": "National Science Foundation",
              "doi-asserted-by": "publisher",
              "award": [
                "CCF-1619272, SHF-1814900, SHF-1817145"
              ]
            },
            {
              "DOI": "10.13039/100000185",
              "name": "Defense Advanced Research Projects Agency",
              "doi-asserted-by": "publisher",
              "award": [
                "FA8750-16-2-0042"
              ]
            }
          ],
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2019,
                1,
                2
              ]
            ]
          },
          "abstract": "<jats:p>Live programming environments aim to provide programmers (and sometimes audiences) with continuous feedback about a program's dynamic behavior as it is being edited. The problem is that programming languages typically assign dynamic meaning only to programs that are complete, i.e. syntactically well-formed and free of type errors. Consequently, live feedback presented to the programmer exhibits temporal or perceptive gaps.</jats:p>\n          <jats:p>This paper confronts this \"gap problem\" from type-theoretic first principles by developing a dynamic semantics for incomplete functional programs, starting from the static semantics for incomplete functional programs developed in recent work on Hazelnut. We model incomplete functional programs as expressions with holes, with empty holes standing for missing expressions or types, and non-empty holes operating as membranes around static and dynamic type inconsistencies. Rather than aborting when evaluation encounters any of these holes as in some existing systems, evaluation proceeds around holes, tracking the closure around each hole instance as it flows through the remainder of the program. Editor services can use the information in these hole closures to help the programmer develop and confirm their mental model of the behavior of the complete portions of the program as they decide how to fill the remaining holes. Hole closures also enable a fill-and-resume operation that avoids the need to restart evaluation after edits that amount to hole filling. Formally, the semantics borrows machinery from both gradual type theory (which supplies the basis for handling unfilled type holes) and contextual modal type theory (which supplies a logical basis for hole closures), combining these and developing additional machinery necessary to continue evaluation past holes while maintaining type safety. We have mechanized the metatheory of the core calculus, called Hazelnut Live, using the Agda proof assistant.</jats:p>\n          <jats:p>We have also implemented these ideas into the Hazel programming environment. The implementation inserts holes automatically, following the Hazelnut edit action calculus, to guarantee that every editor state has some (possibly incomplete) type. Taken together with this paper's type safety property, the result is a proof-of-concept live programming environment where rich dynamic feedback is truly available without gaps, i.e. for every reachable editor state.</jats:p>",
          "DOI": "10.1145/3290327",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2019,
                1,
                4
              ]
            ],
            "date-time": "2019-01-04T13:33:51Z",
            "timestamp": 1546608831000
          },
          "page": "1-32",
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 20,
          "title": "Live functional programming with typed holes",
          "prefix": "10.1145",
          "volume": "3",
          "author": [
            {
              "given": "Cyrus",
              "family": "Omar",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            },
            {
              "given": "Ian",
              "family": "Voysey",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Carnegie Mellon University, USA"
                }
              ]
            },
            {
              "given": "Ravi",
              "family": "Chugh",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            },
            {
              "given": "Matthew A.",
              "family": "Hammer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Colorado Boulder, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2019,
                1,
                2
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_2_2_1_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S0956796800000186"
            },
            {
              "key": "e_1_2_2_2_1",
              "volume-title": "Explicit Substitutions for Contextual Type Theory. In International Workshop on Logical Frameworks and Meta-languages: Theory and Practice (LFMTP).",
              "author": "Abel Andreas",
              "year": "2010"
            },
            {
              "key": "e_1_2_2_3_1",
              "volume-title": "Research Topics in Functional Programming",
              "author": "Abramsky Samson"
            },
            {
              "key": "e_1_2_2_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2384592.2384595"
            },
            {
              "key": "e_1_2_2_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1137/0201022"
            },
            {
              "key": "e_1_2_2_6_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2997364.2997374"
            },
            {
              "key": "e_1_2_2_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VLHCC.2014.6883014"
            },
            {
              "key": "e_1_2_2_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/LICS.2012.21"
            },
            {
              "key": "e_1_2_2_9_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/11541868_4"
            },
            {
              "key": "e_1_2_2_10_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3182657"
            },
            {
              "key": "e_1_2_2_11_1",
              "volume-title": "The Lambda Calculus. Studies in Logic",
              "author": "Barendregt H.P."
            },
            {
              "key": "e_1_2_2_12_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1985793.1985864"
            },
            {
              "key": "e_1_2_2_13_1",
              "volume-title": "Processes, Terms and Cycles: Steps on the Road to Infinity, Essays Dedicated to Jan Willem Klop, on the Occasion of His 60th Birthday (Lecture Notes in Computer Science)",
              "author": "Blanc Tomasz"
            },
            {
              "key": "e_1_2_2_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1863523.1863540"
            },
            {
              "key": "e_1_2_2_15_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S095679681300018X"
            },
            {
              "key": "e_1_2_2_16_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2491956.2462170"
            },
            {
              "key": "e_1_2_2_17_1",
              "volume-title": "IEEE Symposium on Visual Languages.",
              "author": "Burnett Margaret M."
            },
            {
              "key": "e_1_2_2_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2535838.2535863"
            },
            {
              "key": "e_1_2_2_20_1",
              "volume-title": "Systematic identification and communication of type errors. J. Funct. Program. 28",
              "author": "Chen Sheng",
              "year": "2018"
            },
            {
              "key": "e_1_2_2_21_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1040294.1040301"
            },
            {
              "key": "e_1_2_2_22_1",
              "unstructured": "David Raymond Christiansen. 2013. Bidirectional Typing Rules: A Tutorial. http://davidchristiansen.dk/tutorials/bidirectional. pdf .  David Raymond Christiansen. 2013. Bidirectional Typing Rules: A Tutorial. http://davidchristiansen.dk/tutorials/bidirectional. pdf ."
            },
            {
              "key": "e_1_2_2_23_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2908080.2908103"
            },
            {
              "key": "e_1_2_2_24_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2837614.2837632"
            },
            {
              "key": "e_1_2_2_25_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/0304-3975(91)90230-Y"
            },
            {
              "key": "e_1_2_2_26_1",
              "volume-title": "Elm: Concurrent FRP for Functional GUIs. Senior thesis",
              "author": "Czaplicki Evan",
              "year": "2012"
            },
            {
              "key": "e_1_2_2_27_1",
              "volume-title": "An Introduction to Elm. (2018). https://guide.elm-lang.org/ . Retrieved",
              "author": "Czaplicki Evan",
              "year": "2018"
            },
            {
              "key": "e_1_2_2_28_1",
              "volume-title": "International Workshop on Trends in Functional Programming in Education (TFPIE).",
              "author": "D’Alves Curtis",
              "year": "2017"
            },
            {
              "key": "e_1_2_2_29_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/582153.582176"
            },
            {
              "key": "e_1_2_2_30_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/382780.382785"
            },
            {
              "key": "e_1_2_2_31_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1006/inco.2002.3147"
            },
            {
              "key": "e_1_2_2_32_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3158126"
            },
            {
              "key": "e_1_2_2_33_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2500365.2500582"
            },
            {
              "key": "e_1_2_2_34_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/0304-3975(92)90014-7"
            },
            {
              "key": "e_1_2_2_35_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2643135.2643153"
            },
            {
              "key": "e_1_2_2_36_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1080/08993400802114508"
            },
            {
              "key": "e_1_2_2_37_1",
              "volume-title": "Retrieved",
              "author": "Developers Flutter",
              "year": "2017"
            },
            {
              "key": "e_1_2_2_38_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2837614.2837629"
            },
            {
              "key": "e_1_2_2_39_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2500365.2500603"
            },
            {
              "key": "e_1_2_2_40_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2676726.2676992"
            },
            {
              "key": "e_1_2_2_41_1",
              "volume-title": "Open Proofs and Open Terms: A Basis for Interactive Logic. In International Workshop on Computer Science Logic (CSL).",
              "author": "Geuvers Herman"
            },
            {
              "key": "e_1_2_2_42_1",
              "volume-title": "Smalltalk-80: the language and its implementation",
              "author": "Goldberg Adele"
            },
            {
              "key": "e_1_2_2_43_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/800229.806967"
            },
            {
              "key": "e_1_2_2_44_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2445196.2445368"
            },
            {
              "key": "e_1_2_2_45_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2594291.2594324"
            },
            {
              "key": "e_1_2_2_46_1",
              "volume-title": "Practical Foundations for Programming Languages",
              "author": "Harper Robert",
              "edition": "2"
            },
            {
              "key": "e_1_2_2_47_1",
              "volume-title": "Proof, Language and Interaction: Essays in Honour of Robin Milner",
              "author": "Harper Robert"
            },
            {
              "key": "e_1_2_2_48_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-27705-4_22"
            },
            {
              "key": "e_1_2_2_49_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2984511.2984575"
            },
            {
              "key": "e_1_2_2_50_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/s10990-011-9066-z"
            },
            {
              "key": "e_1_2_2_51_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1108970.1108971"
            },
            {
              "key": "e_1_2_2_52_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/SP.2013.10"
            },
            {
              "key": "e_1_2_2_53_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3110284"
            },
            {
              "key": "e_1_2_2_54_1",
              "volume-title": "Retrieved",
              "author": "Jones Mike",
              "year": "2017"
            },
            {
              "key": "e_1_2_2_55_1",
              "volume-title": "Partial evaluation and automatic program generation",
              "author": "Jones Neil D."
            },
            {
              "key": "e_1_2_2_56_1",
              "volume-title": "Coroutines and Networks of Parallel Processes. In IFIP Congress. 993–998",
              "author": "Kahn Gilles"
            },
            {
              "key": "e_1_2_2_57_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1640089.1640122"
            },
            {
              "key": "e_1_2_2_58_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/360248.360252"
            },
            {
              "key": "e_1_2_2_59_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3240719.3241791"
            },
            {
              "key": "e_1_2_2_60_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3009837.3009856"
            },
            {
              "key": "e_1_2_2_61_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1159876.1159887"
            },
            {
              "key": "e_1_2_2_62_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/646837.708490"
            },
            {
              "key": "e_1_2_2_63_1",
              "unstructured": "Eyal Lotem and Yair Chuchem. 2016. Project Lamdu. http://www.lamdu.org/ . Accessed: 2016-04-08.  Eyal Lotem and Yair Chuchem. 2016. Project Lamdu. http://www.lamdu.org/ . Accessed: 2016-04-08."
            },
            {
              "key": "e_1_2_2_64_1",
              "volume-title": "The implementation of ALF: a proof editor",
              "author": "Magnusson Lena"
            },
            {
              "key": "e_1_2_2_66_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1080/08993400802114581"
            },
            {
              "key": "e_1_2_2_67_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1297027.1297073"
            },
            {
              "key": "e_1_2_2_68_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1352582.1352591"
            },
            {
              "key": "e_1_2_2_69_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3105726.3106178"
            },
            {
              "key": "e_1_2_2_71_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1481861.1481862"
            },
            {
              "key": "e_1_2_2_72_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/360204.360207"
            },
            {
              "key": "e_1_2_2_73_1",
              "volume-title": "Hammer",
              "author": "Omar Cyrus",
              "year": "2018"
            },
            {
              "key": "e_1_2_2_74_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3009837.3009900"
            },
            {
              "key": "e_1_2_2_75_1",
              "volume-title": "Jonathan Aldrich, and Matthew A. Hammer.",
              "author": "Omar Cyrus",
              "year": "2017"
            },
            {
              "key": "e_1_2_2_76_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2784731.2784765"
            },
            {
              "key": "e_1_2_2_77_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2364527.2364579"
            },
            {
              "key": "e_1_2_2_78_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/MCSE.2007.53"
            },
            {
              "key": "e_1_2_2_79_1",
              "volume-title": "Retrieved",
              "author": "Jones Simon Peyton",
              "year": "2014"
            },
            {
              "key": "e_1_2_2_80_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-12251-4_1"
            },
            {
              "key": "e_1_2_2_81_1",
              "volume-title": "Inductive Beluga: Programming Proofs. In International Conference on Automated Deduction.",
              "author": "Pientka Brigitte",
              "year": "2015"
            },
            {
              "key": "e_1_2_2_82_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1389449.1389469"
            },
            {
              "key": "e_1_2_2_83_1",
              "volume-title": "Types and Programming Languages",
              "author": "Pierce Benjamin C."
            },
            {
              "key": "e_1_2_2_84_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/345099.345100"
            },
            {
              "key": "e_1_2_2_85_1",
              "volume-title": "A structural approach to operational semantics. J. Log. Algebr. Program. 60-61",
              "author": "Plotkin Gordon D.",
              "year": "2004"
            },
            {
              "key": "e_1_2_2_86_1",
              "article-title": "Exploratory and Live, Programming and Coding - A Literature Study Comparing Perspectives on Liveness",
              "volume": "3",
              "author": "Rein Patrick",
              "year": "2019",
              "journal-title": "Programming Journal"
            },
            {
              "key": "e_1_2_2_87_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1592761.1592779"
            },
            {
              "key": "e_1_2_2_88_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3110258"
            },
            {
              "key": "e_1_2_2_89_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2228360.2228526"
            },
            {
              "key": "e_1_2_2_90_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2951913.2951915"
            },
            {
              "key": "e_1_2_2_91_1",
              "volume-title": "Gradual Typing for Functional Languages. In Scheme and Functional Programming Workshop. http://scheme2006",
              "author": "Jeremy"
            },
            {
              "key": "e_1_2_2_92_1",
              "volume-title": "Gradual Typing for Objects. In European Conference on Object-Oriented Programming (ECOOP).",
              "author": "Jeremy"
            },
            {
              "key": "e_1_2_2_93_1",
              "unstructured": "Jeremy G. Siek Michael M. Vitousek Matteo Cimini and John Tang Boyland. 2015a. Refined Criteria for Gradual Typing. In Summit on Advances in Programming Languages (SNAPL).  Jeremy G. Siek Michael M. Vitousek Matteo Cimini and John Tang Boyland. 2015a. Refined Criteria for Gradual Typing. In Summit on Advances in Programming Languages (SNAPL)."
            },
            {
              "key": "e_1_2_2_94_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-662-46669-8_18"
            },
            {
              "key": "e_1_2_2_95_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1706299.1706342"
            },
            {
              "key": "e_1_2_2_96_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-10672-9_3"
            },
            {
              "key": "e_1_2_2_97_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/s10009-012-0223-4"
            },
            {
              "key": "e_1_2_2_98_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1255450.1255455"
            },
            {
              "key": "e_1_2_2_99_1",
              "series-title": "Automated Deduction — A Basis for Applications.",
              "volume-title": "Foundations",
              "author": "Strecker M."
            },
            {
              "key": "e_1_2_2_100_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3196321.3196364"
            },
            {
              "key": "e_1_2_2_101_1",
              "volume-title": "Towards Practical Gradual Typing. In European Conference on Object-Oriented Programming (ECOOP).",
              "author": "Takikawa Asumu",
              "year": "2015"
            },
            {
              "key": "e_1_2_2_102_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/S1045-926X(05)80012-6"
            },
            {
              "key": "e_1_2_2_103_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/2662726.2662735"
            },
            {
              "key": "e_1_2_2_104_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S0956796800001313"
            },
            {
              "key": "e_1_2_2_105_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-540-73595-3_4"
            },
            {
              "key": "e_1_2_2_106_1",
              "unstructured": "B Victor. 2012. Inventing on principle Invited talk at the Canadian University Software Engineering Conference (CUSEC). http://worrydream.com/#!/InventingOnPrinciple  B Victor. 2012. Inventing on principle Invited talk at the Canadian University Software Engineering Conference (CUSEC). http://worrydream.com/#!/InventingOnPrinciple"
            },
            {
              "key": "e_1_2_2_107_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2384716.2384767"
            },
            {
              "key": "e_1_2_2_108_1",
              "volume-title": "Towards User-Friendly Projectional Editors. In International Conference on Software Language Engineering (SLE).",
              "author": "Voelter Markus",
              "year": "2014"
            },
            {
              "key": "e_1_2_2_109_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2364527.2364554"
            },
            {
              "key": "e_1_2_2_110_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-00590-9_1"
            },
            {
              "key": "e_1_2_2_111_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1017/S0956796806006186"
            },
            {
              "key": "e_1_2_2_112_1",
              "volume-title": "The Psychology of Computer Programming",
              "author": "Weinberg Gerald M"
            },
            {
              "key": "e_1_2_2_113_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3173574.3173940"
            },
            {
              "key": "e_1_2_2_114_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2771839.2771860"
            },
            {
              "key": "e_1_2_2_115_1",
              "volume-title": "Visualizing the Evaluation of Functional Programs for Debugging. In Symposium on Languages, Applications and Technologies (SLATE).",
              "author": "Whitington John",
              "year": "2017"
            },
            {
              "key": "e_1_2_2_116_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1006/inco.1994.1093"
            },
            {
              "key": "e_1_2_2_117_1",
              "volume-title": "Consistent Subtyping for All. In European Symposium on Programming (ESOP).",
              "author": "Xie Ningning"
            },
            {
              "key": "e_1_2_2_118_1",
              "volume-title": "IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC).",
              "author": "Yoon Y. S."
            },
            {
              "key": "e_1_2_2_119_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3121137"
            },
            {
              "key": "e_1_2_2_120_1",
              "volume-title": "International Conference on Computer Science and Software Engineering (CASCON).",
              "author": "Zhang John",
              "year": "2018"
            }
          ],
          "container-title": "Proceedings of the ACM on Programming Languages",
          "original-title": [],
          "language": "en",
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3290327",
              "content-type": "application/pdf",
              "content-version": "vor",
              "intended-application": "syndication"
            },
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3290327",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                1
              ]
            ],
            "date-time": "2023-01-01T08:24:56Z",
            "timestamp": 1672561496000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3290327"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2019,
                1,
                2
              ]
            ]
          },
          "references-count": 117,
          "journal-issue": {
            "issue": "POPL",
            "published-print": {
              "date-parts": [
                [
                  2019,
                  1,
                  2
                ]
              ]
            }
          },
          "alternative-id": [
            "10.1145/3290327"
          ],
          "URL": "http://dx.doi.org/10.1145/3290327",
          "relation": {},
          "ISSN": [
            "2475-1421"
          ],
          "subject": [
            "Safety, Risk, Reliability and Quality",
            "Software"
          ],
          "container-title-short": "Proc. ACM Program. Lang.",
          "published": {
            "date-parts": [
              [
                2019,
                1,
                2
              ]
            ]
          },
          "assertion": [
            {
              "value": "2019-01-02",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3290327"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                17
              ]
            ],
            "date-time": "2023-01-17T11:51:11Z",
            "timestamp": 1673956271220
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 47,
          "publisher": "ACM",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2021,
                    6,
                    18
                  ]
                ],
                "date-time": "2021-06-18T00:00:00Z",
                "timestamp": 1623974400000
              },
              "content-version": "vor",
              "delay-in-days": 0,
              "URL": "http://www.acm.org/publications/policies/copyright_policy#Background"
            }
          ],
          "funder": [
            {
              "DOI": "10.13039/100000001",
              "name": "National Science Foundation",
              "doi-asserted-by": "publisher",
              "award": [
                "1814900, 1817145"
              ]
            }
          ],
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2021,
                6,
                19
              ]
            ]
          },
          "DOI": "10.1145/3453483.3454059",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2021,
                6,
                24
              ]
            ],
            "date-time": "2021-06-24T16:58:48Z",
            "timestamp": 1624553928000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 6,
          "title": "Filling typed holes with live GUIs",
          "prefix": "10.1145",
          "author": [
            {
              "ORCID": "http://orcid.org/0000-0003-4502-7971",
              "authenticated-orcid": false,
              "given": "Cyrus",
              "family": "Omar",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of Michigan, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0002-1081-2235",
              "authenticated-orcid": false,
              "given": "David",
              "family": "Moon",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Michigan, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0001-6938-7379",
              "authenticated-orcid": false,
              "given": "Andrew",
              "family": "Blinn",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Michigan, USA"
                }
              ]
            },
            {
              "given": "Ian",
              "family": "Voysey",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Carnegie Mellon University, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0001-6578-2005",
              "authenticated-orcid": false,
              "given": "Nick",
              "family": "Collins",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0002-1339-2889",
              "authenticated-orcid": false,
              "given": "Ravi",
              "family": "Chugh",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2021,
                6,
                18
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_1_1_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/11546382_5"
            },
            {
              "key": "e_1_3_2_1_2_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2676726.2677013"
            },
            {
              "key": "e_1_3_2_1_3_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3428290"
            },
            {
              "key": "e_1_3_2_1_4_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/125489.122804"
            },
            {
              "key": "e_1_3_2_1_5_1",
              "volume-title": "Proceedings of the 1999 ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM)",
              "author": "Bawden Alan",
              "year": "1999",
              "unstructured": "Alan Bawden . 1999 . Quasiquotation in Lisp .. In Proceedings of the 1999 ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM) , January 22-23, 1999. Technical report BRICS-NS-99-1. University of Aarhus, 4–12. Alan Bawden. 1999. Quasiquotation in Lisp.. In Proceedings of the 1999 ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM), January 22-23, 1999. Technical report BRICS-NS-99-1. University of Aarhus, 4–12."
            },
            {
              "key": "e_1_3_2_1_6_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3110250"
            },
            {
              "key": "e_1_3_2_1_7_1",
              "volume-title": "A history of mathematical notations. 1",
              "author": "Cajori Florian",
              "unstructured": "Florian Cajori . 1993. A history of mathematical notations. 1 , Courier Corporation . Florian Cajori. 1993. A history of mathematical notations. 1, Courier Corporation."
            },
            {
              "key": "e_1_3_2_1_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2908080.2908103"
            },
            {
              "key": "e_1_3_2_1_9_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/99583.99607"
            },
            {
              "key": "e_1_3_2_1_10_1",
              "unstructured": "Evan Czaplicki. 2018. An Introduction to Elm. https://guide.elm-lang.org/  Evan Czaplicki. 2018. An Introduction to Elm. https://guide.elm-lang.org/"
            },
            {
              "key": "e_1_3_2_1_11_1",
              "unstructured": "Czaplicki Evan. 2018. Elm Architecture. https://guide.elm-lang.org/architecture/  Czaplicki Evan. 2018. Elm Architecture. https://guide.elm-lang.org/architecture/"
            },
            {
              "key": "e_1_3_2_1_12_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1291151.1291163"
            },
            {
              "key": "e_1_3_2_1_13_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/581478.581486"
            },
            {
              "key": "e_1_3_2_1_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2837614.2837620"
            },
            {
              "key": "e_1_3_2_1_15_1",
              "volume-title": "Smalltalk-80 - the interactive programming environment",
              "author": "Goldberg Adele",
              "unstructured": "Adele Goldberg . 1984. Smalltalk-80 - the interactive programming environment . Addison-Wesley . isbn:978-0-201-11372-3 Adele Goldberg. 1984. Smalltalk-80 - the interactive programming environment. Addison-Wesley. isbn:978-0-201-11372-3"
            },
            {
              "key": "e_1_3_2_1_16_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2445196.2445368"
            },
            {
              "key": "e_1_3_2_1_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/581478.581493"
            },
            {
              "key": "e_1_3_2_1_18_1",
              "volume-title": "Practical Foundations for Programming Languages",
              "author": "Harper Robert",
              "unstructured": "Robert Harper . 2016. Practical Foundations for Programming Languages ( 2 nd ed.). https://www.cs.cmu.edu/~rwh/plbook/2nded.pdf Robert Harper. 2016. Practical Foundations for Programming Languages (2nd ed.). https://www.cs.cmu.edu/~rwh/plbook/2nded.pdf",
              "edition": "2"
            },
            {
              "key": "e_1_3_2_1_19_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2984511.2984575"
            },
            {
              "key": "e_1_3_2_1_20_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VL/HCC50065.2020.9127256"
            },
            {
              "key": "e_1_3_2_1_21_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3180155.3180165"
            },
            {
              "key": "e_1_3_2_1_22_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1090/S0002-9904-1902-00923-3"
            },
            {
              "key": "e_1_3_2_1_23_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/800020.808243"
            },
            {
              "key": "e_1_3_2_1_24_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3379337.3415842"
            },
            {
              "key": "e_1_3_2_1_25_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-319-07151-0_6"
            },
            {
              "key": "e_1_3_2_1_26_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1095034.1095037"
            },
            {
              "key": "e_1_3_2_1_27_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1002/smr.270"
            },
            {
              "key": "e_1_3_2_1_28_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3313831.3376494"
            },
            {
              "key": "e_1_3_2_1_29_1",
              "unstructured": "Eyal Lotem and Yair Chuchem. 2016. Project Lamdu. http://www.lamdu.org/ Accessed: 2016-04-08.  Eyal Lotem and Yair Chuchem. 2016. Project Lamdu. http://www.lamdu.org/ Accessed: 2016-04-08."
            },
            {
              "key": "e_1_3_2_1_30_1",
              "unstructured": "Simon Marlow. 2010. Haskell 2010 language report. https://www.haskell.org/onlinereport/haskell2010  Simon Marlow. 2010. Haskell 2010 language report. https://www.haskell.org/onlinereport/haskell2010"
            },
            {
              "key": "e_1_3_2_1_31_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1080/1049482940040202"
            },
            {
              "key": "e_1_3_2_1_32_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1352582.1352591"
            },
            {
              "key": "e_1_3_2_1_33_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3236801"
            },
            {
              "key": "e_1_3_2_1_34_1",
              "doi-asserted-by": "crossref",
              "unstructured": "Cyrus Omar Darya Kurilova Ligia Nistor Benjamin Chung Alex Potanin and Jonathan Aldrich. 2014. Safely Composable Type-Specific Languages. In ECOOP.  Cyrus Omar Darya Kurilova Ligia Nistor Benjamin Chung Alex Potanin and Jonathan Aldrich. 2014. Safely Composable Type-Specific Languages. In ECOOP.",
              "DOI": "10.1007/978-3-662-44202-9_5"
            },
            {
              "key": "e_1_3_2_1_35_1",
              "volume-title": "Hammer",
              "author": "Omar Cyrus",
              "year": "2019",
              "unstructured": "Cyrus Omar , Ian Voysey , Ravi Chugh , and Matthew A . Hammer . 2019 . Live Functional Programming with Typed Holes. Proceedings of the ACM on Programming Languages (PACMPL), Issue POPL. Cyrus Omar, Ian Voysey, Ravi Chugh, and Matthew A. Hammer. 2019. Live Functional Programming with Typed Holes. Proceedings of the ACM on Programming Languages (PACMPL), Issue POPL."
            },
            {
              "key": "e_1_3_2_1_36_1",
              "volume-title": "Hammer",
              "author": "Omar Cyrus",
              "year": "2017",
              "unstructured": "Cyrus Omar , Ian Voysey , Michael Hilton , Jonathan Aldrich , and Matthew A . Hammer . 2017 . Hazelnut : A Bidirectionally Typed Structure Editor Calculus. In POPL. Cyrus Omar, Ian Voysey, Michael Hilton, Jonathan Aldrich, and Matthew A. Hammer. 2017. Hazelnut: A Bidirectionally Typed Structure Editor Calculus. In POPL."
            },
            {
              "key": "e_1_3_2_1_37_1",
              "volume-title": "Active Code Completion. In International Conference on Software Engineering (ICSE).",
              "author": "Omar Cyrus",
              "unstructured": "Cyrus Omar , YoungSeok Yoon , Thomas D. LaToza , and Brad A. Myers . 2012 . Active Code Completion. In International Conference on Software Engineering (ICSE). Cyrus Omar, YoungSeok Yoon, Thomas D. LaToza, and Brad A. Myers. 2012. Active Code Completion. In International Conference on Software Engineering (ICSE)."
            },
            {
              "key": "e_1_3_2_1_38_1",
              "volume-title": "Hazel Tutor: Guiding Novices Through Type-Driven Development Strategies. In Human Aspects of Types and Reasoning Assistants. https://hazel.org/hazeltutor-hatra2020.pdf",
              "author": "Potter Hannah",
              "year": "2020",
              "unstructured": "Hannah Potter and Cyrus Omar . 2020 . Hazel Tutor: Guiding Novices Through Type-Driven Development Strategies. In Human Aspects of Types and Reasoning Assistants. https://hazel.org/hazeltutor-hatra2020.pdf Hannah Potter and Cyrus Omar. 2020. Hazel Tutor: Guiding Novices Through Type-Driven Development Strategies. In Human Aspects of Types and Reasoning Assistants. https://hazel.org/hazeltutor-hatra2020.pdf"
            },
            {
              "key": "e_1_3_2_1_39_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-319-47958-3_20"
            },
            {
              "key": "e_1_3_2_1_40_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/243327.243670"
            },
            {
              "key": "e_1_3_2_1_41_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/800020.808246"
            },
            {
              "key": "e_1_3_2_1_42_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-12107-4_20"
            },
            {
              "key": "e_1_3_2_1_43_1",
              "volume-title": "Proceedings of the IFIP 9th World Computer Congress. North-Holland/IFIP, 513–523",
              "author": "Reynolds John C.",
              "year": "1983",
              "unstructured": "John C. Reynolds . 1983 . Types, Abstraction and Parametric Polymorphism. In Information Processing 83 , Proceedings of the IFIP 9th World Computer Congress. North-Holland/IFIP, 513–523 . John C. Reynolds. 1983. Types, Abstraction and Parametric Polymorphism. In Information Processing 83, Proceedings of the IFIP 9th World Computer Congress. North-Holland/IFIP, 513–523."
            },
            {
              "key": "e_1_3_2_1_44_1",
              "volume-title": "Gradual Typing for Functional Languages. In Scheme and Functional Programming Workshop. http://scheme2006",
              "author": "Jeremy",
              "unstructured": "Jeremy G. Siek and Walid Taha. 2006 . Gradual Typing for Functional Languages. In Scheme and Functional Programming Workshop. http://scheme2006 .cs.uchicago.edu/13-siek.pdf Jeremy G. Siek and Walid Taha. 2006. Gradual Typing for Functional Languages. In Scheme and Functional Programming Workshop. http://scheme2006.cs.uchicago.edu/13-siek.pdf"
            },
            {
              "key": "e_1_3_2_1_45_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.5555/2662726.2662735"
            },
            {
              "key": "e_1_3_2_1_46_1",
              "volume-title": "Proc. 3rd Program Visualization Workshop. 2–9.",
              "author": "Urquiza-Fuentes Jaime",
              "year": "2004",
              "unstructured": "Jaime Urquiza-Fuentes and J Angel Velázquez-Iturbide . 2004 . A survey of program visualizations for the functional paradigm . In Proc. 3rd Program Visualization Workshop. 2–9. Jaime Urquiza-Fuentes and J Angel Velázquez-Iturbide. 2004. A survey of program visualizations for the functional paradigm. In Proc. 3rd Program Visualization Workshop. 2–9."
            },
            {
              "key": "e_1_3_2_1_47_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-642-35992-7_11"
            }
          ],
          "event": "PLDI '21: 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation",
          "container-title": "Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3453483.3454059",
              "content-type": "application/pdf",
              "content-version": "vor",
              "intended-application": "syndication"
            },
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3453483.3454059",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                7
              ]
            ],
            "date-time": "2023-01-07T04:37:21Z",
            "timestamp": 1673066241000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3453483.3454059"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2021,
                6,
                18
              ]
            ]
          },
          "references-count": 47,
          "alternative-id": [
            "10.1145/3453483.3454059",
            "10.1145/3453483"
          ],
          "URL": "http://dx.doi.org/10.1145/3453483.3454059",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2021,
                6,
                18
              ]
            ]
          },
          "assertion": [
            {
              "value": "2021-06-18",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3453483.3454059"
        },
        {
          "author": [
            {
              "given": "Everest",
              "family": "Pipkin"
            }
          ],
          "type": "webpage",
          "id": "everest",
          "citation-key": "everest",
          "issued": {
            "date-parts": [
              [
                2021
              ]
            ]
          },
          "title": "been having some  motivation troubles  recently (god who hasn't) so i'm gonna pick a tiny personal project off my ideas list and see if i can get it working by morning. tonight - a lil bash script that emails me the summaries of 5 random wikipedia articles each morning",
          "URL": "https://twitter.com/everestpipkin/status/1349274983651012609"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2022,
                4,
                4
              ]
            ],
            "date-time": "2022-04-04T18:37:21Z",
            "timestamp": 1649097441205
          },
          "reference-count": 0,
          "publisher": "Aspect-Oriented Software Association (AOSA)",
          "issue": "3",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "DOI": "10.22152/programming-journal.org/2019/3/11",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ],
            "date-time": "2019-02-01T13:44:56Z",
            "timestamp": 1549028696000
          },
          "source": "Crossref",
          "is-referenced-by-count": 0,
          "title": "Event Loops as First-Class Values: A Case Study in Pedagogic Language Design",
          "prefix": "10.22152",
          "volume": "3",
          "author": [
            {
              "given": "Joe",
              "family": "Politz",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of California San Diego, United States"
                }
              ]
            },
            {
              "given": "Benjamin",
              "family": "Lerner",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Northeastern University, United States"
                }
              ]
            },
            {
              "given": "Sorawee",
              "family": "Porncharoenwase",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Brown University, United States"
                }
              ]
            },
            {
              "given": "Shriram",
              "family": "Krishnamurthi",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Brown University, United States"
                }
              ]
            }
          ],
          "member": "9415",
          "published-online": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ]
          },
          "container-title": "The Art, Science, and Engineering of Programming",
          "original-title": [],
          "language": "en",
          "deposited": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ],
            "date-time": "2019-02-01T13:45:02Z",
            "timestamp": 1549028702000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "http://programming-journal.org/2019/3/11"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ]
          },
          "references-count": 0,
          "journal-issue": {
            "issue": "3",
            "published-online": {
              "date-parts": [
                [
                  2019,
                  2,
                  1
                ]
              ]
            }
          },
          "URL": "http://dx.doi.org/10.22152/programming-journal.org/2019/3/11",
          "relation": {},
          "ISSN": [
            "2473-7321"
          ],
          "container-title-short": "Programming",
          "published": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ]
          },
          "id": "doi:10.22152/programming-journal.org/2019/3/11"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                6
              ]
            ],
            "date-time": "2023-01-06T20:31:37Z",
            "timestamp": 1673037097583
          },
          "reference-count": 0,
          "publisher": "Aspect-Oriented Software Association (AOSA)",
          "issue": "3",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "DOI": "10.22152/programming-journal.org/2019/3/9",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ],
            "date-time": "2019-02-01T13:44:56Z",
            "timestamp": 1549028696000
          },
          "source": "Crossref",
          "is-referenced-by-count": 9,
          "title": "Babylonian-style Programming: Design and Implementation of an Integration of Live Examples into General-purpose Source Code",
          "prefix": "10.22152",
          "volume": "3",
          "author": [
            {
              "given": "David",
              "family": "Rauch",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Patrick",
              "family": "Rein",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Stefan",
              "family": "Ramson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Jens",
              "family": "Lincke",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, University of Potsdam, Germany"
                }
              ]
            },
            {
              "given": "Robert",
              "family": "Hirschfeld",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso-Plattner-Institut (HPI), Germany"
                }
              ]
            }
          ],
          "member": "9415",
          "published-online": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ]
          },
          "container-title": "The Art, Science, and Engineering of Programming",
          "original-title": [],
          "language": "en",
          "deposited": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ],
            "date-time": "2019-02-01T13:45:00Z",
            "timestamp": 1549028700000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "http://programming-journal.org/2019/3/9"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ]
          },
          "references-count": 0,
          "journal-issue": {
            "issue": "3",
            "published-online": {
              "date-parts": [
                [
                  2019,
                  2,
                  1
                ]
              ]
            }
          },
          "URL": "http://dx.doi.org/10.22152/programming-journal.org/2019/3/9",
          "relation": {},
          "ISSN": [
            "2473-7321"
          ],
          "container-title-short": "Programming",
          "published": {
            "date-parts": [
              [
                2019,
                2,
                1
              ]
            ]
          },
          "id": "doi:10.22152/programming-journal.org/2019/3/9"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                1,
                13
              ]
            ],
            "date-time": "2023-01-13T02:52:47Z",
            "timestamp": 1673578367675
          },
          "reference-count": 0,
          "publisher": "Aspect-Oriented Software Association (AOSA)",
          "issue": "1",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "DOI": "10.22152/programming-journal.org/2019/3/1",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2018,
                7,
                24
              ]
            ],
            "date-time": "2018-07-24T06:39:19Z",
            "timestamp": 1532414359000
          },
          "source": "Crossref",
          "is-referenced-by-count": 20,
          "title": "Exploratory and Live, Programming and Coding",
          "prefix": "10.22152",
          "volume": "3",
          "author": [
            {
              "given": "Patrick",
              "family": "Rein",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Stefan",
              "family": "Ramson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Jens",
              "family": "Lincke",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, University of Potsdam, Germany"
                }
              ]
            },
            {
              "given": "Robert",
              "family": "Hirschfeld",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso-Plattner-Institut (HPI), Germany"
                }
              ]
            },
            {
              "given": "Tobias",
              "family": "Pape",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            }
          ],
          "member": "9415",
          "published-online": {
            "date-parts": [
              [
                2018,
                7,
                23
              ]
            ]
          },
          "container-title": "The Art, Science, and Engineering of Programming",
          "original-title": [],
          "language": "en",
          "deposited": {
            "date-parts": [
              [
                2018,
                7,
                24
              ]
            ],
            "date-time": "2018-07-24T06:39:20Z",
            "timestamp": 1532414360000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "http://programming-journal.org/2019/3/1"
            }
          },
          "subtitle": [
            "A Literature Study Comparing Perspectives on Liveness"
          ],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2018,
                7,
                23
              ]
            ]
          },
          "references-count": 0,
          "journal-issue": {
            "issue": "1",
            "published-online": {
              "date-parts": [
                [
                  2018,
                  7,
                  23
                ]
              ]
            }
          },
          "URL": "http://dx.doi.org/10.22152/programming-journal.org/2019/3/1",
          "relation": {},
          "ISSN": [
            "2473-7321"
          ],
          "container-title-short": "Programming",
          "published": {
            "date-parts": [
              [
                2018,
                7,
                23
              ]
            ]
          },
          "id": "doi:10.22152/programming-journal.org/2019/3/1"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                20
              ]
            ],
            "date-time": "2023-03-20T18:52:41Z",
            "timestamp": 1679338361946
          },
          "reference-count": 68,
          "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
          "issue": "1",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2019,
                    1,
                    1
                  ]
                ],
                "date-time": "2019-01-01T00:00:00Z",
                "timestamp": 1546300800000
              },
              "content-version": "vor",
              "delay-in-days": 0,
              "URL": "https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html"
            },
            {
              "start": {
                "date-parts": [
                  [
                    2019,
                    1,
                    1
                  ]
                ],
                "date-time": "2019-01-01T00:00:00Z",
                "timestamp": 1546300800000
              },
              "content-version": "stm-asf",
              "delay-in-days": 0,
              "URL": "https://doi.org/10.15223/policy-029"
            },
            {
              "start": {
                "date-parts": [
                  [
                    2019,
                    1,
                    1
                  ]
                ],
                "date-time": "2019-01-01T00:00:00Z",
                "timestamp": 1546300800000
              },
              "content-version": "stm-asf",
              "delay-in-days": 0,
              "URL": "https://doi.org/10.15223/policy-037"
            }
          ],
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                2019,
                1
              ]
            ]
          },
          "DOI": "10.1109/tvcg.2018.2865158",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2018,
                8,
                20
              ]
            ],
            "date-time": "2018-08-20T18:18:53Z",
            "timestamp": 1534789133000
          },
          "page": "789-799",
          "source": "Crossref",
          "is-referenced-by-count": 56,
          "title": "Charticulator: Interactive Construction of Bespoke Chart Layouts",
          "prefix": "10.1109",
          "volume": "25",
          "author": [
            {
              "given": "Donghao",
              "family": "Ren",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "Bongshin",
              "family": "Lee",
              "sequence": "additional",
              "affiliation": []
            },
            {
              "given": "Matthew",
              "family": "Brehmer",
              "sequence": "additional",
              "affiliation": []
            }
          ],
          "member": "263",
          "reference": [
            {
              "key": "ref39",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3025453.3025768"
            },
            {
              "key": "ref38",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2015.2467191"
            },
            {
              "key": "ref33",
              "author": "shewchuk",
              "year": "1994",
              "journal-title": "An Introduction to the Conjugate Gradient Method Without the Agonizing Pain"
            },
            {
              "key": "ref32",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2015.2467091"
            },
            {
              "key": "ref31",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2016.2599030"
            },
            {
              "key": "ref30",
              "doi-asserted-by": "publisher",
              "DOI": "10.1111/cgf.12391"
            },
            {
              "key": "ref37",
              "author": "wickham",
              "year": "2009",
              "journal-title": "ggplot2 Elegant Graphics for Data Analysis"
            },
            {
              "key": "ref36",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3173574.3173909"
            },
            {
              "key": "ref35",
              "doi-asserted-by": "publisher",
              "DOI": "10.1023/A:1009708715411"
            },
            {
              "key": "ref34",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/2945.981851"
            },
            {
              "key": "ref60",
              "author": "kekeritz",
              "year": "0",
              "journal-title": "Weather Radials An infographic on heat waves and snow storms in 35 cities around the globe"
            },
            {
              "key": "ref62",
              "author": "knuth",
              "year": "0",
              "journal-title": "The Stanford GraphBase A Platform for Combinatorial Computing"
            },
            {
              "key": "ref61",
              "author": "kim",
              "year": "0",
              "journal-title": "Best Bookshelf"
            },
            {
              "key": "ref63",
              "year": "0",
              "journal-title": "United Nations Statistics Division Millennium Indicators"
            },
            {
              "key": "ref28",
              "article-title": "What I learned recreating one chart using 24 tools",
              "author": "rost",
              "year": "2016",
              "journal-title": "Source"
            },
            {
              "key": "ref64",
              "year": "0",
              "journal-title": "National Centers for Environmental Information"
            },
            {
              "key": "ref27",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2014.2346291"
            },
            {
              "key": "ref65",
              "author": "nightingale",
              "year": "1859",
              "journal-title": "A contribution to the sanitary history of the British army during the late war with Russia"
            },
            {
              "key": "ref66",
              "year": "0",
              "journal-title": "Project Tycho"
            },
            {
              "key": "ref29",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/263407.263521"
            },
            {
              "key": "ref67",
              "year": "0",
              "journal-title": "StatCounter Mobile operating system market share worldwide"
            },
            {
              "key": "ref68",
              "year": "2017",
              "journal-title": "UCI Machine Learning Repository"
            },
            {
              "key": "ref2",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/504704.504705"
            },
            {
              "key": "ref1",
              "author": "axelsson",
              "year": "1996",
              "journal-title": "Iterative Solution Methods"
            },
            {
              "key": "ref20",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/j.visinf.2018.04.008"
            },
            {
              "key": "ref22",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2858036.2858435"
            },
            {
              "key": "ref21",
              "article-title": "The design space of construction tools for information visualization: A survey",
              "author": "mei",
              "year": "2017",
              "journal-title": "Journal of Visual Languages& Computing"
            },
            {
              "key": "ref24",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/74877.74917"
            },
            {
              "key": "ref23",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2207676.2208292"
            },
            {
              "key": "ref26",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/PACIFICVIS.2017.8031599"
            },
            {
              "key": "ref25",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/s00146-006-0050-9"
            },
            {
              "key": "ref50",
              "year": "0",
              "journal-title": "Microsoft Power BI Custom visuals"
            },
            {
              "key": "ref51",
              "year": "0",
              "journal-title": "Piktochart"
            },
            {
              "key": "ref59",
              "author": "herzog",
              "year": "2005",
              "journal-title": "World greenhouse gas emissions in 2005 - world resources institute"
            },
            {
              "key": "ref58",
              "article-title": "Battling infectious diseases in the 20th century: the impact of vaccines",
              "author": "debold",
              "year": "0",
              "journal-title": "The Wall Street Journal"
            },
            {
              "key": "ref57",
              "year": "0",
              "journal-title": "Caltrain's schedule"
            },
            {
              "key": "ref56",
              "year": "0",
              "journal-title": "WebAssembly"
            },
            {
              "key": "ref55",
              "year": "0",
              "journal-title": "Typescript"
            },
            {
              "key": "ref54",
              "year": "0",
              "journal-title": "react"
            },
            {
              "key": "ref53",
              "year": "0",
              "journal-title": "Quadrigram"
            },
            {
              "key": "ref52",
              "year": "0",
              "journal-title": "Plotly"
            },
            {
              "key": "ref10",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/VL.2000.874345"
            },
            {
              "key": "ref11",
              "first-page": "8",
              "article-title": "Integrating edge routing into force-directed layout",
              "author": "dwyer",
              "year": "2006",
              "journal-title": "International Symposium on Graph Drawing"
            },
            {
              "key": "ref40",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2858036.2858075"
            },
            {
              "key": "ref12",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/964696.964710"
            },
            {
              "key": "ref13",
              "article-title": "A survey of visualization construction user interfaces",
              "author": "grammel",
              "year": "2013",
              "journal-title": "EuroVis - Short Papers"
            },
            {
              "key": "ref14",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2006.147"
            },
            {
              "key": "ref15",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2016.2598620"
            },
            {
              "key": "ref16",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3173574.3173697"
            },
            {
              "key": "ref17",
              "author": "liu",
              "year": "2018",
              "journal-title": "Data Illustrator Gallery"
            },
            {
              "key": "ref18",
              "author": "marey",
              "year": "1878",
              "journal-title": "La m&#x00E9;thode graphique dans les sciences exp&#x00E9;rimentales et principalement en physiologie et en m&#x00E9;decine"
            },
            {
              "key": "ref19",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/3125571.3125585"
            },
            {
              "key": "ref4",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2015.2467732"
            },
            {
              "key": "ref3",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2016.2598609"
            },
            {
              "key": "ref6",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2011.185"
            },
            {
              "key": "ref5",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2009.174"
            },
            {
              "key": "ref8",
              "article-title": "The Functional Art: An Introduction to Information Graphics and Visualization",
              "author": "cairo",
              "year": "2012",
              "journal-title": "New Riders"
            },
            {
              "key": "ref7",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2501988.2502046"
            },
            {
              "key": "ref49",
              "year": "0",
              "journal-title": "Infogram"
            },
            {
              "key": "ref9",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/358886.358895"
            },
            {
              "key": "ref46",
              "year": "0",
              "journal-title": "Flourish"
            },
            {
              "key": "ref45",
              "year": "0",
              "journal-title": "Easelly"
            },
            {
              "key": "ref48",
              "year": "0",
              "journal-title": "iCharts"
            },
            {
              "key": "ref47",
              "year": "0",
              "journal-title": "Flux"
            },
            {
              "key": "ref42",
              "year": "0",
              "journal-title": "Android developers constraint library"
            },
            {
              "key": "ref41",
              "first-page": "223:1",
              "article-title": "DataInk: Enabling direct and creative data-oriented drawing",
              "author": "xia",
              "year": "2018",
              "journal-title": "Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI)"
            },
            {
              "key": "ref44",
              "year": "0",
              "journal-title": "Datamat"
            },
            {
              "key": "ref43",
              "year": "0",
              "journal-title": "ChartBlocks"
            }
          ],
          "container-title": "IEEE Transactions on Visualization and Computer Graphics",
          "original-title": [],
          "link": [
            {
              "URL": "http://xplorestaging.ieee.org/ielx7/2945/8547224/08440827.pdf?arnumber=8440827",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2022,
                7,
                13
              ]
            ],
            "date-time": "2022-07-13T20:48:36Z",
            "timestamp": 1657745316000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://ieeexplore.ieee.org/document/8440827/"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2019,
                1
              ]
            ]
          },
          "references-count": 68,
          "journal-issue": {
            "issue": "1"
          },
          "URL": "http://dx.doi.org/10.1109/TVCG.2018.2865158",
          "relation": {},
          "ISSN": [
            "1077-2626",
            "1941-0506",
            "2160-9306"
          ],
          "subject": [
            "Computer Graphics and Computer-Aided Design",
            "Computer Vision and Pattern Recognition",
            "Signal Processing",
            "Software"
          ],
          "container-title-short": "IEEE Trans. Visual. Comput. Graphics",
          "published": {
            "date-parts": [
              [
                2019,
                1
              ]
            ]
          },
          "id": "doi:10.1109/TVCG.2018.2865158"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                15
              ]
            ],
            "date-time": "2023-03-15T05:11:49Z",
            "timestamp": 1678857109080
          },
          "reference-count": 28,
          "publisher": "Wiley",
          "issue": "3",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2014,
                    6,
                    1
                  ]
                ],
                "date-time": "2014-06-01T00:00:00Z",
                "timestamp": 1401580800000
              },
              "content-version": "tdm",
              "delay-in-days": 0,
              "URL": "http://doi.wiley.com/10.1002/tdm_license_1.1"
            },
            {
              "start": {
                "date-parts": [
                  [
                    2014,
                    7,
                    12
                  ]
                ],
                "date-time": "2014-07-12T00:00:00Z",
                "timestamp": 1405123200000
              },
              "content-version": "vor",
              "delay-in-days": 41,
              "URL": "http://onlinelibrary.wiley.com/termsAndConditions#vor"
            }
          ],
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                2014,
                6
              ]
            ]
          },
          "DOI": "10.1111/cgf.12391",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2014,
                7,
                15
              ]
            ],
            "date-time": "2014-07-15T15:06:15Z",
            "timestamp": 1405436775000
          },
          "page": "351-360",
          "source": "Crossref",
          "is-referenced-by-count": 115,
          "title": "Lyra: An Interactive Visualization Design Environment",
          "prefix": "10.1111",
          "volume": "33",
          "author": [
            {
              "given": "Arvind",
              "family": "Satyanarayan",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Stanford University"
                }
              ]
            },
            {
              "given": "Jeffrey",
              "family": "Heer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington"
                }
              ]
            }
          ],
          "member": "311",
          "published-online": {
            "date-parts": [
              [
                2014,
                7,
                12
              ]
            ]
          },
          "reference": [
            {
              "issue": "2",
              "key": "10.1111/cgf.12391-BIB0001|cgf12391-cit-0001",
              "first-page": "123",
              "article-title": "The visual design and control of trellis display",
              "volume": "5",
              "author": "Becker",
              "year": "1996",
              "journal-title": "Journal of Comp. & Graphical Statistics"
            },
            {
              "issue": "6",
              "key": "10.1111/cgf.12391-BIB0002|cgf12391-cit-0002",
              "doi-asserted-by": "crossref",
              "first-page": "1121",
              "DOI": "10.1109/TVCG.2009.174",
              "article-title": "Protovis: A graphical toolkit for visualization",
              "volume": "15",
              "author": "Bostock",
              "year": "2009",
              "journal-title": "IEEE Trans. Visualization & Comp. Graphics"
            },
            {
              "issue": "12",
              "key": "10.1111/cgf.12391-BIB0003|cgf12391-cit-0003",
              "doi-asserted-by": "crossref",
              "first-page": "2301",
              "DOI": "10.1109/TVCG.2011.185",
              "article-title": "D3: Data-Driven Documents",
              "volume": "17",
              "author": "Bostock",
              "year": "2011",
              "journal-title": "IEEE Trans. Visualization & Comp. Graphics"
            },
            {
              "issue": "6",
              "key": "10.1111/cgf.12391-BIB0004|cgf12391-cit-0004",
              "doi-asserted-by": "crossref",
              "first-page": "1245",
              "DOI": "10.1109/TVCG.2008.166",
              "article-title": "Stacked graphs- geometry & aesthetics",
              "volume": "14",
              "author": "Byron",
              "year": "2008",
              "journal-title": "IEEE Trans. Visualization & Comp. Graphics"
            },
            {
              "key": "10.1111/cgf.12391-BIB0005|cgf12391-cit-0005",
              "unstructured": "Carter S. Cox A. Bostock M. Dissecting a Trailer: The Parts of the Film That Make the Cut http://www.nytimes.com/interactive/2013/02/19/movies/awardsseason/oscar-trailers.html 2013"
            },
            {
              "key": "10.1111/cgf.12391-BIB0006|cgf12391-cit-0006",
              "unstructured": "Fekete J.-D. The InfoVis toolkit Proc. IEEE Information Visualization 2004 167 174"
            },
            {
              "key": "10.1111/cgf.12391-BIB0007|cgf12391-cit-0007",
              "unstructured": "http://flare.prefuse.org/ 2013"
            },
            {
              "key": "10.1111/cgf.12391-BIB0008|cgf12391-cit-0008",
              "doi-asserted-by": "crossref",
              "first-page": "131",
              "DOI": "10.1006/jvlc.1996.0009",
              "article-title": "Usability analysis of visual programming environments: a ‘cognitive dimensions' framework",
              "volume": "7",
              "author": "Green",
              "year": "1996",
              "journal-title": "Journal of Visual Languages and Computing"
            },
            {
              "key": "10.1111/cgf.12391-BIB0009|cgf12391-cit-0009",
              "doi-asserted-by": "crossref",
              "first-page": "213",
              "volume-title": "Proceedings of the 13th annual ACM symposium on User interface software and technology",
              "author": "Guimbretiére",
              "year": "2000",
              "DOI": "10.1145/354401.354778"
            },
            {
              "issue": "6",
              "key": "10.1111/cgf.12391-BIB0010|cgf12391-cit-0010",
              "doi-asserted-by": "crossref",
              "first-page": "1149",
              "DOI": "10.1109/TVCG.2010.144",
              "article-title": "Declarative language design for interactive visualization",
              "volume": "16",
              "author": "Heer",
              "year": "2010",
              "journal-title": "IEEE Trans. Visualization & Comp. Graphics"
            },
            {
              "key": "10.1111/cgf.12391-BIB0011|cgf12391-cit-0011",
              "first-page": "421",
              "volume-title": "Proc. ACM CHI",
              "author": "Heer",
              "year": "2005"
            },
            {
              "issue": "4",
              "key": "10.1111/cgf.12391-BIB0012|cgf12391-cit-0012",
              "doi-asserted-by": "crossref",
              "first-page": "311",
              "DOI": "10.1207/s15327051hci0104_2",
              "article-title": "Direct manipulation interfaces",
              "volume": "1",
              "author": "Hutchins",
              "year": "1985",
              "journal-title": "Human-Computer Interaction"
            },
            {
              "issue": "6",
              "key": "10.1111/cgf.12391-BIB0013|cgf12391-cit-0013",
              "doi-asserted-by": "crossref",
              "first-page": "1240",
              "DOI": "10.1109/TVCG.2007.70539",
              "article-title": "Animated transitions in statistical data graphics",
              "volume": "13",
              "author": "Heer",
              "year": "2007",
              "journal-title": "Visualization and Computer Graphics, IEEE Transactions on"
            },
            {
              "key": "10.1111/cgf.12391-BIB0014|cgf12391-cit-0014",
              "unstructured": "Kosara R. The US ZIPScribble Map http://eagereyes.org/zipscribble-maps/united-states/ 2006"
            },
            {
              "key": "10.1111/cgf.12391-BIB0015|cgf12391-cit-0015",
              "doi-asserted-by": "crossref",
              "unstructured": "Kandel S. Paepcke A. Hellerstein J. Heer J. Wrangler: Interactive visual specification of data transformation scripts Proc. ACM CHI 2011",
              "DOI": "10.1145/1978942.1979444"
            },
            {
              "key": "10.1111/cgf.12391-BIB0016|cgf12391-cit-0016",
              "unstructured": "Lucas B. Abram G.D. Collins N.S. Epstein D.A. Gresh D.L. McAuliffe K.P. An architecture for a scientific visualization system Proc. IEEE Visualization 1992 107 114"
            },
            {
              "key": "10.1111/cgf.12391-BIB0017|cgf12391-cit-0017",
              "unstructured": "P eriscopic Thoughts on Visualizing U.S. Gun Murders http://www.periscopic.com/#/news/2013/02/thoughts-on-visualizing-u-s-gun-murders/ 2013"
            },
            {
              "key": "10.1111/cgf.12391-BIB0018|cgf12391-cit-0018",
              "unstructured": "Processing. http://processing.org"
            },
            {
              "key": "10.1111/cgf.12391-BIB0019|cgf12391-cit-0019",
              "first-page": "112",
              "volume-title": "Proc. ACM CHI",
              "author": "Roth",
              "year": "1994"
            },
            {
              "issue": "1",
              "key": "10.1111/cgf.12391-BIB0020|cgf12391-cit-0020",
              "doi-asserted-by": "crossref",
              "first-page": "52",
              "DOI": "10.1109/2945.981851",
              "article-title": "Polaris: A system for query, analysis, and visualization of multidimensional relational databases",
              "volume": "8",
              "author": "Stolte",
              "year": "2002",
              "journal-title": "IEEE Trans. Visualization & Comp. Graphics"
            },
            {
              "key": "10.1111/cgf.12391-BIB0021|cgf12391-cit-0021",
              "unstructured": "Tufte E. Cleaning up Excel's poshlust graphics http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0002kk"
            },
            {
              "key": "10.1111/cgf.12391-BIB0022|cgf12391-cit-0022",
              "unstructured": "Vega A Visualization Grammar http://trifacta.github.io/vega 2013"
            },
            {
              "key": "10.1111/cgf.12391-BIB0023|cgf12391-cit-0023",
              "unstructured": "Victor B. Drawing Dynamic Visualizations http://vimeo.com/66085662 2013"
            },
            {
              "issue": "6",
              "key": "10.1111/cgf.12391-BIB0024|cgf12391-cit-0024",
              "doi-asserted-by": "crossref",
              "first-page": "1121",
              "DOI": "10.1109/TVCG.2007.70577",
              "article-title": "Many Eyes: a site for visualization at internet scale",
              "volume": "13",
              "author": "Viégas",
              "year": "2007",
              "journal-title": "IEEE Trans. Visualization & Comp. Graphics"
            },
            {
              "key": "10.1111/cgf.12391-BIB0025|cgf12391-cit-0025",
              "unstructured": "Weaver C. Building highly-coordinated visualizations in Improvise Proc. IEEE Information Visualization 2004 159 166"
            },
            {
              "key": "10.1111/cgf.12391-BIB0026|cgf12391-cit-0026",
              "doi-asserted-by": "crossref",
              "volume-title": "ggplot2: Elegant Graphics for Data Analysis",
              "author": "Wickham",
              "year": "2009",
              "DOI": "10.1007/978-0-387-98141-3"
            },
            {
              "issue": "1",
              "key": "10.1111/cgf.12391-BIB0027|cgf12391-cit-0027",
              "doi-asserted-by": "crossref",
              "first-page": "3",
              "DOI": "10.1198/jcgs.2009.07098",
              "article-title": "A layered grammar of graphics",
              "volume": "19",
              "author": "Wickham",
              "year": "2010",
              "journal-title": "Journal of Computational and Graphical Statistics"
            },
            {
              "key": "10.1111/cgf.12391-BIB0028|cgf12391-cit-0028",
              "volume-title": "The Grammar of Graphics",
              "author": "Wilkinson",
              "year": "2005"
            }
          ],
          "container-title": "Computer Graphics Forum",
          "original-title": [],
          "language": "en",
          "link": [
            {
              "URL": "https://api.wiley.com/onlinelibrary/tdm/v1/articles/10.1111%2Fcgf.12391",
              "content-type": "application/pdf",
              "content-version": "vor",
              "intended-application": "text-mining"
            },
            {
              "URL": "https://api.wiley.com/onlinelibrary/tdm/v1/articles/10.1111%2Fcgf.12391",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "text-mining"
            },
            {
              "URL": "http://onlinelibrary.wiley.com/wol1/doi/10.1111/cgf.12391/fullpdf",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2021,
                7,
                4
              ]
            ],
            "date-time": "2021-07-04T14:06:18Z",
            "timestamp": 1625407578000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://onlinelibrary.wiley.com/doi/10.1111/cgf.12391"
            }
          },
          "subtitle": [
            "Lyra: An Interactive Visualization Design Environment"
          ],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2014,
                6
              ]
            ]
          },
          "references-count": 28,
          "journal-issue": {
            "issue": "3",
            "published-print": {
              "date-parts": [
                [
                  2014,
                  6
                ]
              ]
            }
          },
          "URL": "http://dx.doi.org/10.1111/cgf.12391",
          "relation": {},
          "ISSN": [
            "0167-7055"
          ],
          "subject": [
            "Computer Graphics and Computer-Aided Design"
          ],
          "container-title-short": "Computer Graphics Forum",
          "published": {
            "date-parts": [
              [
                2014,
                6
              ]
            ]
          },
          "id": "doi:10.1111/cgf.12391"
        },
        {
          "author": [
            {
              "given": "Yoshiki",
              "family": "Schmitz"
            }
          ],
          "type": "webpage",
          "id": "yoshiki",
          "citation-key": "yoshiki",
          "issued": {
            "date-parts": [
              [
                2019
              ]
            ]
          },
          "title": "I've been jamming on this concept for making data-driven designs...",
          "URL": "https://twitter.com/yoshikischmitz/status/1176642448077967362"
        },
        {
          "author": [
            {
              "given": "Paul",
              "family": "Shen"
            }
          ],
          "type": "webpage",
          "id": "natto-hn",
          "citation-key": "natto-hn",
          "issued": {
            "date-parts": [
              [
                2021
              ]
            ]
          },
          "title": "Show HN: Natto – a canvas for writing and manipulating JavaScript",
          "URL": "https://news.ycombinator.com/item?id=26478548"
        },
        {
          "author": [
            {
              "given": "Paul",
              "family": "Shen"
            }
          ],
          "type": "webpage",
          "id": "natto",
          "citation-key": "natto",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "title": "welcome! – natto",
          "URL": "https://natto.dev/"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                23
              ]
            ],
            "date-time": "2023-03-23T16:10:07Z",
            "timestamp": 1679587807060
          },
          "reference-count": 51,
          "publisher": "Springer Science and Business Media LLC",
          "issue": "4",
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                1999,
                12
              ]
            ]
          },
          "DOI": "10.1023/a:1008716330212",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2002,
                12,
                22
              ]
            ],
            "date-time": "2002-12-22T16:37:32Z",
            "timestamp": 1040575052000
          },
          "page": "333-352",
          "source": "Crossref",
          "is-referenced-by-count": 146,
          "title": "Formality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems",
          "prefix": "10.1007",
          "volume": "8",
          "author": [
            {
              "given": "Frank M.",
              "family": "Shipman",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "Catherine C.",
              "family": "Marshall",
              "sequence": "additional",
              "affiliation": []
            }
          ],
          "member": "297",
          "reference": [
            {
              "key": "202240_CR1",
              "unstructured": "Bannon, L. (ed.) (1995): Commentaries and a Response in the Suchman-Winograd Debate. Computer Supported Cooperative Work, vol. 3,no. 1, pp. 29."
            },
            {
              "key": "202240_CR2",
              "unstructured": "Blomberg, J., L. Suchman and R. Trigg (1994): Reflections on Work-Oriented Design in Three Voices. Social Science, Technical Systems, and Cooperative Work."
            },
            {
              "issue": "4",
              "key": "202240_CR3",
              "doi-asserted-by": "crossref",
              "first-page": "10",
              "DOI": "10.1109/MC.1987.1663532",
              "volume": "20",
              "author": "F.P. Brooks Jr.",
              "year": "1987",
              "unstructured": "Brooks Jr., F.P. (April 1987): No Silver Bullet: Essence and Accidents of Software Engineering. IEEE Computer, vol. 20,no. 4, pp. 10-19.",
              "journal-title": "IEEE Computer"
            },
            {
              "issue": "3",
              "key": "202240_CR4",
              "doi-asserted-by": "crossref",
              "first-page": "251",
              "DOI": "10.1080/10919399109540163",
              "volume": "1",
              "author": "L.W. Brunet",
              "year": "1991",
              "unstructured": "Brunet, L.W., C.T. Morrissey and G.A. Gorry (1991): Oral History and Information Technology: Human Voices of Assessment. Journal of Organizational Computing, vol. 1,no. 3, pp. 251-274.",
              "journal-title": "Journal of Organizational Computing"
            },
            {
              "key": "202240_CR5",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'90)",
              "author": "C.V. Bullen",
              "year": "1990",
              "unstructured": "Bullen, C.V. and Bennett, J.L. (1990): Learning From User Experience With Groupware. Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'90). New York: ACM."
            },
            {
              "key": "202240_CR6",
              "unstructured": "Carroll, J.M. and T.P. Moran (1991): Special Issue on Design Rational. Human-Computer Interaction, vol. 6,nos. 3–4."
            },
            {
              "key": "202240_CR7",
              "volume-title": "Proceedings of the Conference on Computer Supported Cooperative Work",
              "author": "J. Conklin",
              "year": "1988",
              "unstructured": "Conklin, J. and M. Begeman (1988): gIBIS: A Hypertext Tool for Exploratory Policy Discussion. Proceedings of the Conference on Computer Supported Cooperative Work. New York: ACM."
            },
            {
              "issue": "s.3–4",
              "key": "202240_CR8",
              "doi-asserted-by": "crossref",
              "first-page": "357",
              "DOI": "10.1207/s15327051hci0603&4_6",
              "volume": "6",
              "author": "E.J. Conklin",
              "year": "1991",
              "unstructured": "Conklin, E.J. and K.C. Yakemovic (1991): A Process-Oriented Approach to Design Rationale. Human Computer Interaction, Special Issue on Design Rationale, vol. 6,nos. 3–4, pp. 357-391.",
              "journal-title": "Human Computer Interaction, Special Issue on Design Rationale"
            },
            {
              "key": "202240_CR9",
              "doi-asserted-by": "crossref",
              "first-page": "127",
              "DOI": "10.1016/0004-3702(86)90080-9",
              "volume": "28",
              "author": "J. de Kleer",
              "year": "1986",
              "unstructured": "de Kleer, J. (1986): An Assumption-Based TMS. Artificial Intelligence, vol. 28, pp. 127-162.",
              "journal-title": "Artificial Intelligence"
            },
            {
              "key": "202240_CR10",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'96)",
              "author": "P. Dourish",
              "year": "1996",
              "unstructured": "Dourish, P., J. Holmes, a. MacLean, P. Marqvardsen and A. Zbyslaw (November 1996): Free-flow: Mediating Between Representations and Action in Workflow Systems. Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'96). New York: ACM."
            },
            {
              "issue": "1",
              "key": "202240_CR11",
              "doi-asserted-by": "crossref",
              "first-page": "38",
              "DOI": "10.1145/99977.99987",
              "volume": "34",
              "author": "C.A. Ellis",
              "year": "1991",
              "unstructured": "Ellis, C.A., S.J. Gibbs and G.L. Rein (1991): Groupware: Some Issues and Experiences. Communications of the ACM, vol. 34,no. 1, pp. 38-58.",
              "journal-title": "Communications of the ACM"
            },
            {
              "key": "202240_CR12",
              "series-title": "Linkoping Studies in Science and Technology",
              "volume-title": "Meta-Tool Support for Knowledge Acquisition",
              "author": "H. Eriksson",
              "year": "1991",
              "unstructured": "Eriksson, H. (1991): Meta-Tool Support for Knowledge Acquisition. Ph.D. dissertation, Linkoping, Sweden: Department of Computer Science, Linkoping University. Linkoping Studies in Science and Technology, Dissertations No. 244."
            },
            {
              "issue": "s.3–4",
              "key": "202240_CR13",
              "doi-asserted-by": "crossref",
              "first-page": "393",
              "DOI": "10.1207/s15327051hci0603&4_7",
              "volume": "6",
              "author": "G. Fischer",
              "year": "1991",
              "unstructured": "Fischer, G., A.C. Lemke, R. McCall and A. Morch (1991): Making Argumentation Serve Design. Human Computer Interaction, vol. 6,nos. 3–4, pp. 393-419.",
              "journal-title": "Human Computer Interaction"
            },
            {
              "issue": "11",
              "key": "202240_CR14",
              "doi-asserted-by": "crossref",
              "first-page": "964",
              "DOI": "10.1145/32206.32212",
              "volume": "30",
              "author": "G.W. Furnas",
              "year": "1987",
              "unstructured": "Furnas, G.W., T.K. Landauer, L.M. Gomez and S.T. Dumais (November 1987): The Vocabulary Problem in Human-System Communication. Communication of the ACM, vol. 30,no. 11, pp. 964-971.",
              "journal-title": "Communication of the ACM"
            },
            {
              "key": "202240_CR15",
              "volume-title": "End-User Modifiability in Knowledge-Based Design Environments",
              "author": "A. Girgensohn",
              "year": "1992",
              "unstructured": "Girgensohn, A. (1992): End-User Modifiability in Knowledge-Based Design Environments. Ph.D. dissertation, Boulder, CO: Department of Computer Science, University of Colorado. Also available as TechReport CU-CS-595-92."
            },
            {
              "key": "202240_CR16",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'96)",
              "author": "N. Glance",
              "year": "1996",
              "unstructured": "Glance, N., D. Pagani and R. Pareschi (November 1996): Generalized Process Structure Grammars (GPSG) for Flexible Representations of Work. Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'96). New York: ACM."
            },
            {
              "key": "202240_CR17",
              "first-page": "206",
              "volume": "53",
              "author": "G.A. Gorry",
              "year": "1978",
              "unstructured": "Gorry, G.A., R.M. Chamberlain, B.S. Price, M.E. DeBakey and A.M. Grotto (1978): Communication Patterns in a Biomedical Research Center. Journal of Medical Education, vol. 53, pp. 206-208.",
              "journal-title": "Journal of Medical Education"
            },
            {
              "key": "202240_CR18",
              "volume-title": "Design at Work: Cooperative Design of Computer Systems",
              "year": "1991",
              "unstructured": "Greenbaum, J. and M. Kyng (eds.) (1991): Design at Work: Cooperative Design of Computer Systems. Hillsdale, NJ: Lawrence Erlbaum Associates, Inc."
            },
            {
              "key": "202240_CR19",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'88)",
              "author": "J. Grudin",
              "year": "1988",
              "unstructured": "Grudin, J. (September 1988). Why CSCW Applications Fail: Problems in the Design and Evaluation of Organizational Interfaces. Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'88). New York: ACM."
            },
            {
              "issue": "7",
              "key": "202240_CR20",
              "doi-asserted-by": "crossref",
              "first-page": "836",
              "DOI": "10.1145/48511.48514",
              "volume": "31",
              "author": "F.G. Halasz",
              "year": "1988",
              "unstructured": "Halasz, F.G. (July 1988). Reflections on NoteCards: Seven Issues for the Next Generation of Hypermedia Systems. Communications of the ACM, vol. 31,no. 7, pp. 836-352.",
              "journal-title": "Communications of the ACM"
            },
            {
              "key": "202240_CR21",
              "volume-title": "NoteCards in a Nutshell. Human Factors in Computing Systems and Graphics Interface, CHI+GI'87 Conference Proceedings",
              "author": "F.G. Halasz",
              "year": "1987",
              "unstructured": "Halasz, F.G., T.P. Moran and R.H. Trigg (April 1987): NoteCards in a Nutshell. Human Factors in Computing Systems and Graphics Interface, CHI+GI'87 Conference Proceedings (Toronto, Canada). New York: ACM."
            },
            {
              "key": "202240_CR22",
              "volume-title": "User Centered System Design, New Perspectives on Human-Computer Interaction",
              "author": "E.L. Hutchins",
              "year": "1986",
              "unstructured": "Hutchins, E.L., J.D. Hollan and D.A. Norman (1986): Direct Manipulation Interfaces. In D.A. Norman and S.W. Draper (eds.): User Centered System Design, New Perspectives on Human-Computer Interaction. Hillsdale, NJ: Lawrence Erlbaum Associates, Inc."
            },
            {
              "key": "202240_CR23",
              "volume-title": "Issues as Elements of Information Systems Working Paper",
              "author": "W. Kunz",
              "year": "1970",
              "unstructured": "Kunz, W. and H.W.J. Rittel (1970): Issues as Elements of Information Systems Working Paper. Berkeley, CA: Center for Planning and Development Research, University of California."
            },
            {
              "key": "202240_CR24",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work",
              "author": "J. Lee",
              "year": "1990",
              "unstructured": "Lee, J. (October 1990): SIBYL: A Tool for Managing Group Decision Rationale. Proceedings of the Conference on Computer-Supported Cooperative Work. New York: ACM."
            },
            {
              "key": "202240_CR25",
              "doi-asserted-by": "crossref",
              "unstructured": "MacLean, A., R. Young, V. Bellotti and T. Moran (1991): Questions, Options, and Criteria: Elements of a Design Rationale for User Interfaces. Human Computer Interaction.",
              "DOI": "10.1207/s15327051hci0603&4_2"
            },
            {
              "issue": "1",
              "key": "202240_CR26",
              "doi-asserted-by": "crossref",
              "first-page": "99",
              "DOI": "10.1145/357423.357430",
              "volume": "1",
              "author": "T.W. Malone",
              "year": "1983",
              "unstructured": "Malone, T.W. (January 1983): How do People Organize Their Desks? Implications for the Design of Office Information Systems. ACM Transactions on Office Information Systems, vol. 1,no. 1, pp. 99-112.",
              "journal-title": "ACM Transactions on Office Information Systems"
            },
            {
              "key": "202240_CR27",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'86)",
              "author": "T.W. Malone",
              "year": "1986",
              "unstructured": "Malone, T.W., K.R. Grant, K.-Y. Lai, R. Rao and D. Rosenblitt (December 1986): Semi-Structured Messages are Surprisingly Useful for Computer-Supported Coordination. Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'86). Austin, TX: MCC."
            },
            {
              "key": "202240_CR28",
              "doi-asserted-by": "crossref",
              "unstructured": "Marshall, C., F. Halasz, R. Rogers and W. Janssen (1991): Aquanet: A Hypertext Tool to Hold Your Knowledge in Place. Hypertext '91 Conference.",
              "DOI": "10.1145/122974.123000"
            },
            {
              "key": "202240_CR29",
              "doi-asserted-by": "crossref",
              "unstructured": "Marshall, C.C. and R.A. Rogers (December 1992): Two Years Before the Mist: Experiences with Aquanet. Proceedings of the European Conference on Hypertext (ECHT '92). Milano, Italy.",
              "DOI": "10.1145/168466.168490"
            },
            {
              "issue": "8",
              "key": "202240_CR30",
              "doi-asserted-by": "crossref",
              "first-page": "88",
              "DOI": "10.1145/208344.208350",
              "volume": "38",
              "author": "C. Marshall",
              "year": "1995",
              "unstructured": "Marshall, C. and F. Shipman (1995): Spatial Hypertext: Designing for Change. Communications of the ACM, vol. 38,no. 8, pp. 88-97.",
              "journal-title": "Communications of the ACM"
            },
            {
              "key": "202240_CR31",
              "volume-title": "Applications of Mini-and Microcomputers in Information, Documentation and Libraries",
              "author": "R. McCall",
              "year": "1983",
              "unstructured": "McCall, R., B. Schaab and W. Schuler (1983): An Information Station for the Problem Solver: System Concepts. In C. Keren and L. Perlmutter (eds.): Applications of Mini-and Microcomputers in Information, Documentation and Libraries. New York: Elsevier."
            },
            {
              "issue": "2",
              "key": "202240_CR32",
              "first-page": "32",
              "volume": "6",
              "author": "S. Mittal",
              "year": "1985",
              "unstructured": "Mittal, S. and C.L. Dym (1985): Knowledge Acquisition from Multiple Experts. AI Magazine, vol. 6,no. 2, pp. 32-36.",
              "journal-title": "AI Magazine"
            },
            {
              "key": "202240_CR33",
              "volume-title": "Issues Supporting Notetaking and Note Using in the Computer Environment",
              "author": "M.L. Monty",
              "year": "1990",
              "unstructured": "Monty, M.L. (1990): Issues Supporting Notetaking and Note Using in the Computer Environment. Ph.D. dissertation, San Diego, CA: Department of Psychology, University of California, San Diego."
            },
            {
              "key": "202240_CR34",
              "volume-title": "Implicit Structures for Pen-Based Systems Within a Freeform Interaction Paradigm Technical Report",
              "author": "T. Moran",
              "year": "1994",
              "unstructured": "Moran, T., P. Chui, B. vanMelle and G. Kurtenbach (1994): Implicit Structures for Pen-Based Systems Within a Freeform Interaction Paradigm Technical Report. 3333 Coyote Hill Road, Palo Alto, CA: Xerox Palo Alto Research Center."
            },
            {
              "key": "202240_CR35",
              "doi-asserted-by": "crossref",
              "first-page": "673",
              "DOI": "10.1016/0020-7373(89)90021-7",
              "volume": "31",
              "author": "M. Musen",
              "year": "1989",
              "unstructured": "Musen, M. (1989): An Editor for the Conceptual Models of Interactive Knowledge-Acquisition Tools. International Journal of Man-Machine Studies, vol. 31, pp. 673-698.",
              "journal-title": "International Journal of Man-Machine Studies"
            },
            {
              "key": "202240_CR36",
              "volume-title": "Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'90)",
              "author": "B.A. Nardi",
              "year": "1990",
              "unstructured": "Nardi, B.A. and J.R. Miller (October 1990): A Ethnographic Study of Distributed Problem Solving in Spreadsheet Development. Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW'90). New York: ACM."
            },
            {
              "key": "202240_CR37",
              "volume-title": "Pushing Toulmin Too Far: Learning from an Argument Representation Scheme Technical Report",
              "author": "S. Newman",
              "year": "1992",
              "unstructured": "Newman, S. and C. Marshall (1992): Pushing Toulmin Too Far: Learning from an Argument Representation Scheme Technical Report. 3333 Coyote Hill Road, Palo Alto, CA: Xerox Palo Alto Research Center."
            },
            {
              "key": "202240_CR38",
              "doi-asserted-by": "crossref",
              "volume-title": "User Centered System Design, New Perspective on Human-Computer Interaction",
              "author": "D.A. Norman",
              "year": "1986",
              "unstructured": "Norman, D.A. (1986): Cognitive Engineering. In D.A. Norman and S.W. Draper (eds.): User Centered System Design, New Perspective on Human-Computer Interaction. Hillsdale, NJ: Lawrence Erlbaum Associates, Inc.",
              "DOI": "10.1201/b15703"
            },
            {
              "key": "202240_CR39",
              "unstructured": "Peper, G., C. MacIntyre and J. Keenan (1989): Hypertext: A New Approach for Implementing an Expert System. Proceedings of ITL Expert Systems Conference."
            },
            {
              "key": "202240_CR40",
              "volume-title": "The Tacit Dimension",
              "author": "M. Polanyi",
              "year": "1966",
              "unstructured": "Polanyi, M. (1966): The Tacit Dimension. Garden City, NY: Doubleday."
            },
            {
              "key": "202240_CR41",
              "volume-title": "Supporting Knowledge-Base Evolution with Incremental Formalization",
              "author": "F. Shipman",
              "year": "1993",
              "unstructured": "Shipman, F. (1993): Supporting Knowledge-Base Evolution with Incremental Formalization. Ph.D. dissertation, Boulder, CO: Department of Computer Science, University of Colorado. Also available as TechReport CU-CS-658-93."
            },
            {
              "key": "202240_CR42",
              "volume-title": "Proceedings of Hypertext'89",
              "author": "F. Shipman",
              "year": "1989",
              "unstructured": "Shipman, F., R. Chaney and T. Gorry (November 1989). Distributed Hypertext for Collaborative Research: The Virtual Notebook System. Proceedings of Hypertext'89 (Pittsburgh, PA). New York: ACM."
            },
            {
              "key": "202240_CR43",
              "doi-asserted-by": "crossref",
              "unstructured": "Shipman, F. and R. McCall (1994): Supporting Knowledge-Base Evolution with Incremental Formalization. Human Factors in Computing Systems, INTERCHI'94 Conference Proceedings. ACM.",
              "DOI": "10.1145/259963.260386"
            },
            {
              "key": "202240_CR44",
              "volume-title": "People and Computers VI",
              "author": "S. Shum",
              "year": "1991",
              "unstructured": "Shum, S. (1991): Cognitive Dimensions of Design Rationale. In D. Diaper and N.V. Hammond (eds.): People and Computers VI. Cambridge, UK: Cambridge University Press."
            },
            {
              "key": "202240_CR45",
              "unstructured": "Stevens, C. (1993): Helping Users Locate and Organize Information. Doctoral dissertation, Department of Computer Science, University of Colorado."
            },
            {
              "key": "202240_CR46",
              "volume-title": "Plans and Situated Actions",
              "author": "L.A. Suchman",
              "year": "1987",
              "unstructured": "Suchman, L.A. (1987): Plans and Situated Actions. Cambridge, UK: Cambridge University Press."
            },
            {
              "issue": "3",
              "key": "202240_CR47",
              "doi-asserted-by": "crossref",
              "first-page": "177",
              "DOI": "10.1007/BF00749015",
              "volume": "2",
              "author": "L. Suchman",
              "year": "1994",
              "unstructured": "Suchman, L. (1994): Do Categories Have Politics? Computer Supported Cooperative Work, vol. 2,no. 3, pp. 177-190.",
              "journal-title": "Computer Supported Cooperative Work"
            },
            {
              "key": "202240_CR48",
              "volume-title": "The Uses of Argument",
              "year": "1958",
              "unstructured": "Toulmin, S. (ed.) (1958): The Uses of Argument. UK: Cambridge University Press."
            },
            {
              "key": "202240_CR49",
              "unstructured": "Waterman, D.A. (ed.) (1986): A Guide to Expert Systems. Addison-Wesley."
            },
            {
              "key": "202240_CR50",
              "volume-title": "Understanding Computers and Cognition: A New Foundation for Design",
              "author": "T. Winograd",
              "year": "1986",
              "unstructured": "Winograd, T. and F. Flores (1986): Understanding Computers and Cognition: A New Foundation for Design. Norwood, NJ: Ablex Publishing Corporation."
            },
            {
              "issue": "3",
              "key": "202240_CR51",
              "doi-asserted-by": "crossref",
              "first-page": "191",
              "DOI": "10.1007/BF00749016",
              "volume": "2",
              "author": "T. Winograd",
              "year": "1994",
              "unstructured": "Winograd, T. (1994): Categories, Disciplines, and Coordination? Computer Supported Cooperative Work, vol. 2,no. 3, pp. 191-197.",
              "journal-title": "Computer Supported Cooperative Work"
            }
          ],
          "container-title": "Computer Supported Cooperative Work (CSCW)",
          "original-title": [],
          "language": "en",
          "link": [
            {
              "URL": "http://link.springer.com/content/pdf/10.1023/A:1008716330212",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2020,
                2,
                5
              ]
            ],
            "date-time": "2020-02-05T20:59:28Z",
            "timestamp": 1580936368000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "http://link.springer.com/10.1023/A:1008716330212"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                1999,
                12
              ]
            ]
          },
          "references-count": 51,
          "journal-issue": {
            "issue": "4",
            "published-print": {
              "date-parts": [
                [
                  1999,
                  12
                ]
              ]
            }
          },
          "alternative-id": [
            "202240"
          ],
          "URL": "http://dx.doi.org/10.1023/A:1008716330212",
          "relation": {},
          "ISSN": [
            "0925-9724",
            "1573-7551"
          ],
          "subject": [
            "General Computer Science"
          ],
          "container-title-short": "Computer Supported Cooperative Work (CSCW)",
          "published": {
            "date-parts": [
              [
                1999,
                12
              ]
            ]
          },
          "id": "doi:10.1023/A:1008716330212"
        },
        {
          "author": [
            {
              "given": "Tijs",
              "family": "Storm",
              "non-dropping-particle": "van der"
            },
            {
              "given": "Felienne",
              "family": "Hermans"
            }
          ],
          "type": "manuscript",
          "id": "live-literals",
          "citation-key": "live-literals",
          "issued": {
            "date-parts": [
              [
                2016
              ]
            ]
          },
          "note": "Presented at the Workshop on Live Programming (LIVE) 2016",
          "title": "Live Literals",
          "URL": "https://homepages.cwi.nl/~storm/livelit/livelit.html"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                15
              ]
            ],
            "date-time": "2023-03-15T17:36:46Z",
            "timestamp": 1678901806044
          },
          "reference-count": 17,
          "publisher": "Elsevier BV",
          "issue": "2",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    1990,
                    6,
                    1
                  ]
                ],
                "date-time": "1990-06-01T00:00:00Z",
                "timestamp": 644198400000
              },
              "content-version": "tdm",
              "delay-in-days": 0,
              "URL": "https://www.elsevier.com/tdm/userlicense/1.0/"
            }
          ],
          "content-domain": {
            "domain": [],
            "crossmark-restriction": false
          },
          "published-print": {
            "date-parts": [
              [
                1990,
                6
              ]
            ]
          },
          "DOI": "10.1016/s1045-926x(05)80012-6",
          "type": "journal-article",
          "created": {
            "date-parts": [
              [
                2006,
                12,
                20
              ]
            ],
            "date-time": "2006-12-20T15:12:23Z",
            "timestamp": 1166627543000
          },
          "page": "127-139",
          "source": "Crossref",
          "is-referenced-by-count": 125,
          "title": "VIVA: A visual language for image processing",
          "prefix": "10.1016",
          "volume": "1",
          "author": [
            {
              "given": "Steven L.",
              "family": "Tanimoto",
              "sequence": "first",
              "affiliation": []
            }
          ],
          "member": "78",
          "reference": [
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib1",
              "series-title": "Proceeding Second International Workshop on Visual Languages",
              "first-page": "138",
              "article-title": "The PyramidCalc system for research in pyramid machine algorithms",
              "author": "Blanford",
              "year": "1986"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib2",
              "article-title": "ThingLab: A constraint-oriented simulation laboratory",
              "author": "Borning",
              "year": "1979"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib3",
              "series-title": "Computer Graphics: SIGGRAPH '84 Conference Proceedings",
              "first-page": "177",
              "article-title": "A system for algorithm animation",
              "author": "Brown",
              "year": "1984"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib4",
              "series-title": "Visual Languages",
              "author": "Chang",
              "year": "1986"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib5",
              "article-title": "MAC: A programming language for asynchronous image processing",
              "author": "Douglass",
              "year": "1981"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib6",
              "doi-asserted-by": "crossref",
              "first-page": "7",
              "DOI": "10.1109/MC.1984.1658997",
              "article-title": "Pict: an interactive graphical programming environment",
              "author": "Glinert",
              "year": "1984",
              "journal-title": "IEEE Computer"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib7",
              "first-page": "187",
              "article-title": "Programming by rehearsal",
              "volume": "9",
              "author": "Gould",
              "year": "1984",
              "journal-title": "Byte"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib8",
              "series-title": "Proceedings of the 1987 Workshop on Visual Languages",
              "first-page": "305",
              "article-title": "HI-VISUAL iconic programming",
              "author": "Hirakawa",
              "year": "1987"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib9",
              "article-title": "A visual language for keyboardless programming",
              "author": "Kimura",
              "year": "1986"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib10",
              "doi-asserted-by": "crossref",
              "first-page": "97",
              "DOI": "10.1016/S1045-926X(05)80036-9",
              "article-title": "Taxonomies of visual programming and program visualization",
              "author": "Myers",
              "year": "1990",
              "journal-title": "Journal of Visual Languages and Computing"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib11",
              "author": "National Instruments",
              "year": "1987"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib12",
              "doi-asserted-by": "crossref",
              "first-page": "38",
              "DOI": "10.1109/MC.1985.1662974",
              "article-title": "FORMAL: A forms-oriented visually directed application development system",
              "author": "Shu",
              "year": "1985",
              "journal-title": "IEEE Computer"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib13",
              "author": "Shu",
              "year": "1988"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib14",
              "series-title": "Proceedings of the 1988 Workshop on Visual Languages",
              "first-page": "109",
              "article-title": "Visual programming in the Interface Construction Set",
              "author": "Smith",
              "year": "1988"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib15",
              "series-title": "AVS-The application visualization system",
              "author": "Stardent Computer Inc.",
              "year": "1990"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib16",
              "series-title": "Visual Languages",
              "first-page": "191",
              "article-title": "PLAY: An iconic programming system for children",
              "author": "Tanimoto",
              "year": "1986"
            },
            {
              "key": "10.1016/S1045-926X(05)80012-6_bib17",
              "doi-asserted-by": "crossref",
              "first-page": "30",
              "DOI": "10.1109/38.31462",
              "article-title": "The Application Visualization System: A computational environment for scientific visualization",
              "author": "Upson",
              "year": "1989",
              "journal-title": "IEEE Computer Graphics and Applications"
            }
          ],
          "container-title": "Journal of Visual Languages &amp; Computing",
          "original-title": [],
          "language": "en",
          "link": [
            {
              "URL": "https://api.elsevier.com/content/article/PII:S1045926X05800126?httpAccept=text/xml",
              "content-type": "text/xml",
              "content-version": "vor",
              "intended-application": "text-mining"
            },
            {
              "URL": "https://api.elsevier.com/content/article/PII:S1045926X05800126?httpAccept=text/plain",
              "content-type": "text/plain",
              "content-version": "vor",
              "intended-application": "text-mining"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2021,
                1,
                29
              ]
            ],
            "date-time": "2021-01-29T15:24:24Z",
            "timestamp": 1611933864000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://linkinghub.elsevier.com/retrieve/pii/S1045926X05800126"
            }
          },
          "subtitle": [],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                1990,
                6
              ]
            ]
          },
          "references-count": 17,
          "journal-issue": {
            "issue": "2",
            "published-print": {
              "date-parts": [
                [
                  1990,
                  6
                ]
              ]
            }
          },
          "alternative-id": [
            "S1045926X05800126"
          ],
          "URL": "http://dx.doi.org/10.1016/S1045-926X(05)80012-6",
          "relation": {},
          "ISSN": [
            "1045-926X"
          ],
          "subject": [
            "Computer Science Applications",
            "Human-Computer Interaction",
            "Language and Linguistics"
          ],
          "container-title-short": "Journal of Visual Languages &amp; Computing",
          "published": {
            "date-parts": [
              [
                1990,
                6
              ]
            ]
          },
          "id": "doi:10.1016/S1045-926X(05)80012-6"
        },
        {
          "number-of-pages": "4",
          "abstract": "Liveness in programming environments generally refers to the ability to modify a running program. Liveness is one form of a more general class of behaviors by a programming environment that provide information to programmers about what they are constructing. This paper gives a brief historical perspective on liveness and proposes an extension of a hierarchy given in 1990, to now account for even more powerful execution-oriented tools for programmers. In addition, while liveness concerns the timeliness of execution feedback, considering a broader array of forms of feedback is helpful both in better understanding liveness and in designing ever more powerful development tools.",
          "author": [
            {
              "given": "Steven L.",
              "family": "Tanimoto"
            }
          ],
          "container-title": "Proceedings of the 1st International Workshop on Live Programming",
          "collection-title": "LIVE '13",
          "DOI": "10.1109/LIVE.2013.6617346",
          "type": "paper-conference",
          "id": "Tanimoto:2013:PEL",
          "citation-key": "Tanimoto:2013:PEL",
          "ISBN": "978-1-4673-6265-8",
          "issued": {
            "date-parts": [
              [
                2013
              ]
            ]
          },
          "keyword": "Analysis Discussion LiveProgramming PositionPaper Requirements",
          "page": "31-34",
          "publisher-place": "San Francisco, California",
          "publisher": "IEEE Press",
          "title": "A Perspective on the Evolution of Live Programming"
        },
        {
          "author": [
            {
              "given": "Bret",
              "family": "Victor"
            }
          ],
          "type": "manuscript",
          "id": "inventing-on-principle",
          "citation-key": "inventing-on-principle",
          "issued": {
            "date-parts": [
              [
                2012
              ]
            ]
          },
          "note": "Presented at the the Canadian University Software Engineering Conference (CUSEC)",
          "title": "Inventing on Principle",
          "URL": "https://vimeo.com/36579366"
        },
        {
          "author": [
            {
              "given": "Bret",
              "family": "Victor"
            }
          ],
          "type": "webpage",
          "id": "learnable-programming",
          "citation-key": "learnable-programming",
          "issued": {
            "date-parts": [
              [
                2012
              ]
            ]
          },
          "title": "Learnable Programming",
          "URL": "http://worrydream.com/LearnableProgramming/"
        },
        {
          "author": [
            {
              "family": "Wikipedia contributors"
            }
          ],
          "type": "document",
          "id": "wikipedia-grafting",
          "citation-key": "wikipedia-grafting",
          "issued": {
            "date-parts": [
              [
                2022
              ]
            ]
          },
          "note": "[Online; accessed 01-September-2022]",
          "title": "Grafting — Wikipedia, The Free Encyclopedia",
          "URL": "https://en.wikipedia.org/w/index.php?title=Grafting&oldid=1095365064"
        },
        {
          "indexed": {
            "date-parts": [
              [
                2023,
                3,
                29
              ]
            ],
            "date-time": "2023-03-29T16:07:47Z",
            "timestamp": 1680106067605
          },
          "publisher-location": "New York, NY, USA",
          "reference-count": 41,
          "publisher": "ACM",
          "license": [
            {
              "start": {
                "date-parts": [
                  [
                    2017,
                    5,
                    2
                  ]
                ],
                "date-time": "2017-05-02T00:00:00Z",
                "timestamp": 1493683200000
              },
              "content-version": "vor",
              "delay-in-days": 0,
              "URL": "http://www.acm.org/publications/policies/copyright_policy#Background"
            }
          ],
          "funder": [
            {
              "name": "DARPA AFRL, prime",
              "award": [
                "K000886-00-S06"
              ]
            }
          ],
          "content-domain": {
            "domain": [
              "dl.acm.org"
            ],
            "crossmark-restriction": true
          },
          "published-print": {
            "date-parts": [
              [
                2017,
                5,
                2
              ]
            ]
          },
          "DOI": "10.1145/3025453.3025768",
          "type": "proceedings-article",
          "created": {
            "date-parts": [
              [
                2017,
                5,
                2
              ]
            ],
            "date-time": "2017-05-02T18:37:22Z",
            "timestamp": 1493750242000
          },
          "update-policy": "http://dx.doi.org/10.1145/crossmark-policy",
          "source": "Crossref",
          "is-referenced-by-count": 135,
          "title": "Voyager 2",
          "prefix": "10.1145",
          "author": [
            {
              "given": "Kanit",
              "family": "Wongsuphasawat",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Zening",
              "family": "Qu",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Dominik",
              "family": "Moritz",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Riley",
              "family": "Chang",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Felix",
              "family": "Ouk",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Anushka",
              "family": "Anand",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tableau Research, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Jock",
              "family": "Mackinlay",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tableau Software, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Bill",
              "family": "Howe",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Jeffrey",
              "family": "Heer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            }
          ],
          "member": "320",
          "published-online": {
            "date-parts": [
              [
                2017,
                5,
                2
              ]
            ]
          },
          "reference": [
            {
              "key": "e_1_3_2_2_1_1",
              "first-page": "669",
              "article-title": "Automatic Selection of Partitioning Variables for Small Multiple Displays. IEEE Transactions on Visualization and Computer Graphics (Proc",
              "volume": "22",
              "author": "Anand Anushka",
              "year": "2016",
              "unstructured": "Anushka Anand and Justin Talbot . 2016 . Automatic Selection of Partitioning Variables for Small Multiple Displays. IEEE Transactions on Visualization and Computer Graphics (Proc . InfoVis) 22 , 1 (2016), 669 -- 677 . Anushka Anand and Justin Talbot. 2016. Automatic Selection of Partitioning Variables for Small Multiple Displays. IEEE Transactions on Visualization and Computer Graphics (Proc. InfoVis) 22, 1 (2016), 669--677.",
              "journal-title": "InfoVis)"
            },
            {
              "key": "e_1_3_2_2_2_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1016/j.jml.2012.11.001"
            },
            {
              "key": "e_1_3_2_2_3_1",
              "volume-title": "Semiology of graphics: diagrams, networks, maps",
              "author": "Bertin Jacques",
              "unstructured": "Jacques Bertin . 1983. Semiology of graphics: diagrams, networks, maps . University of Wisconsin press. Jacques Bertin. 1983. Semiology of graphics: diagrams, networks, maps. University of Wisconsin press."
            },
            {
              "key": "e_1_3_2_2_4_1",
              "first-page": "2203",
              "article-title": "Quality metrics in high-dimensional data visualization: an overview and systematization. IEEE Transactions on Visualization and Computer Graphics (Proc",
              "volume": "17",
              "author": "Bertini Enrico",
              "year": "2011",
              "unstructured": "Enrico Bertini , Andrada Tatu , and Daniel Keim . 2011 . Quality metrics in high-dimensional data visualization: an overview and systematization. IEEE Transactions on Visualization and Computer Graphics (Proc . InfoVis) 17 , 12 (2011), 2203 -- 2212 . Enrico Bertini, Andrada Tatu, and Daniel Keim. 2011. Quality metrics in high-dimensional data visualization: an overview and systematization. IEEE Transactions on Visualization and Computer Graphics (Proc. InfoVis) 17, 12 (2011), 2203--2212.",
              "journal-title": "InfoVis)"
            },
            {
              "key": "e_1_3_2_2_5_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2011.185"
            },
            {
              "key": "e_1_3_2_2_6_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/108360.108361"
            },
            {
              "key": "e_1_3_2_2_7_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1080/01621459.1984.10478080"
            },
            {
              "key": "e_1_3_2_2_8_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1502650.1502695"
            },
            {
              "key": "e_1_3_2_2_9_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2470654.2470718"
            },
            {
              "key": "e_1_3_2_2_10_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2133806.2133821"
            },
            {
              "key": "e_1_3_2_2_11_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1007/978-3-540-70956-5_5"
            },
            {
              "key": "e_1_3_2_2_12_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/963770.963772"
            },
            {
              "key": "e_1_3_2_2_13_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2207676.2208591"
            },
            {
              "key": "e_1_3_2_2_14_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/22949.22950"
            },
            {
              "key": "e_1_3_2_2_15_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/TVCG.2007.70594"
            },
            {
              "key": "e_1_3_2_2_16_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/1121949.1121979"
            },
            {
              "key": "e_1_3_2_2_17_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/258734.258887"
            },
            {
              "key": "e_1_3_2_2_18_1",
              "volume-title": "McCabe",
              "author": "Moore David S.",
              "year": "1989",
              "unstructured": "David S. Moore and George P . McCabe . 1989 . Introduction to the Practice of Statistics. WH Freeman/Times Books/Henry Holt & Co. David S. Moore and George P. McCabe. 1989. Introduction to the Practice of Statistics. WH Freeman/Times Books/Henry Holt & Co."
            },
            {
              "key": "e_1_3_2_2_19_1",
              "volume-title": "Proc. iSchool Conference.",
              "author": "Perry Daniel B.",
              "year": "2013",
              "unstructured": "Daniel B. Perry , Bill Howe , Alicia M.F. Key , and Cecilia Aragon . 2013 . VizDeck: Streamlining exploratory visual analytics of scientific data . In Proc. iSchool Conference. Daniel B. Perry, Bill Howe, Alicia M.F. Key, and Cecilia Aragon. 2013. VizDeck: Streamlining exploratory visual analytics of scientific data. In Proc. iSchool Conference."
            },
            {
              "key": "e_1_3_2_2_20_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2993901.2993910"
            },
            {
              "key": "e_1_3_2_2_21_1",
              "volume-title": "ASA Data Exposition Dataset. (1983",
              "author": "Ramos Ernesto",
              "year": "1983",
              "unstructured": "Ernesto Ramos and David Donoho . 1983 . ASA Data Exposition Dataset. (1983 ). http://stat-computing.org/dataexpo/1983.html. Ernesto Ramos and David Donoho. 1983. ASA Data Exposition Dataset. (1983). http://stat-computing.org/dataexpo/1983.html."
            },
            {
              "key": "e_1_3_2_2_22_1",
              "volume-title": "Peter Van Beek, and Toby Walsh",
              "author": "Rossi Francesca",
              "year": "2006",
              "unstructured": "Francesca Rossi , Peter Van Beek, and Toby Walsh . 2006 . Handbook of constraint programming. Elsevier . Francesca Rossi, Peter Van Beek, and Toby Walsh. 2006. Handbook of constraint programming. Elsevier."
            },
            {
              "key": "e_1_3_2_2_23_1",
              "volume-title": "Proc. ACM Human Factors in Computing Systems (CHI). ACM, 112--117",
              "author": "Roth Steven F.",
              "year": "1994",
              "unstructured": "Steven F. Roth , John Kolojejchick , Joe Mattis , and Jade Goldstein . 1994 . Interactive graphic design using automatic presentation knowledge . In Proc. ACM Human Factors in Computing Systems (CHI). ACM, 112--117 . Steven F. Roth, John Kolojejchick, Joe Mattis, and Jade Goldstein. 1994. Interactive graphic design using automatic presentation knowledge. In Proc. ACM Human Factors in Computing Systems (CHI). ACM, 112--117."
            },
            {
              "key": "e_1_3_2_2_24_1",
              "volume-title": "Vega-Lite: A Grammar of Interactive Graphics",
              "author": "Satyanarayan Arvind",
              "year": "2017",
              "unstructured": "Arvind Satyanarayan , Dominik Moritz , Kanit Wongsuphasawat , and Jeffrey Heer . 2017. Vega-Lite: A Grammar of Interactive Graphics . IEEE Trans. Visualization & Comp. Graphics (Proc. InfoVis) ( 2017 ). http://idl.cs.washington.edu/papers/vega-lite. Arvind Satyanarayan, Dominik Moritz, Kanit Wongsuphasawat, and Jeffrey Heer. 2017. Vega-Lite: A Grammar of Interactive Graphics. IEEE Trans. Visualization & Comp. Graphics (Proc. InfoVis) (2017). http://idl.cs.washington.edu/papers/vega-lite."
            },
            {
              "key": "e_1_3_2_2_25_1",
              "volume-title": "Reactive Vega: A Streaming Dataflow Architecture for Declarative Interactive Visualization",
              "author": "Satyanarayan Arvind",
              "year": "2016",
              "unstructured": "Arvind Satyanarayan , Ryan Russell , Jane Hoffswell , and Jeffrey Heer . 2016 . Reactive Vega: A Streaming Dataflow Architecture for Declarative Interactive Visualization . IEEE Trans. Visualization & Comp. Graphics (Proc. InfoVis) ( 2016). http://idl.cs.washington.edu/papers/ reactive-vega-architecture. Arvind Satyanarayan, Ryan Russell, Jane Hoffswell, and Jeffrey Heer. 2016. Reactive Vega: A Streaming Dataflow Architecture for Declarative Interactive Visualization. IEEE Trans. Visualization & Comp. Graphics (Proc. InfoVis) (2016). http://idl.cs.washington.edu/papers/ reactive-vega-architecture."
            },
            {
              "key": "e_1_3_2_2_26_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1057/palgrave.ivs.9500091"
            },
            {
              "key": "e_1_3_2_2_27_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/52.329404"
            },
            {
              "key": "e_1_3_2_2_28_1",
              "volume-title": "International Conference on Very Large Data Bases (VLDB)",
              "author": "Siddiqui Tarique",
              "year": "2017",
              "unstructured": "Tarique Siddiqui , Albert Kim , John Lee , Karrie Karahalios , and Aditya Parameswaran . 2017 . Effortless Data Exploration with zenvisage: An Expressive and Interactive Visual Analytics System . International Conference on Very Large Data Bases (VLDB) (2017). Tarique Siddiqui, Albert Kim, John Lee, Karrie Karahalios, and Aditya Parameswaran. 2017. Effortless Data Exploration with zenvisage: An Expressive and Interactive Visual Analytics System. International Conference on Very Large Data Bases (VLDB) (2017)."
            },
            {
              "key": "e_1_3_2_2_29_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/2945.981851"
            },
            {
              "key": "e_1_3_2_2_30_1",
              "first-page": "32",
              "article-title": "Exploratory data analysis",
              "volume": "231",
              "author": "Tukey John W.",
              "year": "1977",
              "unstructured": "John W. Tukey . 1977 . Exploratory data analysis . Reading, Ma 231 (1977), 32 . John W. Tukey. 1977. Exploratory data analysis. Reading, Ma 231 (1977), 32.",
              "journal-title": "Reading, Ma"
            },
            {
              "key": "e_1_3_2_2_31_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1111/cgf.12106"
            },
            {
              "key": "e_1_3_2_2_32_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.14778/2733004.2733035"
            },
            {
              "key": "e_1_3_2_2_33_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.2200/S00174ED1V01Y200901ICR003"
            },
            {
              "key": "e_1_3_2_2_34_1",
              "volume-title": "ggplot2: Elegant Graphics for Data Analysis",
              "author": "Wickham Hadley",
              "unstructured": "Hadley Wickham . 2009. ggplot2: Elegant Graphics for Data Analysis . Springer . Hadley Wickham. 2009. ggplot2: Elegant Graphics for Data Analysis. Springer."
            },
            {
              "key": "e_1_3_2_2_35_1",
              "volume-title": "The Grammar of Graphics",
              "author": "Wilkinson Leland",
              "unstructured": "Leland Wilkinson . 2005. The Grammar of Graphics . Springer . Leland Wilkinson. 2005. The Grammar of Graphics. Springer."
            },
            {
              "key": "e_1_3_2_2_36_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1109/INFVIS.2005.1532142"
            },
            {
              "key": "e_1_3_2_2_37_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1057/ivs.2008.27"
            },
            {
              "key": "e_1_3_2_2_38_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/2939502.2939506"
            },
            {
              "key": "e_1_3_2_2_39_1",
              "volume-title": "Voyager: Exploratory Analysis via Faceted Browsing of Visualization Recommendations",
              "author": "Wongsuphasawat Kanit",
              "year": "2016",
              "unstructured": "Kanit Wongsuphasawat , Dominik Moritz , Anushka Anand , Jock Mackinlay , Bill Howe , and Jeffrey Heer . 2016 b. Voyager: Exploratory Analysis via Faceted Browsing of Visualization Recommendations . IEEE Trans. Visualization & Comp. Graphics (Proc. InfoVis) ( 2016). http://idl.cs.washington.edu/papers/voyager. Kanit Wongsuphasawat, Dominik Moritz, Anushka Anand, Jock Mackinlay, Bill Howe, and Jeffrey Heer. 2016b. Voyager: Exploratory Analysis via Faceted Browsing of Visualization Recommendations. IEEE Trans. Visualization & Comp. Graphics (Proc. InfoVis) (2016). http://idl.cs.washington.edu/papers/voyager."
            },
            {
              "key": "e_1_3_2_2_40_1",
              "doi-asserted-by": "publisher",
              "DOI": "10.1145/642611.642681"
            },
            {
              "key": "e_1_3_2_2_41_1",
              "first-page": "65",
              "article-title": "Automated generation of graphic sketches by example",
              "volume": "3",
              "author": "Zhou Michelle X.",
              "year": "2003",
              "unstructured": "Michelle X. Zhou and Min Chen . 2003 . Automated generation of graphic sketches by example . In IJCAI , Vol. 3. 65 -- 71 . Michelle X. Zhou and Min Chen. 2003. Automated generation of graphic sketches by example. In IJCAI, Vol. 3. 65--71.",
              "journal-title": "IJCAI"
            }
          ],
          "event": "CHI '17: CHI Conference on Human Factors in Computing Systems",
          "container-title": "Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems",
          "original-title": [],
          "link": [
            {
              "URL": "https://dl.acm.org/doi/pdf/10.1145/3025453.3025768",
              "content-type": "unspecified",
              "content-version": "vor",
              "intended-application": "similarity-checking"
            }
          ],
          "deposited": {
            "date-parts": [
              [
                2023,
                1,
                8
              ]
            ],
            "date-time": "2023-01-08T00:44:30Z",
            "timestamp": 1673138670000
          },
          "score": 1,
          "resource": {
            "primary": {
              "URL": "https://dl.acm.org/doi/10.1145/3025453.3025768"
            }
          },
          "subtitle": [
            "Augmenting Visual Analysis with Partial View Specifications"
          ],
          "short-title": [],
          "issued": {
            "date-parts": [
              [
                2017,
                5,
                2
              ]
            ]
          },
          "references-count": 41,
          "alternative-id": [
            "10.1145/3025453.3025768",
            "10.1145/3025453"
          ],
          "URL": "http://dx.doi.org/10.1145/3025453.3025768",
          "relation": {},
          "published": {
            "date-parts": [
              [
                2017,
                5,
                2
              ]
            ]
          },
          "assertion": [
            {
              "value": "2017-05-02",
              "order": 2,
              "name": "published",
              "label": "Published",
              "group": {
                "name": "publication_history",
                "label": "Publication History"
              }
            }
          ],
          "id": "doi:10.1145/3025453.3025768"
        }
      ],
      "data": [
        {
          "id": "doi:10.1145/3428290",
          "doi": "10.1145/3428290",
          "s2id": "12243d14abcafac95103ff4d2ea5e030f2ee8eb3",
          "year": 2020,
          "author": [
            {
              "ORCID": "http://orcid.org/0000-0002-6179-7784",
              "authenticated-orcid": false,
              "given": "Leif",
              "family": "Andersen",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Northeastern University, USA"
                }
              ]
            },
            {
              "given": "Michael",
              "family": "Ballantyne",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Northeastern University, USA"
                }
              ]
            },
            {
              "given": "Matthias",
              "family": "Felleisen",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Northeastern University, USA"
                }
              ]
            }
          ],
          "title": "Adding interactive visual syntax to textual code: ",
          "venue": "Proceedings of the ACM on Programming Languages",
          "url": "https://www.semanticscholar.org/paper/12243d14abcafac95103ff4d2ea5e030f2ee8eb3",
          "abstract": "Many programming problems call for turning geometrical thoughts into code: tables, hierarchical structures, nests of objects, trees, forests, graphs, and so on. Linear text does not do justice to such thoughts. But, it has been the dominant programming medium for the past and will remain so for the foreseeable future. This paper proposes a novel mechanism for conveniently extending textual programming languages with problem-specific visual syntax. It argues the necessity of this language feature, demonstrates the feasibility with a robust prototype, and sketches a design plan for adapting the idea to other languages.",
          "tldr": "This paper proposes a novel mechanism for conveniently extending textual programming languages with problem-specific visual syntax, and argues the necessity of this language feature, demonstrates the feasibility with a robust prototype, and sketches a design plan for adapting the idea to other languages."
        },
        {
          "id": "swift-playgrounds",
          "year": 2014,
          "author": [
            {
              "family": "Apple Inc."
            }
          ],
          "title": "WWDC 2014",
          "url": "https://www.youtube.com/watch?v=w87fOAG8fjk"
        },
        {
          "id": "bootstrap",
          "year": 2022,
          "author": [
            {
              "family": "Bootstrap"
            }
          ],
          "title": "Bootstrap",
          "url": "https://bootstrapworld.org/index.shtml"
        },
        {
          "id": "doi:10.1184/R1/6714389.V1",
          "doi": "10.1184/R1/6714389.V1",
          "s2id": "9d99869f5a7845e81884ef4f425bbbf16364b962",
          "year": 2016,
          "author": [
            {
              "family": "Chang",
              "given": "Kerry Shih-Ping"
            }
          ],
          "title": "A Spreadsheet Model for Using Web Services and Creating Data-Driven Applications",
          "venue": "Carnegie Mellon University",
          "url": "https://www.semanticscholar.org/paper/9d99869f5a7845e81884ef4f425bbbf16364b962",
          "abstract": "iii Acknowledgements iv Table Of"
        },
        {
          "id": "cuttle",
          "year": 2022,
          "author": [
            {
              "family": "Cuttle Labs Inc."
            }
          ],
          "title": "Cuttle - Design tool for digital cutting machines",
          "url": "https://cuttle.xyz/"
        },
        {
          "id": "doi:10.1145/1052883.1052894",
          "doi": "10.1145/1052883.1052894",
          "s2id": "5d072e2a26997eb0c966f9a31f038baca00101f3",
          "year": 2004,
          "author": [
            {
              "given": "Jonathan",
              "family": "Edwards",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "MIT CSAIL, Cambridge, MA"
                }
              ]
            }
          ],
          "title": "Example centric programming: ",
          "venue": "ACM SIGPLAN Notices",
          "url": "https://www.semanticscholar.org/paper/5d072e2a26997eb0c966f9a31f038baca00101f3",
          "abstract": "Programmers tend to understand programs by thinking of concrete examples. Example Centric Programming seeks to add IDE support for examples throughout the process of programming. Instead of programmers interpreting examples in their head, the examples are written down and the IDE interprets them automatically. Advanced UI techniques are used to present the results closely integrated with the code. Traditionally distinct programming tools (the editor, Read-Eval-Print-Loop, debugger, and test runner) are unified into a single tool that might be called an example-enlightened editor. This is expected to benefit a wide spectrum of programming activities, for both novice and experienced programmers. Some novel methods for testing and development are made possible. In the longer term, example centrism has implications for the design of future programming languages. A prototype has been implemented for Java in Eclipse.",
          "tldr": "Examples Centric Programming seeks to add IDE support for examples throughout the process of programming, instead of programmers interpreting examples in their head, the examples are written down and the IDE interprets them automatically."
        },
        {
          "id": "doi:10.1145/1094811.1094851",
          "doi": "10.1145/1094811.1094851",
          "s2id": "fd192eee394577fb6a2a6a8a59cdab85a40faaa5",
          "year": 2005,
          "author": [
            {
              "given": "Jonathan",
              "family": "Edwards",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "MIT CSAIL, Cambridge, MA"
                }
              ]
            }
          ],
          "title": "Subtext: uncovering the simplicity of programming",
          "venue": "Proceedings of the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications",
          "url": "https://www.semanticscholar.org/paper/fd192eee394577fb6a2a6a8a59cdab85a40faaa5",
          "abstract": "Representing programs as text strings makes programming harder then it has to be. The source text of a program is far removed from its behavior. Bridging this conceptual gulf is what makes programming so inhumanly difficult -- we are not compilers. Subtext is a new medium in which the representation of a program is the same thing as its execution. Like a spreadsheet, a program is visible and alive, constantly executing even as it is edited. Program edits are coherent semantic transformations.The essence of this new medium is copying. Programs are constructed by copying and executed by copy flow: the projection of changes through copies. The simple idea of copying develops into a rich theory of higher-order continual copying of trees. Notably absent are symbolic names, the workhorse of textual notation, replaced by immediately-bound explicit relationships. Subtext unifies traditionally distinct programming tools and concepts, and enables some novel ones. Ancestral structures are a new primitive data type that combines the features of lists and records, along with unproblematic multiple inheritance. Adaptive conditionals use first-class program edits to dynamically adapt behavior.A prototype implementation shows promise, but calls for much further research. Subtext suggests that we can make programming radically easier, if we are willing to be radical.",
          "tldr": "Subtext is a new medium in which the representation of a program is the same thing as its execution, and unifies traditionally distinct programming tools and concepts, and enables some novel ones."
        },
        {
          "id": "image-based",
          "year": 2021,
          "author": [
            {
              "given": "Jonathan",
              "family": "Edwards"
            },
            {
              "given": "Tomas",
              "family": "Petricek"
            }
          ],
          "title": "Typed Image-based Programming with Structure Editing",
          "url": "https://arxiv.org/abs/2110.08993"
        },
        {
          "id": "Ellis1969THEGP",
          "year": 1969,
          "author": [
            {
              "given": "T. O.",
              "family": "Ellis"
            },
            {
              "given": "John F.",
              "family": "Heafner"
            },
            {
              "given": "William L.",
              "family": "Sibley"
            }
          ],
          "title": "THE GRAIL PROJECT: AN EXPERIMENT IN MAN-MACHINE COMMUNICATIONS",
          "url": "https://www.rand.org/pubs/research_memoranda/RM5999.html"
        },
        {
          "id": "doi:10.7249/RM6001",
          "doi": "10.7249/rm6001",
          "s2id": "16324e5441150915489e698f3671498da24198d9",
          "year": 1969,
          "author": [
            {
              "given": "T.",
              "family": "Ellis",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "J.",
              "family": "Heafner",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "W.",
              "family": "Sibley",
              "sequence": "first",
              "affiliation": []
            }
          ],
          "title": "The GRAIL Language and Operations: ",
          "venue": [],
          "url": "https://www.semanticscholar.org/paper/16324e5441150915489e698f3671498da24198d9",
          "abstract": "Abstract : The important organizational concepts of the flowchart language are the sequential flow of control, the hierarchy of subroutines, and the language (flow diagrams) that pictorially relates their interdependence. A fundamental facility of the man-machine interface is the automatic recognition of appropriate symbols, which allows the man to print or draw appropriate symbols freehand. GRAIL's text-editing features include placement, replacement, and deletion of characters, character-string insertion of deletion, and line deletion. Control functions include displaying text page-by-page, requesting specified display frames, moving symbols, and text line editing. The flowchart processes may be compiled and executed at CPU speeds or the man may control interpretative execution by direct stylus actions. He may use overlay displays or split screen displays to debug. This is the second part of a final report on GRAIL.",
          "tldr": "GRAIL's text-editing features include placement, replacement, and deletion of characters, character-string insertion of deletion, and line deletion, while control functions include displaying text page-by-page, requesting specified display frames, moving symbols, and text line editing."
        },
        {
          "id": "enso",
          "year": 2022,
          "author": [
            {
              "family": "Enso"
            }
          ],
          "title": "Enso",
          "url": "https://enso.org/"
        },
        {
          "id": "doi:10.1145/3379337.3415869",
          "doi": "10.1145/3379337.3415869",
          "s2id": "cb7ecee937f3aed98a9ce50e0881e43a60270466",
          "year": 2020,
          "author": [
            {
              "given": "Kasra",
              "family": "Ferdowsifard",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Allen",
              "family": "Ordookhanians",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Hila",
              "family": "Peleg",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Sorin",
              "family": "Lerner",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            },
            {
              "given": "Nadia",
              "family": "Polikarpova",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            }
          ],
          "title": "Small-Step Live Programming by Example: ",
          "venue": "Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology",
          "url": "https://www.semanticscholar.org/paper/cb7ecee937f3aed98a9ce50e0881e43a60270466",
          "abstract": "Live programming is a paradigm in which the programming environment continually displays runtime values. Program synthesis is a technique that can generate programs or program snippets from examples. \\deltextThis paper presents a new programming paradigm called Synthesis-Aided Live Programming that combines these two prior ideas in a synergistic way. When using Synthesis-Aided Live Programming, programmers can change the runtime values displayed by the live \\addtextPrevious works that combine the two have taken a holistic approach to the way examples describe the behavior of functions and programs. This paper presents a new programming paradigm called Small-Step Live Programming by Example that lets the user apply Programming by Example locally. When using Small-Step Live Programming by Example, programmers can change the runtime values displayed by the live visualization to generate local program snippets. % Live programming and program % synthesis work perfectly together because the live programming environment % reifies values, which makes it easy for programmers to provide the examples % needed by the synthesizer. We implemented this new paradigm in a tool called \\toolname, and performed a user study on $13$ programmers. Our study finds that Small-Step Live Programming by Example with \\toolname helps users solve harder problems faster, and that for certain types of queries, users prefer it to searching the web. Additionally, we identify the \\usersynthgap, in which users' mental models of the tool do not match its ability, and needs to be taken into account in the design of future synthesis tools.",
          "tldr": "This study finds that Small-Step Live Programming by Example with \\toolname helps users solve harder problems faster, and that for certain types of queries, users prefer it to searching the web."
        },
        {
          "id": "light-table",
          "year": 2022,
          "author": [
            {
              "given": "Chris",
              "family": "Granger"
            }
          ],
          "title": "Light Table",
          "url": "http://lighttable.com/"
        },
        {
          "id": "pane",
          "year": 2018,
          "author": [
            {
              "given": "Joshua",
              "family": "Horowitz"
            }
          ],
          "title": "PANE: Programming with Visible Data",
          "url": "http://joshuahhh.com/projects/pane/"
        },
        {
          "id": "doi:10.1145/2814189.2817268",
          "doi": "10.1145/2814189.2817268",
          "s2id": "dccb116e4f7b2c1cf15be238693415a44a7e3881",
          "year": 2015,
          "author": [
            {
              "given": "Tomoki",
              "family": "Imai",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Tokyo Institute of Technology, Japan"
                }
              ]
            },
            {
              "given": "Hidehiko",
              "family": "Masuhara",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tokyo Institute of Technology, Japan"
                }
              ]
            },
            {
              "given": "Tomoyuki",
              "family": "Aotani",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tokyo Institute of Technology, Japan"
                }
              ]
            }
          ],
          "title": "Shiranui: a live programming with support for unit testing: ",
          "venue": "Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity",
          "url": "https://www.semanticscholar.org/paper/dccb116e4f7b2c1cf15be238693415a44a7e3881",
          "abstract": "Live programming environments help the programmers to try out expressions by giving immediate feedback on the results as well as intermediate evaluation processes. However, the feedback is transient, and its correctness is merely confirmed by the programmers' manual inspection. We seamlessly integrate live programming with unit testing by proposing novel features (1) that converts a lively-tested expression into a unit test case, and (2) that extracts a unit test case from an execution trace of a lively-tested expression. In this poster, we overview Shiranui, our live programming environment, and present the proposed features implemented in Shiranui.",
          "tldr": "This paper seamlessly integrate live programming with unit testing by proposing novel features (1) that converts a lively-tested expression into a unit test case, and (2) that extracts aunit test case from an execution trace of an lively- tested expression."
        },
        {
          "id": "mps",
          "year": 2022,
          "author": [
            {
              "family": "JetBrains s.r.o."
            }
          ],
          "title": "MPS: The Domain-Specific Language Creator by JetBrains",
          "url": "https://www.jetbrains.com/mps/"
        },
        {
          "id": "doi:10.1145/1978942.1979444",
          "doi": "10.1145/1978942.1979444",
          "s2id": "4c67851b77766ba4ad9f1ac0bd4c9491c327574e",
          "year": 2011,
          "author": [
            {
              "given": "Sean",
              "family": "Kandel",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Stanford University, Stanford, California, USA"
                }
              ]
            },
            {
              "given": "Andreas",
              "family": "Paepcke",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Stanford University, Stanford, California, USA"
                }
              ]
            },
            {
              "given": "Joseph",
              "family": "Hellerstein",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of California, Berkeley, Berkeley, California, USA"
                }
              ]
            },
            {
              "given": "Jeffrey",
              "family": "Heer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Stanford University, Stanford, California, USA"
                }
              ]
            }
          ],
          "title": "Wrangler: interactive visual specification of data transformation scripts",
          "venue": "Proceedings of the SIGCHI Conference on Human Factors in Computing Systems",
          "url": "https://www.semanticscholar.org/paper/4c67851b77766ba4ad9f1ac0bd4c9491c327574e",
          "abstract": "Though data analysis tools continue to improve, analysts still expend an inordinate amount of time and effort manipulating data and assessing data quality issues. Such \"data wrangling\" regularly involves reformatting data values or layout, correcting erroneous or missing values, and integrating multiple data sources. These transforms are often difficult to specify and difficult to reuse across analysis tasks, teams, and tools. In response, we introduce Wrangler, an interactive system for creating data transformations. Wrangler combines direct manipulation of visualized data with automatic inference of relevant transforms, enabling analysts to iteratively explore the space of applicable operations and preview their effects. Wrangler leverages semantic data types (e.g., geographic locations, dates, classification codes) to aid validation and type conversion. Interactive histories support review, refinement, and annotation of transformation scripts. User study results show that Wrangler significantly reduces specification time and promotes the use of robust, auditable transforms instead of manual editing.",
          "tldr": "Wrangler combines direct manipulation of visualized data with automatic inference of relevant transforms, enabling analysts to iteratively explore the space of applicable operations and preview their effects."
        },
        {
          "id": "seymour",
          "year": 2017,
          "author": [
            {
              "given": "Saketh",
              "family": "Kasibatla"
            },
            {
              "given": "Alex",
              "family": "Warth"
            }
          ],
          "title": "Seymour: Live Programming for the Classroom",
          "url": "https://harc.github.io/seymour-live2017/"
        },
        {
          "id": "doi:10.1145/3379337.3415842",
          "doi": "10.1145/3379337.3415842",
          "s2id": "21ea5e0048b34ef870c91594581fabd5d98315af",
          "year": 2020,
          "author": [
            {
              "given": "Mary Beth",
              "family": "Kery",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Carnegie Mellon University, Pittsburgh, PA, USA"
                }
              ]
            },
            {
              "given": "Donghao",
              "family": "Ren",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc., Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Fred",
              "family": "Hohman",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Georgia Institute of Technology, Atlanta, GA, USA"
                }
              ]
            },
            {
              "given": "Dominik",
              "family": "Moritz",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc., Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Kanit",
              "family": "Wongsuphasawat",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc., Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Kayur",
              "family": "Patel",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Apple Inc, Seattle, WA, USA"
                }
              ]
            }
          ],
          "title": "mage: Fluid Moves Between Code and Graphical Work in Computational Notebooks: ",
          "venue": "Proceedings of the 33rd Annual ACM Symposium on User Interface Software and Technology",
          "url": "https://www.semanticscholar.org/paper/21ea5e0048b34ef870c91594581fabd5d98315af",
          "abstract": "We aim to increase the flexibility at which a data worker can choose the right tool for the job, regardless of whether the tool is a code library or an interactive graphical user interface (GUI). To achieve this flexibility, we extend computational notebooks with a new API mage, which supports tools that can represent themselves as both code and GUI as needed. We discuss the design of mage as well as design opportunities in the space of flexible code/GUI tools for data work. To understand tooling needs, we conduct a study with nine professional practitioners and elicit their feedback on mage and potential areas for flexible code/GUI tooling. We then implement six client tools for mage that illustrate the main themes of our study findings. Finally, we discuss open challenges in providing flexible code/GUI interactions for data workers.",
          "tldr": "This work extends computational notebooks with a new API mage, which supports tools that can represent themselves as both code and GUI as needed, and implements six client tools for mage that illustrate the main themes of the study findings."
        },
        {
          "id": "DBLP:journals/aim/Lau09",
          "doi": "10.1609/aimag.v30i4.2262",
          "s2id": "37c50b0cc3c701b269c18014dd3a0c07f9c2b4b8",
          "year": 2009,
          "author": [
            {
              "given": "Tessa",
              "family": "Lau"
            }
          ],
          "title": "Why Programming-By-Demonstration Systems Fail: Lessons Learned for Usable AI",
          "venue": "AI Mag.",
          "url": "https://www.semanticscholar.org/paper/37c50b0cc3c701b269c18014dd3a0c07f9c2b4b8",
          "abstract": "Programming by demonstration systems have long attempted to make it possible for people to program computers without writing code. However, while these systems have resulted in many publications in AI venues, none of the technologies have yet achieved widespread.adoption. Usability remains a critical barrier to their success. On the basis of lessons learned from three different programming by demonstration systems, we present a set of guidelines to consider when designing usable AI-based systems.",
          "tldr": "On the basis of lessons learned from three different programming by demonstration systems, a set of guidelines to consider when designing usable AI-based systems is presented."
        },
        {
          "id": "doi:10.1145/3313831.3376494",
          "doi": "10.1145/3313831.3376494",
          "s2id": "57e3ad7c294490947caf75cc19070453019f78f7",
          "year": 2020,
          "author": [
            {
              "given": "Sorin",
              "family": "Lerner",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of California, San Diego, La Jolla, CA, USA"
                }
              ]
            }
          ],
          "title": "Projection Boxes: On-the-fly Reconfigurable Visualization for Live Programming: ",
          "venue": "Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems",
          "url": "https://www.semanticscholar.org/paper/57e3ad7c294490947caf75cc19070453019f78f7",
          "abstract": "Live programming is a regime in which the programming environment provides continual feedback, most often in the form of runtime values. In this paper, we present Projection Boxes, a novel visualization technique for displaying runtime values of programs. The key idea behind projection boxes is to start with a full semantics of the program, and then use projections to pick a subset of the semantics to display. By varying the projection used, projection boxes can encode both previously known visualization techniques, and also new ones. As such, projection boxes provide an expressive and configurable framework for displaying runtime information. Through a user study we demonstrate that (1) users find projection boxes and their configurability useful (2) users are not distracted by the always-on visualization (3) a key driving force behind the need for a configurable visualization for live programming lies with the wide variation in programmer preferences.",
          "tldr": "This paper presents Projection Boxes, a novel visualization technique for displaying runtime values of programs, and demonstrates that users find projection boxes and their configurability useful and users are not distracted by the always-on visualization."
        },
        {
          "id": "doi:10.1145/3173574.3173697",
          "doi": "10.1145/3173574.3173697",
          "s2id": "26d45d8bc58bfb43d3c4603321b8201219a08e32",
          "year": 2018,
          "author": [
            {
              "given": "Zhicheng",
              "family": "Liu",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Adobe Research, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "John",
              "family": "Thompson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Georgia Institute of Technology, Atlanta, GA, USA"
                }
              ]
            },
            {
              "given": "Alan",
              "family": "Wilson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., Lehi, UT, USA"
                }
              ]
            },
            {
              "given": "Mira",
              "family": "Dontcheva",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Research, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "James",
              "family": "Delorey",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., Lehi, UT, USA"
                }
              ]
            },
            {
              "given": "Sam",
              "family": "Grigg",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., Lehi, UT, USA"
                }
              ]
            },
            {
              "given": "Bernard",
              "family": "Kerr",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Adobe Systems Inc., San Francisco, CA, USA"
                }
              ]
            },
            {
              "given": "John",
              "family": "Stasko",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Georgia Institute of Technology, Atlanta, GA, USA"
                }
              ]
            }
          ],
          "title": "Data Illustrator: Augmenting Vector Design Tools with Lazy Data Binding for Expressive Visualization Authoring",
          "venue": "Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems",
          "url": "https://www.semanticscholar.org/paper/26d45d8bc58bfb43d3c4603321b8201219a08e32",
          "abstract": "Building graphical user interfaces for visualization authoring is challenging as one must reconcile the tension between flexible graphics manipulation and procedural visualization generation based on a graphical grammar or declarative languages. To better support designers' workflows and practices, we propose Data Illustrator, a novel visualization framework. In our approach, all visualizations are initially vector graphics; data binding is applied when necessary and only constrains interactive manipulation to that data bound property. The framework augments graphic design tools with new concepts and operators, and describes the structure and generation of a variety of visualizations. Based on the framework, we design and implement a visualization authoring system. The system extends interaction techniques in modern vector design tools for direct manipulation of visualization configurations and parameters. We demonstrate the expressive power of our approach through a variety of examples. A qualitative study shows that designers can use our framework to compose visualizations.",
          "tldr": "Data Illustrator is proposed, a novel visualization framework that extends interaction techniques in modern vector design tools for direct manipulation of visualization configurations and parameters and demonstrates the expressive power of the approach through a variety of examples."
        },
        {
          "id": "lamdu",
          "year": 2022,
          "author": [
            {
              "given": "Eyal",
              "family": "Lotem"
            },
            {
              "given": "Yair",
              "family": "Chuchem"
            }
          ],
          "title": "Lamdu",
          "url": "https://www.lamdu.org/"
        },
        {
          "id": "react",
          "year": 2022,
          "author": [
            {
              "family": "Meta Platforms, Inc."
            }
          ],
          "title": "React – A JavaScript library for building user interfaces",
          "url": "https://reactjs.org/"
        },
        {
          "id": "restructuring-structured-editing",
          "year": 2021,
          "author": [
            {
              "given": "David",
              "family": "Moon"
            },
            {
              "given": "Cyrus",
              "family": "Omar"
            }
          ],
          "title": "Restructuring Structure Editing",
          "url": "https://tylr.fun/essay/"
        },
        {
          "id": "doi:10.1145/22627.22349",
          "doi": "10.1145/22627.22349",
          "s2id": "0d5d9c7bff298475cc2e0d0c9d06465ecd7b3d13",
          "year": 1986,
          "author": [
            {
              "given": "B. A.",
              "family": "Myers",
              "sequence": "first",
              "affiliation": []
            }
          ],
          "title": "Visual programming, programming by example, and program visualization: a taxonomy: ",
          "venue": "Proceedings of the SIGCHI conference on Human factors in computing systems  - CHI '86",
          "url": "https://www.semanticscholar.org/paper/0d5d9c7bff298475cc2e0d0c9d06465ecd7b3d13",
          "abstract": "There has been a great interest recently in systems that use graphics to aid in the programming, debugging, and understanding of computer programs. The terms “Visual Programming” and “Program Visualization” have been applied to these systems. Also, there has been a renewed interest in using examples to help alleviate the complexity of programming. This technique is called “Programming by Example.” This paper attempts to provide more meaning to these terms by giving precise definitions, and then uses these definitions to classify existing systems into a taxonomy. A number of common unsolved problems with most of these systems are also listed.",
          "tldr": "This paper attempts to provide more meaning to Visual Programming and Program Visualization terms by giving precise definitions, and then uses these definitions to classify existing systems into a taxonomy."
        },
        {
          "id": "observable",
          "year": 2022,
          "author": [
            {
              "family": "Observable Inc."
            }
          ],
          "title": "Observable - Explore, analyze, and explain data. As a team.",
          "url": "https://observablehq.com/"
        },
        {
          "id": "observable-data-table-cell",
          "year": 2022,
          "author": [
            {
              "family": "Observable Inc."
            }
          ],
          "title": "Quickly Explore & Analyze Your Data With Data Table Cell / Observable / Observable",
          "url": "https://observablehq.com/@observablehq/introducing-data-table-cell"
        },
        {
          "id": "doi:10.1109/VLHCC.2011.6070422",
          "doi": "10.1109/vlhcc.2011.6070422",
          "s2id": "8f3890d16756f0a7f90c002c8b8de4eed759c925",
          "year": 2011,
          "author": [
            {
              "given": "C.",
              "family": "Omar",
              "sequence": "first",
              "affiliation": []
            },
            {
              "family": "YoungSeok Yoon",
              "sequence": "additional",
              "affiliation": []
            },
            {
              "given": "T. D.",
              "family": "LaToza",
              "sequence": "additional",
              "affiliation": []
            },
            {
              "given": "B. A.",
              "family": "Myers",
              "sequence": "additional",
              "affiliation": []
            }
          ],
          "title": "Active code completion: ",
          "venue": "2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)",
          "url": "https://www.semanticscholar.org/paper/8f3890d16756f0a7f90c002c8b8de4eed759c925",
          "abstract": "Code completion menus have replaced standalone API browsers for most developers because they are more tightly integrated into the development workflow. Refinements to the code completion menu that incorporate additional sources of information have similarly been shown to be valuable, even relative to standalone counterparts offering similar functionality. In this paper, we describe active code completion, an architecture that allows library developers to introduce interactive and highly-specialized code generation interfaces, called palettes, directly into the editor. Using several empirical methods, we examine the contexts in which such a system could be useful, describe the design constraints governing the system architecture as well as particular code completion interfaces, and design one such system, named Graphite, for the Eclipse Java development environment. Using Graphite, we implement a palette for writing regular expressions as our primary example and conduct a small pilot study. In addition to showing the feasibility of this approach, it provides further evidence in support of the claim that integrating specialized code completion interfaces directly into the editor is valuable to professional developers.",
          "tldr": "Active code completion is described, an architecture that allows library developers to introduce interactive and highly-specialized code generation interfaces, called palettes, directly into the editor, and one such system is designed, named Graphite, for the Eclipse Java development environment."
        },
        {
          "id": "doi:10.1145/3290327",
          "doi": "10.1145/3290327",
          "s2id": "0883204dc486793e777a025a7bc129da886a54b3",
          "year": 2018,
          "author": [
            {
              "given": "Cyrus",
              "family": "Omar",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            },
            {
              "given": "Ian",
              "family": "Voysey",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Carnegie Mellon University, USA"
                }
              ]
            },
            {
              "given": "Ravi",
              "family": "Chugh",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            },
            {
              "given": "Matthew A.",
              "family": "Hammer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Colorado Boulder, USA"
                }
              ]
            }
          ],
          "title": "Live functional programming with typed holes: ",
          "venue": "Proceedings of the ACM on Programming Languages",
          "url": "https://www.semanticscholar.org/paper/0883204dc486793e777a025a7bc129da886a54b3",
          "abstract": "Live programming environments aim to provide programmers (and sometimes audiences) with continuous feedback about a program's dynamic behavior as it is being edited. The problem is that programming languages typically assign dynamic meaning only to programs that are complete, i.e. syntactically well-formed and free of type errors. Consequently, live feedback presented to the programmer exhibits temporal or perceptive gaps. This paper confronts this \"gap problem\" from type-theoretic first principles by developing a dynamic semantics for incomplete functional programs, starting from the static semantics for incomplete functional programs developed in recent work on Hazelnut. We model incomplete functional programs as expressions with holes, with empty holes standing for missing expressions or types, and non-empty holes operating as membranes around static and dynamic type inconsistencies. Rather than aborting when evaluation encounters any of these holes as in some existing systems, evaluation proceeds around holes, tracking the closure around each hole instance as it flows through the remainder of the program. Editor services can use the information in these hole closures to help the programmer develop and confirm their mental model of the behavior of the complete portions of the program as they decide how to fill the remaining holes. Hole closures also enable a fill-and-resume operation that avoids the need to restart evaluation after edits that amount to hole filling. Formally, the semantics borrows machinery from both gradual type theory (which supplies the basis for handling unfilled type holes) and contextual modal type theory (which supplies a logical basis for hole closures), combining these and developing additional machinery necessary to continue evaluation past holes while maintaining type safety. We have mechanized the metatheory of the core calculus, called Hazelnut Live, using the Agda proof assistant. We have also implemented these ideas into the Hazel programming environment. The implementation inserts holes automatically, following the Hazelnut edit action calculus, to guarantee that every editor state has some (possibly incomplete) type. Taken together with this paper's type safety property, the result is a proof-of-concept live programming environment where rich dynamic feedback is truly available without gaps, i.e. for every reachable editor state.",
          "tldr": "The semantics borrows machinery from both gradual type theory and contextual modal type theory, combining these and developing additional machinery necessary to continue evaluation past holes while maintaining type safety, and is a proof-of-concept live programming environment where rich dynamic feedback is truly available without gaps."
        },
        {
          "id": "doi:10.1145/3453483.3454059",
          "doi": "10.1145/3453483.3454059",
          "s2id": "98529f85b3ad96dfe2d5b047f66bac1484f80e9f",
          "year": 2021,
          "author": [
            {
              "ORCID": "http://orcid.org/0000-0003-4502-7971",
              "authenticated-orcid": false,
              "given": "Cyrus",
              "family": "Omar",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of Michigan, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0002-1081-2235",
              "authenticated-orcid": false,
              "given": "David",
              "family": "Moon",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Michigan, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0001-6938-7379",
              "authenticated-orcid": false,
              "given": "Andrew",
              "family": "Blinn",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Michigan, USA"
                }
              ]
            },
            {
              "given": "Ian",
              "family": "Voysey",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Carnegie Mellon University, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0001-6578-2005",
              "authenticated-orcid": false,
              "given": "Nick",
              "family": "Collins",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            },
            {
              "ORCID": "http://orcid.org/0000-0002-1339-2889",
              "authenticated-orcid": false,
              "given": "Ravi",
              "family": "Chugh",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Chicago, USA"
                }
              ]
            }
          ],
          "title": "Filling typed holes with live GUIs: ",
          "venue": "Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation",
          "url": "https://www.semanticscholar.org/paper/98529f85b3ad96dfe2d5b047f66bac1484f80e9f",
          "abstract": "Text editing is powerful, but some types of expressions are more naturally represented and manipulated graphically. Examples include expressions that compute colors, music, animations, tabular data, plots, diagrams, and other domain-specific data structures. This paper introduces live literals, or livelits, which allow clients to fill holes of types like these by directly manipulating a user-defined GUI embedded persistently into code. Uniquely, livelits are compositional: a livelit GUI can itself embed spliced expressions, which are typed, lexically scoped, and can in turn embed other livelits. Livelits are also uniquely live: a livelit can provide continuous feedback about the run-time implications of the client’s choices even when splices mention bound variables, because the system continuously gathers closures associated with the hole that the livelit is filling. We integrate livelits into Hazel, a live hole-driven programming environment, and describe case studies that exercise these novel capabilities. We then define a simply typed livelit calculus, which specifies how livelits operate as live graphical macros. The metatheory of macro expansion has been mechanized in Agda.",
          "tldr": "This paper introduces live literals, or livelits, which allow clients to fill holes of types like these by directly manipulating a user-defined GUI embedded persistently into code."
        },
        {
          "id": "everest",
          "year": 2021,
          "author": [
            {
              "given": "Everest",
              "family": "Pipkin"
            }
          ],
          "title": "been having some  motivation troubles  recently (god who hasn't) so i'm gonna pick a tiny personal project off my ideas list and see if i can get it working by morning. tonight - a lil bash script that emails me the summaries of 5 random wikipedia articles each morning",
          "url": "https://twitter.com/everestpipkin/status/1349274983651012609"
        },
        {
          "id": "doi:10.22152/programming-journal.org/2019/3/11",
          "doi": "10.22152/programming-journal.org/2019/3/11",
          "s2id": "160f3c45e133bc00e331ee38dfa933ca9ad11c31",
          "year": 2019,
          "author": [
            {
              "given": "Joe",
              "family": "Politz",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of California San Diego, United States"
                }
              ]
            },
            {
              "given": "Benjamin",
              "family": "Lerner",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Northeastern University, United States"
                }
              ]
            },
            {
              "given": "Sorawee",
              "family": "Porncharoenwase",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Brown University, United States"
                }
              ]
            },
            {
              "given": "Shriram",
              "family": "Krishnamurthi",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Brown University, United States"
                }
              ]
            }
          ],
          "title": "Event Loops as First-Class Values: A Case Study in Pedagogic Language Design: ",
          "venue": "The Art, Science, and Engineering of Programming",
          "url": "https://www.semanticscholar.org/paper/160f3c45e133bc00e331ee38dfa933ca9ad11c31",
          "abstract": "The World model is an existing functional input-output mechanism for event-driven programming. It is used in numerous popular textbooks and curricular settings. The World model conflates two different tasks -- the definition of an event processor and its execution -- into one. This conflation imposes a significant (even unacceptable) burden on student users in several educational settings where we have tried to use it, e.g., for teaching physics. While it was tempting to pile on features to address these issues, we instead used the Scheme language design dictum of removing weaknesses that made them seem necessary. By separating the two tasks above, we arrived at a slightly different primitive, the reactor, as our basis. This only defines the event processor, and a variety of execution operators dictate how it runs. The new design enables programmatic control over event-driven programs. This simplifies reflecting on program behavior, and eliminates many unnecessary curricular dependencies imposed by the old design. This work has been implemented in the Pyret programming language. The separation of concerns has enabled new curricula, such as the Bootstrap:Physics curriculum, to take flight. Thousands of students use this new mechanism every year. We believe that reducing impedance mismatches improves their educational experience.",
          "tldr": "The World model is an existing functional input-output mechanism for event-driven programming that simplifies reflecting on program behavior, and eliminates many unnecessary curricular dependencies imposed by the old design, and has been implemented in the Pyret programming language."
        },
        {
          "id": "doi:10.22152/programming-journal.org/2019/3/9",
          "doi": "10.22152/programming-journal.org/2019/3/9",
          "s2id": "17ec1a022caebc5a1e0d64bff4cc36a7b2a526df",
          "year": 2019,
          "author": [
            {
              "given": "David",
              "family": "Rauch",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Patrick",
              "family": "Rein",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Stefan",
              "family": "Ramson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Jens",
              "family": "Lincke",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, University of Potsdam, Germany"
                }
              ]
            },
            {
              "given": "Robert",
              "family": "Hirschfeld",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso-Plattner-Institut (HPI), Germany"
                }
              ]
            }
          ],
          "title": "Babylonian-style Programming: Design and Implementation of an Integration of Live Examples into General-purpose Source Code: ",
          "venue": "The Art, Science, and Engineering of Programming",
          "url": "https://www.semanticscholar.org/paper/17ec1a022caebc5a1e0d64bff4cc36a7b2a526df",
          "abstract": "When working on a program, developers traditionally have to simulate the behavior of the abstract code in their heads until they can execute the application. Live programming aims to support the development and comprehension of programs by providing more immediate feedback on program behavior, but the divide between code and behavior often remains. The goal of example-based live programming is to remove this gap by allowing programmers to explore the actual behavior of their code during development. This is achieved by defining live examples for parts of the application. The idea of live examples has been already addressed in other tools and environments. However, most of those solutions are limited to specific domains and are suitable only for small programs. Thus, we aim to extend the application of example-based live programming to more complex programs potentially spanning multiple modules. We investigate existing solutions to derive a set of requirements for an integration of live examples into source code. Based on these requirements we propose a new approach to live examples and present a prototype in its support. We reproduce, discuss, and extend scenarios from related work to show the practicality of our approach in the context of larger, more complicated, and with that also more realistic scenarios. Also, we measure and evaluate the system response time of our prototypical implementation. Our first results show that example-based live programming can provide more insights into the run-time behavior of parameterized code for non-trivial programs. They also reveal unsolved and new challenges affecting example-based live programming environments. In presenting this more general approach to example-based live programming, we hope to motivate further research into this area and to make practical solutions available.",
          "tldr": "The first results show that example- based live programming can provide more insights into the run-time behavior of parameterized code for non-trivial programs and reveal unsolved and new challenges affecting example-based live programming environments."
        },
        {
          "id": "doi:10.22152/programming-journal.org/2019/3/1",
          "doi": "10.22152/programming-journal.org/2019/3/1",
          "s2id": "d46f8936a2fe30cb3d6a2ad00f95d03be6adecd1",
          "year": 2018,
          "author": [
            {
              "given": "Patrick",
              "family": "Rein",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Stefan",
              "family": "Ramson",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            },
            {
              "given": "Jens",
              "family": "Lincke",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, University of Potsdam, Germany"
                }
              ]
            },
            {
              "given": "Robert",
              "family": "Hirschfeld",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso-Plattner-Institut (HPI), Germany"
                }
              ]
            },
            {
              "given": "Tobias",
              "family": "Pape",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Hasso Plattner Institute, Germany"
                }
              ]
            }
          ],
          "title": "Exploratory and Live, Programming and Coding: A Literature Study Comparing Perspectives on Liveness",
          "venue": "The Art, Science, and Engineering of Programming",
          "url": "https://www.semanticscholar.org/paper/d46f8936a2fe30cb3d6a2ad00f95d03be6adecd1",
          "abstract": "Various programming tools, languages, and environments give programmers the impression of changing a program while it is running. This experience of liveness has been discussed for over two decades and a broad spectrum of research on this topic exists. Amongst others, this work has been carried out in the communities around three major ideas which incorporate liveness as an important aspect: live programming, exploratory programming, and live coding. While there have been publications on the focus of each particular community, the overall spectrum of liveness across these three communities has not been investigated yet. Thus, we want to delineate the variety of research on liveness. At the same time, we want to investigate overlaps and differences in the values and contributions between the three communities. \nTherefore, we conducted a literature study with a sample of 212 publications on the terms retrieved from three major indexing services. On this sample, we conducted a thematic analysis regarding the following aspects: motivation for liveness, application domains, intended outcomes of running a system, and types of contributions. We also gathered bibliographic information such as related keywords and prominent publications. \nBesides other characteristics the results show that the field of exploratory programming is mostly about technical designs and empirical studies on tools for general-purpose programming. In contrast, publications on live coding have the most variety in their motivations and methodologies with a majority being empirical studies with users. As expected, most publications on live coding are applied to performance art. Finally, research on live programming is mostly motivated by making programming more accessible and easier to understand, evaluating their tool designs through empirical studies with users. \nIn delineating the spectrum of work on liveness, we hope to make the individual communities more aware of the work of the others. Further, by giving an overview of the values and methods of the individual communities, we hope to provide researchers new to the field of liveness with an initial overview.",
          "tldr": "A literature study with a sample of 212 publications on the terms retrieved from three major indexing services shows that the field of exploratory programming is mostly about technical designs and empirical studies on tools for general-purpose programming and publications on live coding have the most variety."
        },
        {
          "id": "doi:10.1109/TVCG.2018.2865158",
          "doi": "10.1109/tvcg.2018.2865158",
          "s2id": "b01c3150b37c318dc03c7663bade80e0a40275ad",
          "year": 2019,
          "author": [
            {
              "given": "Donghao",
              "family": "Ren",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "Bongshin",
              "family": "Lee",
              "sequence": "additional",
              "affiliation": []
            },
            {
              "given": "Matthew",
              "family": "Brehmer",
              "sequence": "additional",
              "affiliation": []
            }
          ],
          "title": "Charticulator: Interactive Construction of Bespoke Chart Layouts: ",
          "venue": "IEEE Transactions on Visualization and Computer Graphics",
          "url": "https://www.semanticscholar.org/paper/b01c3150b37c318dc03c7663bade80e0a40275ad",
          "abstract": "We present Charticulator, an interactive authoring tool that enables the creation of bespoke and reusable chart layouts. Charticulator is our response to most existing chart construction interfaces that require authors to choose from predefined chart layouts, thereby precluding the construction of novel charts. In contrast, Charticulator transforms a chart specification into mathematical layout constraints and automatically computes a set of layout attributes using a constraint-solving algorithm to realize the chart. It allows for the articulation of compound marks or glyphs as well as links between these glyphs, all without requiring any coding or knowledge of constraint satisfaction. Furthermore, thanks to the constraint-based layout approach, Charticulator can export chart designs into reusable templates that can be imported into other visualization tools. In addition to describing Charticulator's conceptual framework and design, we present three forms of evaluation: a gallery to illustrate its expressiveness, a user study to verify its usability, and a click-count comparison between Charticulator and three existing tools. Finally, we discuss the limitations and potentials of Charticulator as well as directions for future research. Charticulator is available with its source code at https://charticulator.com.",
          "tldr": "Charticulator is an interactive authoring tool that enables the creation of bespoke and reusable chart layouts and transforms a chart specification into mathematical layout constraints and automatically computes a set of layout attributes using a constraint-solving algorithm to realize the chart."
        },
        {
          "id": "doi:10.1111/cgf.12391",
          "doi": "10.1111/cgf.12391",
          "s2id": "dae2c3968fa06688cd99b2e024416dfcd50a36f7",
          "year": 2014,
          "author": [
            {
              "given": "Arvind",
              "family": "Satyanarayan",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "Stanford University"
                }
              ]
            },
            {
              "given": "Jeffrey",
              "family": "Heer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington"
                }
              ]
            }
          ],
          "title": "Lyra: An Interactive Visualization Design Environment: Lyra: An Interactive Visualization Design Environment",
          "venue": "Computer Graphics Forum",
          "url": "https://www.semanticscholar.org/paper/dae2c3968fa06688cd99b2e024416dfcd50a36f7",
          "abstract": "We present Lyra, an interactive environment for designing customized visualizations without writing code. Using drag‐and‐drop interactions, designers can bind data to the properties of graphical marks to author expressive visualization designs. Marks can be moved, rotated and resized using handles; relatively positioned using connectors; and parameterized by data fields using property drop zones. Lyra also provides a data pipeline interface for iterative, visual specification of data transformations and layout algorithms. Visualizations created with Lyra are represented as specifications in Vega, a declarative visualization grammar that enables sharing and reuse. We evaluate Lyra's expressivity and accessibility through diverse examples and studies with journalists and visualization designers. We find that Lyra enables users to rapidly develop customized visualizations, covering a design space comparable to existing programming‐based tools.",
          "tldr": "Lyra enables users to rapidly develop customized visualizations, covering a design space comparable to existing programming‐based tools, and is evaluated for its expressivity and accessibility."
        },
        {
          "id": "yoshiki",
          "year": 2019,
          "author": [
            {
              "given": "Yoshiki",
              "family": "Schmitz"
            }
          ],
          "title": "I've been jamming on this concept for making data-driven designs...",
          "url": "https://twitter.com/yoshikischmitz/status/1176642448077967362"
        },
        {
          "id": "natto-hn",
          "year": 2021,
          "author": [
            {
              "given": "Paul",
              "family": "Shen"
            }
          ],
          "title": "Show HN: Natto – a canvas for writing and manipulating JavaScript",
          "url": "https://news.ycombinator.com/item?id=26478548"
        },
        {
          "id": "natto",
          "year": 2022,
          "author": [
            {
              "given": "Paul",
              "family": "Shen"
            }
          ],
          "title": "welcome! – natto",
          "url": "https://natto.dev/"
        },
        {
          "id": "doi:10.1023/A:1008716330212",
          "doi": "10.1023/a:1008716330212",
          "s2id": "d857a39b5a421ace552e6a2f6c83977086fb982f",
          "year": 1999,
          "author": [
            {
              "given": "Frank M.",
              "family": "Shipman",
              "sequence": "first",
              "affiliation": []
            },
            {
              "given": "Catherine C.",
              "family": "Marshall",
              "sequence": "additional",
              "affiliation": []
            }
          ],
          "title": "Formality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems: ",
          "venue": "Computer Supported Cooperative Work (CSCW)",
          "url": "https://www.semanticscholar.org/paper/d857a39b5a421ace552e6a2f6c83977086fb982f",
          "tldr": "It is posed that, while it is impossible to remove all formalisms from computing systems, system designers need to match the level of formal expression entailed with the goals and situation of the users -- a design criteria not commonly mentioned in current interface design."
        },
        {
          "id": "live-literals",
          "year": 2016,
          "author": [
            {
              "given": "Tijs",
              "family": "Storm",
              "non-dropping-particle": "van der"
            },
            {
              "given": "Felienne",
              "family": "Hermans"
            }
          ],
          "title": "Live Literals",
          "url": "https://homepages.cwi.nl/~storm/livelit/livelit.html"
        },
        {
          "id": "doi:10.1016/S1045-926X(05)80012-6",
          "doi": "10.1016/s1045-926x(05)80012-6",
          "s2id": "0ba8fdbb23ca2ab15d2389cd68c10c410b467a70",
          "year": 1990,
          "author": [
            {
              "given": "Steven L.",
              "family": "Tanimoto",
              "sequence": "first",
              "affiliation": []
            }
          ],
          "title": "VIVA: A visual language for image processing: ",
          "venue": "Journal of Visual Languages &amp; Computing",
          "url": "https://www.semanticscholar.org/paper/0ba8fdbb23ca2ab15d2389cd68c10c410b467a70",
          "tldr": "VIVA is a proposed visual language for image processing that serves as an effective teaching tool for students of image processing and takes account of several secondary goals, including the completion of a software platform for research in human/image interaction and the establishment of a presentation medium for image-processing algorithms."
        },
        {
          "id": "Tanimoto:2013:PEL",
          "doi": "10.1109/LIVE.2013.6617346",
          "s2id": "cd95f3f397e967005d6f108d0dbf3c5c7ffbcce9",
          "year": 2013,
          "author": [
            {
              "given": "Steven L.",
              "family": "Tanimoto"
            }
          ],
          "title": "A Perspective on the Evolution of Live Programming",
          "venue": "Proceedings of the 1st International Workshop on Live Programming",
          "url": "https://www.semanticscholar.org/paper/cd95f3f397e967005d6f108d0dbf3c5c7ffbcce9",
          "abstract": "Liveness in programming environments generally refers to the ability to modify a running program. Liveness is one form of a more general class of behaviors by a programming environment that provide information to programmers about what they are constructing. This paper gives a brief historical perspective on liveness and proposes an extension of a hierarchy given in 1990, to now account for even more powerful execution-oriented tools for programmers. In addition, while liveness concerns the timeliness of execution feedback, considering a broader array of forms of feedback is helpful both in better understanding liveness and in designing ever more powerful development tools.",
          "tldr": "While liveness concerns the timeliness of execution feedback, considering a broader array of forms of feedback is helpful both in better understanding liveness and in designing ever more powerful development tools."
        },
        {
          "id": "inventing-on-principle",
          "year": 2012,
          "author": [
            {
              "given": "Bret",
              "family": "Victor"
            }
          ],
          "title": "Inventing on Principle",
          "url": "https://vimeo.com/36579366"
        },
        {
          "id": "learnable-programming",
          "year": 2012,
          "author": [
            {
              "given": "Bret",
              "family": "Victor"
            }
          ],
          "title": "Learnable Programming",
          "url": "http://worrydream.com/LearnableProgramming/"
        },
        {
          "id": "wikipedia-grafting",
          "year": 2022,
          "author": [
            {
              "family": "Wikipedia contributors"
            }
          ],
          "title": "Grafting — Wikipedia, The Free Encyclopedia",
          "url": "https://en.wikipedia.org/w/index.php?title=Grafting&oldid=1095365064"
        },
        {
          "id": "doi:10.1145/3025453.3025768",
          "doi": "10.1145/3025453.3025768",
          "s2id": "6a5003f5ae44c94401b93513e23ceb17922be3c4",
          "year": 2017,
          "author": [
            {
              "given": "Kanit",
              "family": "Wongsuphasawat",
              "sequence": "first",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Zening",
              "family": "Qu",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Dominik",
              "family": "Moritz",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Riley",
              "family": "Chang",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Felix",
              "family": "Ouk",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Anushka",
              "family": "Anand",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tableau Research, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Jock",
              "family": "Mackinlay",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "Tableau Software, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Bill",
              "family": "Howe",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            },
            {
              "given": "Jeffrey",
              "family": "Heer",
              "sequence": "additional",
              "affiliation": [
                {
                  "name": "University of Washington, Seattle, WA, USA"
                }
              ]
            }
          ],
          "title": "Voyager 2: Augmenting Visual Analysis with Partial View Specifications",
          "venue": "Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems",
          "url": "https://www.semanticscholar.org/paper/6a5003f5ae44c94401b93513e23ceb17922be3c4",
          "abstract": "Visual data analysis involves both open-ended and focused exploration. Manual chart specification tools support question answering, but are often tedious for early-stage exploration where systematic data coverage is needed. Visualization recommenders can encourage broad coverage, but irrelevant suggestions may distract users once they commit to specific questions. We present Voyager 2, a mixed-initiative system that blends manual and automated chart specification to help analysts engage in both open-ended exploration and targeted question answering. We contribute two partial specification interfaces: wildcards let users specify multiple charts in parallel, while related views suggest visualizations relevant to the currently specified chart. We present our interface design and applications of the CompassQL visualization query language to enable these interfaces. In a controlled study we find that Voyager 2 leads to increased data field coverage compared to a traditional specification tool, while still allowing analysts to flexibly drill-down and answer specific questions.",
          "tldr": "This work presents Voyager 2, a mixed-initiative system that blends manual and automated chart specification to help analysts engage in both open-ended exploration and targeted question answering and contributes two partial specification interfaces."
        }
      ]
    }
  }
}